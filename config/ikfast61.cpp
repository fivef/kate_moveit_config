/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-08-02 12:22:30.565938
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=((IkReal(1.00000000000000))*(x5));
x11=((IkReal(0.139000000000000))*(x4));
x12=((IkReal(1.00000000000000))*(x7));
x13=((IkReal(1.00000000000000))*(x3));
x14=((IkReal(0.342300000000000))*(x3));
x15=((IkReal(0.139000000000000))*(x3));
x16=((IkReal(1.00000000000000))*(x4));
x17=((x1)*(x6));
x18=((x2)*(x6));
x19=((x1)*(x2));
x20=((x0)*(x1));
x21=((x3)*(x4));
x22=((x2)*(x4));
x23=((x0)*(x2));
x24=((IkReal(0.342300000000000))*(x4)*(x6));
x25=((IkReal(0.342300000000000))*(x20));
IkReal x26=((IkReal(0.342300000000000))*(x0));
eetrans[0]=((((x5)*(((((IkReal(-1.00000000000000))*(x22)*(x26)))+(((x14)*(x20)))))))+(((IkReal(0.190000000000000))*(x20)))+(((IkReal(-1.00000000000000))*(x11)*(x23)))+(((x7)*(((((x19)*(x26)))+(((x0)*(x14)*(x4)))))))+(((x15)*(x20))));
eetrans[1]=((((IkReal(0.190000000000000))*(x17)))+(((IkReal(-1.00000000000000))*(x11)*(x18)))+(((x5)*(((((x14)*(x17)))+(((IkReal(-0.342300000000000))*(x18)*(x4)))))))+(((x7)*(((((IkReal(0.342300000000000))*(x17)*(x2)))+(((x14)*(x4)*(x6)))))))+(((x15)*(x17))));
eetrans[2]=((IkReal(0.201500000000000))+(((x7)*(((((IkReal(-1.00000000000000))*(x1)*(x14)))+(((IkReal(0.342300000000000))*(x22)))))))+(((x11)*(x3)))+(((IkReal(0.190000000000000))*(x4)))+(((x5)*(((((x14)*(x4)))+(((IkReal(0.342300000000000))*(x19)))))))+(((IkReal(0.139000000000000))*(x19))));
eerot[0]=((((IkReal(-1.00000000000000))*(x6)*(x9)))+(((IkReal(-1.00000000000000))*(x8)*(((((x12)*(((((IkReal(-1.00000000000000))*(x13)*(x20)))+(((x16)*(x23)))))))+(((x10)*(((((x0)*(x21)))+(((x0)*(x19))))))))))));
eerot[1]=((((x0)*(x9)))+(((IkReal(-1.00000000000000))*(x8)*(((((x12)*(((((IkReal(-1.00000000000000))*(x13)*(x17)))+(((x16)*(x18)))))))+(((x10)*(((((x21)*(x6)))+(((x17)*(x2))))))))))));
IkReal x27=((IkReal(1.00000000000000))*(x13));
eerot[2]=((IkReal(-1.00000000000000))*(x8)*(((((x12)*(((((IkReal(-1.00000000000000))*(x19)))+(((IkReal(-1.00000000000000))*(x27)*(x4)))))))+(((x10)*(((((IkReal(-1.00000000000000))*(x1)*(x27)))+(x22))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 5; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.201500000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(((IkReal(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH && IKabs(px) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x28=IKatan2(((IkReal(-1.00000000000000))*(py)), px);
j2array[0]=((IkReal(-1.00000000000000))*(x28));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x28))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

IkReal op[4+1], zeror[4];
int numroots;
op[0]=((((IkReal(0.535793160000000))*(cj2)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(1.52000000000000))*(cj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(0.101800700400000))*(cj2)*(py)*(r00)*(r01)))+(((IkReal(4.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.535793160000000))*(cj2)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(0.760000000000000))*(pp)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(py)*(sj2)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.288800000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((py)*(py))))+((((pp)*(pp))*((r02)*(r02))))+(((IkReal(0.401561160000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(0.401561160000000))*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-0.760000000000000))*(pp)*(px)*(r00)*(r01)*(sj2)))+(((IkReal(0.0179421443939241))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.535793160000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))))+((((pp)*(pp))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-0.267896580000000))*(pp)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-0.760000000000000))*(cj2)*(pp)*(px)*((r00)*(r00))))+(((IkReal(0.134232000000000))*(cj2)*(px)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(0.535793160000000))*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(px)*(r00)*(r01)*(sj2)*((pz)*(pz))))+(((IkReal(0.535793160000000))*(cj2)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-0.0762966204000000))*(py)*(sj2)*((r02)*(r02))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(0.00102289891792410))*((r02)*(r02))))+(((IkReal(16.0000000000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(0.101800700400000))*(py)*(sj2)*((r01)*(r01))))+(((IkReal(0.0179421443939241))*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(1.52000000000000))*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(0.535793160000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(1.52000000000000))*(cj2)*(px)*((pz)*(pz))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(cj2)*(py)*(sj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(16.0000000000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(0.178097320800000))*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(0.535793160000000))*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(px)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-0.0762966204000000))*(cj2)*(px)*((r02)*(r02))))+(((IkReal(0.401561160000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(0.535793160000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(8.00000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(0.535793160000000))*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(cj2)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(1.52000000000000))*(cj2)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.391393160000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(pz)*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(py)*(sj2)*((pz)*(pz))*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(1.52000000000000))*(px)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(0.535793160000000))*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(0.101800700400000))*(px)*(r00)*(r01)*(sj2)))+(((IkReal(0.0671160000000000))*((pz)*(pz))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(py)*(sj2)*((px)*(px))*((r00)*(r00))))+(((IkReal(0.134232000000000))*(cj2)*(r00)*(r01)*(sj2)*((pz)*(pz))))+(((IkReal(0.101800700400000))*(cj2)*(px)*((r00)*(r00))))+((((cj2)*(cj2))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(-0.123496580000000))*(pp)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((py)*(py))*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(0.178097320800000))*(cj2)*(pz)*(r00)*(r02)))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.760000000000000))*(cj2)*(pp)*(px)*((r02)*(r02))))+(((IkReal(2.00000000000000))*(cj2)*(r00)*(r01)*(sj2)*((pp)*(pp))))+(((IkReal(-0.535793160000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.144400000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(py)*(r00)*(r01)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(1.52000000000000))*(cj2)*(px)*((py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(-0.267896580000000))*(pp)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(cj2)*(px)*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.401561160000000))*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(0.0671160000000000))*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(pp)*(pz)*(r00)*(r02)))+(((IkReal(-0.760000000000000))*(cj2)*(pp)*(py)*(r00)*(r01)))+(((IkReal(4.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(py)*(pz)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(1.52000000000000))*(r01)*(r02)*(sj2)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.0358842887878482))*(cj2)*(r00)*(r01)*(sj2)))+(((IkReal(1.52000000000000))*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(4.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(cj2)*(pz)*(r00)*(r02)*((px)*(px))))+(((IkReal(4.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(8.00000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))*((py)*(py))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(-0.760000000000000))*(pp)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(3.04000000000000))*(cj2)*(py)*(r00)*(r01)*((px)*(px))))+(((IkReal(0.144400000000000))*((py)*(py))*((r01)*(r01)))));
op[1]=((((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-6.08000000000000))*(px)*(py)*(pz)*(r00)*(r01)))+(((IkReal(-0.203601400800000))*(px)*(r00)*(r02)))+(((IkReal(-0.152593240800000))*(cj2)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(-0.152593240800000))*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-0.577600000000000))*(cj2)*(px)*(pz)*((r00)*(r00))))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(-3.04000000000000))*((pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(0.305186481600000))*(cj2)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-0.203601400800000))*(py)*(r01)*(r02)))+(((IkReal(-0.577600000000000))*(cj2)*(r00)*(r02)*((px)*(px))))+(((IkReal(3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(-0.577600000000000))*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-0.577600000000000))*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(-0.577600000000000))*(cj2)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(3.04000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-0.203601400800000))*(pz)*((r02)*(r02))))+(((IkReal(-6.08000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-0.577600000000000))*(cj2)*(px)*(pz)*((r02)*(r02))))+(((IkReal(-0.0676769819040000))*(cj2)*(r00)*(r02)))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-0.577600000000000))*(px)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-3.04000000000000))*(cj2)*(pp)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-6.08000000000000))*(px)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(py)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(-0.577600000000000))*(cj2)*(px)*(py)*(r01)*(r02)))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)))+(((IkReal(0.152593240800000))*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(0.577600000000000))*(pp)*(r01)*(r02)*(sj2)))+(((IkReal(0.152593240800000))*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-0.152593240800000))*(cj2)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-0.577600000000000))*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(3.04000000000000))*(py)*(r01)*(r02)*((pz)*(pz))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(pp)*(pz)*((r02)*(r02))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-0.577600000000000))*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(-6.08000000000000))*(py)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(-0.577600000000000))*(cj2)*(py)*(pz)*(r00)*(r01)))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-0.577600000000000))*(px)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-3.04000000000000))*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-0.0676769819040000))*(r01)*(r02)*(sj2)))+(((IkReal(-3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(-0.152593240800000))*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(0.577600000000000))*(cj2)*(pp)*(r00)*(r02)))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(pz)*((px)*(px))*((r00)*(r00))))+(((IkReal(3.04000000000000))*(px)*(r00)*(r02)*((cj2)*(cj2))*((pz)*(pz)))));
op[2]=((((IkReal(0.288800000000000))*((py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*((cj2)*(cj2))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.0836136800000000))*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*((cj2)*(cj2))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(16.0000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.268464000000000))*(cj2)*(r00)*(r01)*(sj2)*((pz)*(pz))))+(((IkReal(-8.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.0418068400000000))*(pp)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-0.0836136800000000))*(cj2)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(16.0000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(2.00000000000000))*((cj2)*(cj2))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(16.0000000000000))*(py)*(r00)*(r01)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(16.0000000000000))*(cj2)*(px)*(py)*(sj2)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.134232000000000))*((pz)*(pz))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.268464000000000))*(cj2)*(px)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(-0.824593160000000))*(pp)*((r02)*(r02))))+(((IkReal(-0.0317926931161518))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-0.352077680000000))*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(32.0000000000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(8.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.0836136800000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)))+(((IkReal(-0.0635853862323036))*(cj2)*(r00)*(r01)*(sj2)))+(((IkReal(0.577600000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(0.0697227797398482))*((r02)*(r02))))+(((IkReal(0.134232000000000))*((cj2)*(cj2))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(8.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(2.22678632000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(2.22678632000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(8.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(-0.0317926931161518))*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(0.134232000000000))*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(-0.352077680000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(16.0000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.134232000000000))*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(16.0000000000000))*(pz)*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(16.0000000000000))*(cj2)*(py)*(sj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-0.0836136800000000))*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-0.0836136800000000))*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(2.00000000000000))*((pp)*(pp))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(-0.0836136800000000))*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-0.0836136800000000))*(cj2)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(2.00000000000000))*((pp)*(pp))*((r02)*(r02))))+(((IkReal(0.0418068400000000))*(pp)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(1.93798632000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(cj2)*(px)*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(0.288800000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(-0.352077680000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-8.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*((cj2)*(cj2))*((px)*(px))*((py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(4.00000000000000))*(cj2)*(r00)*(r01)*(sj2)*((pp)*(pp))))+(((IkReal(-8.00000000000000))*(pp)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(32.0000000000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))*((py)*(py))))+(((IkReal(16.0000000000000))*(py)*(pz)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(-0.352077680000000))*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-0.0836136800000000))*(cj2)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(32.0000000000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(16.0000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(-0.0836136800000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(8.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj2)*(sj2)))));
op[3]=((((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-6.08000000000000))*(px)*(py)*(pz)*(r00)*(r01)))+(((IkReal(-0.203601400800000))*(px)*(r00)*(r02)))+(((IkReal(-0.152593240800000))*(cj2)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(-0.152593240800000))*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(0.0676769819040000))*(r01)*(r02)*(sj2)))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(-3.04000000000000))*((pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.577600000000000))*(cj2)*(pp)*(r00)*(r02)))+(((IkReal(0.305186481600000))*(cj2)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-0.203601400800000))*(py)*(r01)*(r02)))+(((IkReal(0.577600000000000))*(cj2)*(py)*(pz)*(r00)*(r01)))+(((IkReal(0.577600000000000))*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.0676769819040000))*(cj2)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(0.577600000000000))*(cj2)*(px)*(pz)*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(3.04000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-0.203601400800000))*(pz)*((r02)*(r02))))+(((IkReal(-6.08000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(cj2)*(pp)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-6.08000000000000))*(px)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(py)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)))+(((IkReal(0.577600000000000))*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(0.152593240800000))*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(0.152593240800000))*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.577600000000000))*(cj2)*(r00)*(r02)*((px)*(px))))+(((IkReal(-0.152593240800000))*(cj2)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(0.577600000000000))*(cj2)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(0.577600000000000))*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(3.04000000000000))*(py)*(r01)*(r02)*((pz)*(pz))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(pp)*(pz)*((r02)*(r02))))+(((IkReal(0.577600000000000))*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-6.08000000000000))*(py)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r00)*(r00))))+(((IkReal(0.577600000000000))*(cj2)*(px)*(pz)*((r02)*(r02))))+(((IkReal(-3.04000000000000))*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(0.577600000000000))*(cj2)*(px)*(py)*(r01)*(r02)))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-3.04000000000000))*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-0.577600000000000))*(pp)*(r01)*(r02)*(sj2)))+(((IkReal(-3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(-0.152593240800000))*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(0.577600000000000))*(px)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(pz)*((px)*(px))*((r00)*(r00))))+(((IkReal(3.04000000000000))*(px)*(r00)*(r02)*((cj2)*(cj2))*((pz)*(pz))))+(((IkReal(0.577600000000000))*(px)*(pz)*(r00)*(r01)*(sj2))));
op[4]=((((IkReal(0.535793160000000))*(cj2)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(4.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.535793160000000))*(cj2)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(py)*(sj2)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.288800000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((py)*(py))))+((((pp)*(pp))*((r02)*(r02))))+(((IkReal(-3.04000000000000))*(cj2)*(py)*(r00)*(r01)*((px)*(px))))+(((IkReal(0.401561160000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(0.401561160000000))*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(0.0179421443939241))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.535793160000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-0.178097320800000))*(cj2)*(pz)*(r00)*(r02)))+((((pp)*(pp))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-0.267896580000000))*(pp)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-1.52000000000000))*(px)*(r00)*(r01)*(sj2)*((pz)*(pz))))+(((IkReal(0.134232000000000))*(cj2)*(px)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(0.760000000000000))*(pp)*(px)*(r00)*(r01)*(sj2)))+(((IkReal(0.760000000000000))*(cj2)*(pp)*(py)*(r00)*(r01)))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(0.535793160000000))*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(-1.52000000000000))*(px)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-1.52000000000000))*(cj2)*(px)*(py)*(pz)*(r01)*(r02)))+(((IkReal(-1.52000000000000))*(cj2)*(px)*((py)*(py))*((r01)*(r01))))+(((IkReal(0.535793160000000))*(cj2)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(0.00102289891792410))*((r02)*(r02))))+(((IkReal(16.0000000000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(-0.101800700400000))*(cj2)*(px)*((r00)*(r00))))+(((IkReal(0.0179421443939241))*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.535793160000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(-0.101800700400000))*(cj2)*(py)*(r00)*(r01)))+(((IkReal(8.00000000000000))*(cj2)*(py)*(sj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(16.0000000000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(0.535793160000000))*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.760000000000000))*(pp)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(0.401561160000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-0.760000000000000))*(cj2)*(pp)*(px)*((r02)*(r02))))+(((IkReal(0.535793160000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(8.00000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(0.535793160000000))*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.391393160000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.101800700400000))*(px)*(r00)*(r01)*(sj2)))+(((IkReal(8.00000000000000))*(pz)*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(0.535793160000000))*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-1.52000000000000))*(py)*(sj2)*((px)*(px))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((pz)*(pz))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.0762966204000000))*(cj2)*(px)*((r02)*(r02))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-1.52000000000000))*(py)*(sj2)*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.134232000000000))*(cj2)*(r00)*(r01)*(sj2)*((pz)*(pz))))+((((cj2)*(cj2))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(-1.52000000000000))*(cj2)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(-0.123496580000000))*(pp)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((py)*(py))*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-1.52000000000000))*(cj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-0.760000000000000))*(pp)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(-0.101800700400000))*(py)*(sj2)*((r01)*(r01))))+(((IkReal(2.00000000000000))*(cj2)*(r00)*(r01)*(sj2)*((pp)*(pp))))+(((IkReal(-0.535793160000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)))+(((IkReal(-1.52000000000000))*(r01)*(r02)*(sj2)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.144400000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(pz)*(r00)*(r02)))+(((IkReal(8.00000000000000))*(py)*(r00)*(r01)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(-1.52000000000000))*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(-0.267896580000000))*(pp)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.401561160000000))*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(0.0671160000000000))*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(px)*((pz)*(pz))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(py)*(pz)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(-4.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(1.52000000000000))*(pp)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(0.0358842887878482))*(cj2)*(r00)*(r01)*(sj2)))+(((IkReal(4.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(pz)*(r00)*(r02)*((px)*(px))))+(((IkReal(0.760000000000000))*(cj2)*(pp)*(px)*((r00)*(r00))))+(((IkReal(4.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(8.00000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(0.0762966204000000))*(py)*(sj2)*((r02)*(r02))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-0.178097320800000))*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(-1.52000000000000))*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(16.0000000000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))*((py)*(py))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(0.144400000000000))*((py)*(py))*((r01)*(r01)))));
polyroots4(op,zeror,numroots);
IkReal j3array[4], cj3array[4], sj3array[4], tempj3array[1];
int numsolutions = 0;
for(int ij3 = 0; ij3 < numroots; ++ij3)
{
IkReal htj3 = zeror[ij3];
tempj3array[0]=((IkReal(2.00000000000000))*(atan(htj3)));
for(int kj3 = 0; kj3 < 1; ++kj3)
{
j3array[numsolutions] = tempj3array[kj3];
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
sj3array[numsolutions] = IKsin(j3array[numsolutions]);
cj3array[numsolutions] = IKcos(j3array[numsolutions]);
numsolutions++;
}
}
bool j3valid[4]={true,true,true,true};
_nj3 = 4;
for(int ij3 = 0; ij3 < numsolutions; ++ij3)
    {
if( !j3valid[ij3] )
{
    continue;
}
    j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
htj3 = IKtan(j3/2);

_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < numsolutions; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
sj6array[0]=((((IkReal(-1.00000000000000))*(r00)*(sj2)))+(((cj2)*(r01))));
if( sj6array[0] >= -1-IKFAST_SINCOS_THRESH && sj6array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j6valid[0] = j6valid[1] = true;
    j6array[0] = IKasin(sj6array[0]);
    cj6array[0] = IKcos(j6array[0]);
    sj6array[1] = sj6array[0];
    j6array[1] = j6array[0] > 0 ? (IKPI-j6array[0]) : (-IKPI-j6array[0]);
    cj6array[1] = -cj6array[0];
}
else if( isnan(sj6array[0]) )
{
    // probably any value will work
    j6valid[0] = true;
    cj6array[0] = 1; sj6array[0] = 0; j6array[0] = 0;
}
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x29=(pz)*(pz);
IkReal x30=(px)*(px);
IkReal x31=(py)*(py);
IkReal x32=((cj2)*(r00));
IkReal x33=((IkReal(0.190000000000000))*(sj3));
IkReal x34=((IkReal(2.00000000000000))*(r02));
IkReal x35=((cj3)*(pz));
IkReal x36=((py)*(sj2));
IkReal x37=((IkReal(0.0361000000000000))*(cj3));
IkReal x38=((cj2)*(px));
IkReal x39=((IkReal(1.00000000000000))*(pp));
IkReal x40=((r02)*(sj3));
IkReal x41=((IkReal(0.380000000000000))*(pz));
IkReal x42=((IkReal(1.00000000000000))*(sj2));
IkReal x43=((r01)*(sj2));
IkReal x44=((IkReal(1.00000000000000))*(cj3));
IkReal x45=((IkReal(2.00000000000000))*(cj3));
IkReal x46=((IkReal(0.0361000000000000))*(sj3));
IkReal x47=((py)*(r01));
IkReal x48=((px)*(r00));
IkReal x49=((IkReal(0.380000000000000))*(r02));
IkReal x50=((pz)*(sj3));
IkReal x51=((IkReal(2.00000000000000))*(sj3));
IkReal x52=((cj3)*(r02));
IkReal x53=((pp)*(sj3));
IkReal x54=((IkReal(0.190000000000000))*(cj3));
IkReal x55=((IkReal(1.00000000000000))*(pz));
IkReal x56=((IkReal(2.00000000000000))*(x48));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj2)*(py)))+(((IkReal(-1.00000000000000))*(px)*(x42))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x42)))+(((cj2)*(r01))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x44)))+(((sj3)*(x32)))+(((sj3)*(x43))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x48)))+(((IkReal(-1.00000000000000))*(x47)))+(((IkReal(-1.00000000000000))*(r02)*(x55)))+(((x32)*(x54)))+(((x43)*(x54)))+(((r02)*(x33))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x40)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x42)))+(((IkReal(-1.00000000000000))*(x32)*(x44))));
evalcond[6]=((((IkReal(-0.190000000000000))*(x52)))+(((IkReal(-1.00000000000000))*(x32)*(x55)))+(((r02)*(x38)))+(((r02)*(x36)))+(((IkReal(-1.00000000000000))*(pz)*(r01)*(x42)))+(((x32)*(x33)))+(((x33)*(x43))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(x32)*(x39)))+(((IkReal(-1.00000000000000))*(r02)*(x41)))+(((x36)*(x45)*(x48)))+(((x34)*(x35)*(x36)))+(((x34)*(x35)*(x38)))+(((IkReal(2.00000000000000))*(x47)*(x50)))+(((x37)*(x43)))+(((IkReal(0.0361000000000000))*(x40)))+(((IkReal(-1.00000000000000))*(x39)*(x40)))+(((IkReal(-0.380000000000000))*(x47)))+(((IkReal(-0.380000000000000))*(x48)))+(((x50)*(x56)))+(((x38)*(x45)*(x47)))+(((x31)*(x43)*(x45)))+(((IkReal(-1.00000000000000))*(cj3)*(x39)*(x43)))+(((sj3)*(x29)*(x34)))+(((x32)*(x37)))+(((x30)*(x32)*(x45))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r02)*(x37)))+(((IkReal(-1.00000000000000))*(x34)*(x38)*(x50)))+(((IkReal(-1.00000000000000))*(x31)*(x43)*(x51)))+(((x36)*(x49)))+(((x43)*(x46)))+(((IkReal(-1.00000000000000))*(x36)*(x48)*(x51)))+(((x35)*(x56)))+(((IkReal(-1.00000000000000))*(x41)*(x43)))+(((cj3)*(x29)*(x34)))+(((IkReal(-1.00000000000000))*(x34)*(x36)*(x50)))+(((x38)*(x49)))+(((IkReal(-1.00000000000000))*(x38)*(x47)*(x51)))+(((IkReal(-1.00000000000000))*(x32)*(x41)))+(((IkReal(-1.00000000000000))*(x39)*(x52)))+(((x32)*(x53)))+(((IkReal(-1.00000000000000))*(x30)*(x32)*(x51)))+(((x43)*(x53)))+(((IkReal(2.00000000000000))*(x35)*(x47)))+(((x32)*(x46))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x57=((IkReal(3.99329966351196))*(cj3));
cj5array[0]=((IkReal(-1.05496976651807))+(((IkReal(-1.00000000000000))*(cj2)*(px)*(x57)))+(((IkReal(-3.99329966351196))*(pz)*(sj3)))+(((IkReal(10.5086833250315))*(pp)))+(((IkReal(-1.00000000000000))*(py)*(sj2)*(x57))));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x58=((r00)*(sj2));
IkReal x59=((pz)*(r02));
IkReal x60=((py)*(r00));
IkReal x61=((IkReal(0.380000000000000))*(cj3));
IkReal x62=((cj2)*(r01));
IkReal x63=((IkReal(0.380000000000000))*(sj3));
IkReal x64=((IkReal(2.00000000000000))*(cj2));
IkReal x65=((IkReal(2.00000000000000))*(px)*(sj2));
evalcond[0]=((IkReal(-0.136490290000000))+(((pp)*(x62)))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x61)))+(((x59)*(x65)))+(((IkReal(-1.00000000000000))*(pp)*(x58)))+(((x60)*(x61)))+(((IkReal(0.0361000000000000))*(x62)))+(((IkReal(-1.00000000000000))*(px)*(x60)*(x64)))+(((cj2)*(py)*(r02)*(x63)))+(((IkReal(-1.00000000000000))*(py)*(x59)*(x64)))+(((IkReal(-1.00000000000000))*(pz)*(x62)*(x63)))+(((IkReal(-0.0951594000000000))*(IKcos(j5))))+(((pz)*(x58)*(x63)))+(((py)*(r01)*(x65)))+(((IkReal(-0.0361000000000000))*(x58)))+(((IkReal(-1.00000000000000))*(px)*(r02)*(sj2)*(x63)))+(((IkReal(-2.00000000000000))*(x62)*((py)*(py))))+(((IkReal(2.00000000000000))*(x58)*((px)*(px)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x66=((IkReal(34230000.0000000))*(sj5));
IkReal x67=((pz)*(sj3));
IkReal x68=((IkReal(34230000.0000000))*(cj5));
IkReal x69=((cj3)*(px));
IkReal x70=((IkReal(13900000.0000000))*(sj2));
IkReal x71=((cj3)*(py));
IkReal x72=((r02)*(sj2));
IkReal x73=((py)*(r00)*(sj3));
IkReal x74=((px)*(r01)*(sj3));
IkReal x75=((cj3)*(pz)*(r00)*(sj2));
IkReal x76=((cj2)*(r02)*(x71));
IkReal x77=((cj2)*(cj3)*(pz)*(r01));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj2)*(x66)*(x69)))+(((IkReal(-1.00000000000000))*(x66)*(x67)))+(((cj3)*(pz)*(r00)*(x70)))+(((IkReal(6503700.00000000))*(sj5)))+(((x68)*(x74)))+(((x68)*(x75)))+(((x68)*(x76)))+(((IkReal(-1.00000000000000))*(x68)*(x69)*(x72)))+(((IkReal(-1.00000000000000))*(sj2)*(x66)*(x71)))+(((IkReal(13900000.0000000))*(x76)))+(((IkReal(13900000.0000000))*(x74)))+(((IkReal(-1.00000000000000))*(r02)*(x69)*(x70)))+(((IkReal(-1.00000000000000))*(x68)*(x73)))+(((IkReal(-1.00000000000000))*(x68)*(x77)))+(((IkReal(-13900000.0000000))*(x77)))+(((IkReal(-13900000.0000000))*(x73))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x66)*(x74)))+(((IkReal(-1.00000000000000))*(x66)*(x75)))+(((IkReal(-1.00000000000000))*(x66)*(x76)))+(((IkReal(-1.00000000000000))*(cj2)*(x68)*(x69)))+(((IkReal(-1.00000000000000))*(x70)*(x71)))+(((IkReal(-1.00000000000000))*(x67)*(x68)))+(((IkReal(-13900000.0000000))*(x67)))+(((IkReal(-13900000.0000000))*(cj2)*(x69)))+(((x66)*(x69)*(x72)))+(((x66)*(x77)))+(((x66)*(x73)))+(((IkReal(-1.00000000000000))*(sj2)*(x68)*(x71))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(cj2)*(x66)*(x69)))+(((IkReal(-1.00000000000000))*(x66)*(x67)))+(((cj3)*(pz)*(r00)*(x70)))+(((IkReal(6503700.00000000))*(sj5)))+(((x68)*(x74)))+(((x68)*(x75)))+(((x68)*(x76)))+(((IkReal(-1.00000000000000))*(x68)*(x69)*(x72)))+(((IkReal(-1.00000000000000))*(sj2)*(x66)*(x71)))+(((IkReal(13900000.0000000))*(x76)))+(((IkReal(13900000.0000000))*(x74)))+(((IkReal(-1.00000000000000))*(r02)*(x69)*(x70)))+(((IkReal(-1.00000000000000))*(x68)*(x73)))+(((IkReal(-1.00000000000000))*(x68)*(x77)))+(((IkReal(-13900000.0000000))*(x77)))+(((IkReal(-13900000.0000000))*(x73)))))), ((gconst8)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x66)*(x74)))+(((IkReal(-1.00000000000000))*(x66)*(x75)))+(((IkReal(-1.00000000000000))*(x66)*(x76)))+(((IkReal(-1.00000000000000))*(cj2)*(x68)*(x69)))+(((IkReal(-1.00000000000000))*(x70)*(x71)))+(((IkReal(-1.00000000000000))*(x67)*(x68)))+(((IkReal(-13900000.0000000))*(x67)))+(((IkReal(-13900000.0000000))*(cj2)*(x69)))+(((x66)*(x69)*(x72)))+(((x66)*(x77)))+(((x66)*(x73)))+(((IkReal(-1.00000000000000))*(sj2)*(x68)*(x71)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x78=IKsin(j4);
IkReal x79=IKcos(j4);
IkReal x80=((pz)*(r01));
IkReal x81=((cj3)*(py));
IkReal x82=((cj2)*(r02));
IkReal x83=((px)*(sj3));
IkReal x84=((IkReal(1.00000000000000))*(r00));
IkReal x85=((sj2)*(sj3));
IkReal x86=((IkReal(1.00000000000000))*(sj2));
IkReal x87=((cj3)*(px));
IkReal x88=((cj3)*(pz));
IkReal x89=((r00)*(sj2));
IkReal x90=((py)*(sj3));
IkReal x91=((IkReal(0.139000000000000))*(x78));
IkReal x92=((IkReal(0.139000000000000))*(x79));
IkReal x93=((IkReal(0.342300000000000))*(x79));
IkReal x94=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x95=((IkReal(0.342300000000000))*(x78));
IkReal x96=((cj5)*(x95));
IkReal x97=((sj5)*(x93));
IkReal x98=((cj5)*(x93));
IkReal x99=((sj5)*(x95));
IkReal x100=((x91)+(x96));
IkReal x101=((x99)+(x98)+(x92));
evalcond[0]=((((cj2)*(x83)))+(x100)+(((py)*(x85)))+(((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x97))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x81)*(x86)))+(((IkReal(-1.00000000000000))*(cj2)*(x87)))+(x101)+(((IkReal(-1.00000000000000))*(pz)*(sj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x80)*(x94)))+(((IkReal(-1.00000000000000))*(r02)*(x86)*(x87)))+(((x81)*(x82)))+(x100)+(((r01)*(x83)))+(((x88)*(x89)))+(((IkReal(-1.00000000000000))*(x84)*(x90)))+(((IkReal(-1.00000000000000))*(x97))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x81)*(x84)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(pz)*(x84)*(x85)))+(((cj2)*(sj3)*(x80)))+(((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x82)*(x90)))+(((r01)*(x87)))+(((IkReal(0.190000000000000))*(x89)))+(((r02)*(sj2)*(x83))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x102=((cj2)*(px));
IkReal x103=((IkReal(34230000.0000000))*(cj3));
IkReal x104=((py)*(sj2));
IkReal x105=((IkReal(13900000.0000000))*(cj3));
IkReal x106=((IkReal(13900000.0000000))*(sj3));
IkReal x107=((IkReal(34230000.0000000))*(sj3)*(sj5));
IkReal x108=((IkReal(34230000.0000000))*(cj5)*(sj3));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(pz)*(x107)))+(((IkReal(-1.00000000000000))*(pz)*(x105)))+(((IkReal(-1.00000000000000))*(sj5)*(x102)*(x103)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x103)))+(((x102)*(x106)))+(((x102)*(x108)))+(((x104)*(x106)))+(((x104)*(x108)))+(((IkReal(-1.00000000000000))*(sj5)*(x103)*(x104))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(pz)*(x106)))+(((IkReal(-1.00000000000000))*(pz)*(x108)))+(((IkReal(-1.00000000000000))*(x104)*(x105)))+(((IkReal(-1.00000000000000))*(x104)*(x107)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x102)*(x103)))+(((IkReal(-1.00000000000000))*(cj5)*(x103)*(x104)))+(((IkReal(-1.00000000000000))*(x102)*(x105)))+(((IkReal(-1.00000000000000))*(x102)*(x107)))+(((pz)*(sj5)*(x103))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(pz)*(x107)))+(((IkReal(-1.00000000000000))*(pz)*(x105)))+(((IkReal(-1.00000000000000))*(sj5)*(x102)*(x103)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x103)))+(((x102)*(x106)))+(((x102)*(x108)))+(((x104)*(x106)))+(((x104)*(x108)))+(((IkReal(-1.00000000000000))*(sj5)*(x103)*(x104)))))), ((gconst7)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(pz)*(x106)))+(((IkReal(-1.00000000000000))*(pz)*(x108)))+(((IkReal(-1.00000000000000))*(x104)*(x105)))+(((IkReal(-1.00000000000000))*(x104)*(x107)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x102)*(x103)))+(((IkReal(-1.00000000000000))*(cj5)*(x103)*(x104)))+(((IkReal(-1.00000000000000))*(x102)*(x105)))+(((IkReal(-1.00000000000000))*(x102)*(x107)))+(((pz)*(sj5)*(x103)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x109=IKsin(j4);
IkReal x110=IKcos(j4);
IkReal x111=((pz)*(r01));
IkReal x112=((cj3)*(py));
IkReal x113=((cj2)*(r02));
IkReal x114=((px)*(sj3));
IkReal x115=((IkReal(1.00000000000000))*(r00));
IkReal x116=((sj2)*(sj3));
IkReal x117=((IkReal(1.00000000000000))*(sj2));
IkReal x118=((cj3)*(px));
IkReal x119=((cj3)*(pz));
IkReal x120=((r00)*(sj2));
IkReal x121=((py)*(sj3));
IkReal x122=((IkReal(0.139000000000000))*(x109));
IkReal x123=((IkReal(0.139000000000000))*(x110));
IkReal x124=((IkReal(0.342300000000000))*(x110));
IkReal x125=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x126=((IkReal(0.342300000000000))*(x109));
IkReal x127=((cj5)*(x126));
IkReal x128=((sj5)*(x124));
IkReal x129=((cj5)*(x124));
IkReal x130=((sj5)*(x126));
IkReal x131=((x127)+(x122));
IkReal x132=((x130)+(x123)+(x129));
evalcond[0]=((((cj2)*(x114)))+(((py)*(x116)))+(((IkReal(-1.00000000000000))*(x128)))+(x131)+(((IkReal(-1.00000000000000))*(x119))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x112)*(x117)))+(x132)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x118))));
evalcond[2]=((((x112)*(x113)))+(((IkReal(-1.00000000000000))*(x111)*(x125)))+(((IkReal(-1.00000000000000))*(x115)*(x121)))+(((IkReal(-1.00000000000000))*(x128)))+(x131)+(((r01)*(x114)))+(((IkReal(-1.00000000000000))*(r02)*(x117)*(x118)))+(((x119)*(x120))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x112)*(x115)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x132)))+(((IkReal(-1.00000000000000))*(x113)*(x121)))+(((r01)*(x118)))+(((r02)*(sj2)*(x114)))+(((IkReal(-1.00000000000000))*(pz)*(x115)*(x116)))+(((cj2)*(sj3)*(x111)))+(((IkReal(0.190000000000000))*(x120))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x133=(pz)*(pz);
IkReal x134=(px)*(px);
IkReal x135=(py)*(py);
IkReal x136=((cj2)*(r00));
IkReal x137=((IkReal(0.190000000000000))*(sj3));
IkReal x138=((IkReal(2.00000000000000))*(r02));
IkReal x139=((cj3)*(pz));
IkReal x140=((py)*(sj2));
IkReal x141=((IkReal(0.0361000000000000))*(cj3));
IkReal x142=((cj2)*(px));
IkReal x143=((IkReal(1.00000000000000))*(pp));
IkReal x144=((r02)*(sj3));
IkReal x145=((IkReal(0.380000000000000))*(pz));
IkReal x146=((IkReal(1.00000000000000))*(sj2));
IkReal x147=((r01)*(sj2));
IkReal x148=((IkReal(1.00000000000000))*(cj3));
IkReal x149=((IkReal(2.00000000000000))*(cj3));
IkReal x150=((IkReal(0.0361000000000000))*(sj3));
IkReal x151=((py)*(r01));
IkReal x152=((px)*(r00));
IkReal x153=((IkReal(0.380000000000000))*(r02));
IkReal x154=((pz)*(sj3));
IkReal x155=((IkReal(2.00000000000000))*(sj3));
IkReal x156=((cj3)*(r02));
IkReal x157=((pp)*(sj3));
IkReal x158=((IkReal(0.190000000000000))*(cj3));
IkReal x159=((IkReal(1.00000000000000))*(pz));
IkReal x160=((IkReal(2.00000000000000))*(x152));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(px)*(x146)))+(((cj2)*(py))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x146)))+(((cj2)*(r01))));
evalcond[3]=((((sj3)*(x136)))+(((IkReal(-1.00000000000000))*(r02)*(x148)))+(((sj3)*(x147))));
evalcond[4]=((((r02)*(x137)))+(((x136)*(x158)))+(((IkReal(-1.00000000000000))*(r02)*(x159)))+(((IkReal(-1.00000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x151)))+(((x147)*(x158))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x144)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x146)))+(((IkReal(-1.00000000000000))*(x136)*(x148))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x136)*(x159)))+(((IkReal(-0.190000000000000))*(x156)))+(((x137)*(x147)))+(((IkReal(-1.00000000000000))*(pz)*(r01)*(x146)))+(((x136)*(x137)))+(((r02)*(x142)))+(((r02)*(x140))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x143)*(x144)))+(((x136)*(x141)))+(((x138)*(x139)*(x140)))+(((x138)*(x139)*(x142)))+(((x135)*(x147)*(x149)))+(((IkReal(-1.00000000000000))*(r02)*(x145)))+(((IkReal(-1.00000000000000))*(cj3)*(x143)*(x147)))+(((sj3)*(x133)*(x138)))+(((x134)*(x136)*(x149)))+(((x141)*(x147)))+(((x154)*(x160)))+(((IkReal(-0.380000000000000))*(x152)))+(((IkReal(-0.380000000000000))*(x151)))+(((x142)*(x149)*(x151)))+(((IkReal(2.00000000000000))*(x151)*(x154)))+(((x140)*(x149)*(x152)))+(((IkReal(-1.00000000000000))*(cj3)*(x136)*(x143)))+(((IkReal(0.0361000000000000))*(x144))));
evalcond[8]=((((x139)*(x160)))+(((x140)*(x153)))+(((IkReal(-1.00000000000000))*(x140)*(x152)*(x155)))+(((x142)*(x153)))+(((IkReal(-1.00000000000000))*(x143)*(x156)))+(((x136)*(x157)))+(((x136)*(x150)))+(((IkReal(-1.00000000000000))*(r02)*(x141)))+(((cj3)*(x133)*(x138)))+(((IkReal(-1.00000000000000))*(x135)*(x147)*(x155)))+(((IkReal(2.00000000000000))*(x139)*(x151)))+(((x147)*(x157)))+(((x147)*(x150)))+(((IkReal(-1.00000000000000))*(x145)*(x147)))+(((IkReal(-1.00000000000000))*(x138)*(x140)*(x154)))+(((IkReal(-1.00000000000000))*(x134)*(x136)*(x155)))+(((IkReal(-1.00000000000000))*(x136)*(x145)))+(((IkReal(-1.00000000000000))*(x138)*(x142)*(x154)))+(((IkReal(-1.00000000000000))*(x142)*(x151)*(x155))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x161=((IkReal(3.99329966351196))*(cj3));
cj5array[0]=((IkReal(-1.05496976651807))+(((IkReal(-1.00000000000000))*(py)*(sj2)*(x161)))+(((IkReal(-1.00000000000000))*(cj2)*(px)*(x161)))+(((IkReal(-3.99329966351196))*(pz)*(sj3)))+(((IkReal(10.5086833250315))*(pp))));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x162=((r00)*(sj2));
IkReal x163=((pz)*(r02));
IkReal x164=((py)*(r00));
IkReal x165=((IkReal(0.380000000000000))*(cj3));
IkReal x166=((cj2)*(r01));
IkReal x167=((IkReal(0.380000000000000))*(sj3));
IkReal x168=((IkReal(2.00000000000000))*(cj2));
IkReal x169=((IkReal(2.00000000000000))*(px)*(sj2));
evalcond[0]=((IkReal(0.136490290000000))+(((IkReal(-1.00000000000000))*(py)*(x163)*(x168)))+(((IkReal(-1.00000000000000))*(px)*(x164)*(x168)))+(((cj2)*(py)*(r02)*(x167)))+(((IkReal(-2.00000000000000))*(x166)*((py)*(py))))+(((IkReal(2.00000000000000))*(x162)*((px)*(px))))+(((IkReal(-1.00000000000000))*(pp)*(x162)))+(((x164)*(x165)))+(((IkReal(-1.00000000000000))*(pz)*(x166)*(x167)))+(((IkReal(0.0951594000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x165)))+(((IkReal(-1.00000000000000))*(px)*(r02)*(sj2)*(x167)))+(((py)*(r01)*(x169)))+(((pp)*(x166)))+(((IkReal(0.0361000000000000))*(x166)))+(((pz)*(x162)*(x167)))+(((x163)*(x169)))+(((IkReal(-0.0361000000000000))*(x162))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x170=((IkReal(34230000.0000000))*(sj5));
IkReal x171=((pz)*(sj3));
IkReal x172=((IkReal(34230000.0000000))*(cj5));
IkReal x173=((cj3)*(px));
IkReal x174=((IkReal(13900000.0000000))*(sj2));
IkReal x175=((cj3)*(py));
IkReal x176=((r02)*(sj2));
IkReal x177=((py)*(r00)*(sj3));
IkReal x178=((px)*(r01)*(sj3));
IkReal x179=((cj3)*(pz)*(r00)*(sj2));
IkReal x180=((cj2)*(r02)*(x175));
IkReal x181=((cj2)*(cj3)*(pz)*(r01));
if( IKabs(((gconst10)*(((((IkReal(6503700.00000000))*(sj5)))+(((x172)*(x181)))+(((IkReal(-13900000.0000000))*(x180)))+(((r02)*(x173)*(x174)))+(((IkReal(-1.00000000000000))*(cj2)*(x170)*(x173)))+(((x172)*(x177)))+(((IkReal(-13900000.0000000))*(x178)))+(((x172)*(x173)*(x176)))+(((IkReal(-1.00000000000000))*(x170)*(x171)))+(((IkReal(-1.00000000000000))*(sj2)*(x170)*(x175)))+(((IkReal(13900000.0000000))*(x181)))+(((IkReal(-1.00000000000000))*(x172)*(x180)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(r00)*(x174)))+(((IkReal(-1.00000000000000))*(x172)*(x179)))+(((IkReal(-1.00000000000000))*(x172)*(x178)))+(((IkReal(13900000.0000000))*(x177))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x174)*(x175)))+(((IkReal(-1.00000000000000))*(x170)*(x173)*(x176)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(sj2)*(x172)*(x175)))+(((IkReal(-13900000.0000000))*(cj2)*(x173)))+(((IkReal(-1.00000000000000))*(cj2)*(x172)*(x173)))+(((IkReal(-13900000.0000000))*(x171)))+(((IkReal(-1.00000000000000))*(x170)*(x181)))+(((IkReal(-1.00000000000000))*(x170)*(x177)))+(((IkReal(-1.00000000000000))*(x171)*(x172)))+(((x170)*(x178)))+(((x170)*(x179)))+(((x170)*(x180))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((IkReal(6503700.00000000))*(sj5)))+(((x172)*(x181)))+(((IkReal(-13900000.0000000))*(x180)))+(((r02)*(x173)*(x174)))+(((IkReal(-1.00000000000000))*(cj2)*(x170)*(x173)))+(((x172)*(x177)))+(((IkReal(-13900000.0000000))*(x178)))+(((x172)*(x173)*(x176)))+(((IkReal(-1.00000000000000))*(x170)*(x171)))+(((IkReal(-1.00000000000000))*(sj2)*(x170)*(x175)))+(((IkReal(13900000.0000000))*(x181)))+(((IkReal(-1.00000000000000))*(x172)*(x180)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(r00)*(x174)))+(((IkReal(-1.00000000000000))*(x172)*(x179)))+(((IkReal(-1.00000000000000))*(x172)*(x178)))+(((IkReal(13900000.0000000))*(x177)))))), ((gconst10)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x174)*(x175)))+(((IkReal(-1.00000000000000))*(x170)*(x173)*(x176)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(sj2)*(x172)*(x175)))+(((IkReal(-13900000.0000000))*(cj2)*(x173)))+(((IkReal(-1.00000000000000))*(cj2)*(x172)*(x173)))+(((IkReal(-13900000.0000000))*(x171)))+(((IkReal(-1.00000000000000))*(x170)*(x181)))+(((IkReal(-1.00000000000000))*(x170)*(x177)))+(((IkReal(-1.00000000000000))*(x171)*(x172)))+(((x170)*(x178)))+(((x170)*(x179)))+(((x170)*(x180)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x182=IKsin(j4);
IkReal x183=IKcos(j4);
IkReal x184=((pz)*(r01));
IkReal x185=((cj3)*(py));
IkReal x186=((cj2)*(r02));
IkReal x187=((px)*(sj3));
IkReal x188=((IkReal(1.00000000000000))*(r00));
IkReal x189=((sj2)*(sj3));
IkReal x190=((IkReal(1.00000000000000))*(sj2));
IkReal x191=((cj3)*(px));
IkReal x192=((cj3)*(pz));
IkReal x193=((r00)*(sj2));
IkReal x194=((py)*(sj3));
IkReal x195=((IkReal(0.139000000000000))*(x182));
IkReal x196=((IkReal(0.139000000000000))*(x183));
IkReal x197=((IkReal(0.342300000000000))*(x183));
IkReal x198=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x199=((IkReal(0.342300000000000))*(x182));
IkReal x200=((sj5)*(x197));
IkReal x201=((cj5)*(x199));
IkReal x202=((cj5)*(x197));
IkReal x203=((sj5)*(x199));
IkReal x204=((x195)+(x201));
IkReal x205=((x196)+(x203)+(x202));
evalcond[0]=((((IkReal(-1.00000000000000))*(x192)))+(((IkReal(-1.00000000000000))*(x200)))+(x204)+(((cj2)*(x187)))+(((py)*(x189))));
evalcond[1]=((IkReal(0.190000000000000))+(x205)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(x185)*(x190)))+(((IkReal(-1.00000000000000))*(cj2)*(x191))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x190)*(x191)))+(((IkReal(-1.00000000000000))*(x188)*(x194)))+(((r01)*(x187)))+(((x185)*(x186)))+(((IkReal(-1.00000000000000))*(x204)))+(x200)+(((x192)*(x193)))+(((IkReal(-1.00000000000000))*(x184)*(x198))));
evalcond[3]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(0.190000000000000))*(x193)))+(((r01)*(x191)))+(x205)+(((cj2)*(sj3)*(x184)))+(((IkReal(-1.00000000000000))*(x186)*(x194)))+(((r02)*(sj2)*(x187)))+(((IkReal(-1.00000000000000))*(x185)*(x188)))+(((IkReal(-1.00000000000000))*(pz)*(x188)*(x189))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x206=((cj2)*(px));
IkReal x207=((IkReal(34230000.0000000))*(cj3));
IkReal x208=((py)*(sj2));
IkReal x209=((IkReal(13900000.0000000))*(cj3));
IkReal x210=((IkReal(13900000.0000000))*(sj3));
IkReal x211=((IkReal(34230000.0000000))*(sj3)*(sj5));
IkReal x212=((IkReal(34230000.0000000))*(cj5)*(sj3));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj5)*(pz)*(x207)))+(((IkReal(-1.00000000000000))*(pz)*(x211)))+(((IkReal(6503700.00000000))*(sj5)))+(((x206)*(x212)))+(((x206)*(x210)))+(((IkReal(-1.00000000000000))*(pz)*(x209)))+(((x208)*(x212)))+(((x208)*(x210)))+(((IkReal(-1.00000000000000))*(sj5)*(x206)*(x207)))+(((IkReal(-1.00000000000000))*(sj5)*(x207)*(x208))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(cj5)*(x207)*(x208)))+(((IkReal(-1.00000000000000))*(pz)*(x212)))+(((IkReal(-1.00000000000000))*(pz)*(x210)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x206)*(x211)))+(((IkReal(-1.00000000000000))*(x206)*(x209)))+(((IkReal(-1.00000000000000))*(x208)*(x209)))+(((IkReal(-1.00000000000000))*(cj5)*(x206)*(x207)))+(((IkReal(-1.00000000000000))*(x208)*(x211)))+(((pz)*(sj5)*(x207))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(cj5)*(pz)*(x207)))+(((IkReal(-1.00000000000000))*(pz)*(x211)))+(((IkReal(6503700.00000000))*(sj5)))+(((x206)*(x212)))+(((x206)*(x210)))+(((IkReal(-1.00000000000000))*(pz)*(x209)))+(((x208)*(x212)))+(((x208)*(x210)))+(((IkReal(-1.00000000000000))*(sj5)*(x206)*(x207)))+(((IkReal(-1.00000000000000))*(sj5)*(x207)*(x208)))))), ((gconst9)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(cj5)*(x207)*(x208)))+(((IkReal(-1.00000000000000))*(pz)*(x212)))+(((IkReal(-1.00000000000000))*(pz)*(x210)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x206)*(x211)))+(((IkReal(-1.00000000000000))*(x206)*(x209)))+(((IkReal(-1.00000000000000))*(x208)*(x209)))+(((IkReal(-1.00000000000000))*(cj5)*(x206)*(x207)))+(((IkReal(-1.00000000000000))*(x208)*(x211)))+(((pz)*(sj5)*(x207)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x213=IKsin(j4);
IkReal x214=IKcos(j4);
IkReal x215=((pz)*(r01));
IkReal x216=((cj3)*(py));
IkReal x217=((cj2)*(r02));
IkReal x218=((px)*(sj3));
IkReal x219=((IkReal(1.00000000000000))*(r00));
IkReal x220=((sj2)*(sj3));
IkReal x221=((IkReal(1.00000000000000))*(sj2));
IkReal x222=((cj3)*(px));
IkReal x223=((cj3)*(pz));
IkReal x224=((r00)*(sj2));
IkReal x225=((py)*(sj3));
IkReal x226=((IkReal(0.139000000000000))*(x213));
IkReal x227=((IkReal(0.139000000000000))*(x214));
IkReal x228=((IkReal(0.342300000000000))*(x214));
IkReal x229=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x230=((IkReal(0.342300000000000))*(x213));
IkReal x231=((sj5)*(x228));
IkReal x232=((cj5)*(x230));
IkReal x233=((cj5)*(x228));
IkReal x234=((sj5)*(x230));
IkReal x235=((x226)+(x232));
IkReal x236=((x227)+(x233)+(x234));
evalcond[0]=((((py)*(x220)))+(((cj2)*(x218)))+(((IkReal(-1.00000000000000))*(x231)))+(x235)+(((IkReal(-1.00000000000000))*(x223))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x216)*(x221)))+(((IkReal(-1.00000000000000))*(cj2)*(x222)))+(x236)+(((IkReal(-1.00000000000000))*(pz)*(sj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x215)*(x229)))+(((x216)*(x217)))+(((x223)*(x224)))+(((IkReal(-1.00000000000000))*(x219)*(x225)))+(((IkReal(-1.00000000000000))*(x235)))+(x231)+(((IkReal(-1.00000000000000))*(r02)*(x221)*(x222)))+(((r01)*(x218))));
evalcond[3]=((((cj2)*(sj3)*(x215)))+(((IkReal(-1.00000000000000))*(pz)*(x219)*(x220)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((r01)*(x222)))+(((r02)*(sj2)*(x218)))+(((IkReal(0.190000000000000))*(x224)))+(x236)+(((IkReal(-1.00000000000000))*(x217)*(x225)))+(((IkReal(-1.00000000000000))*(x216)*(x219))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x237=((cj2)*(cj3));
IkReal x238=((cj3)*(sj2));
if( IKabs(((IkReal(0.00719424460431655))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x238)))+(((IkReal(-190.000000000000))*(r02)*(sj3)))+(((IkReal(-190.000000000000))*(r00)*(x237)))+(((IkReal(1000.00000000000))*(px)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.05496976651807))+(((IkReal(-3.99329966351196))*(pz)*(sj3)))+(((IkReal(-3.99329966351196))*(py)*(x238)))+(((IkReal(-3.99329966351196))*(px)*(x237)))+(((IkReal(10.5086833250315))*(pp))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00719424460431655))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x238)))+(((IkReal(-190.000000000000))*(r02)*(sj3)))+(((IkReal(-190.000000000000))*(r00)*(x237)))+(((IkReal(1000.00000000000))*(px)*(r00)))))))+IKsqr(((IkReal(-1.05496976651807))+(((IkReal(-3.99329966351196))*(pz)*(sj3)))+(((IkReal(-3.99329966351196))*(py)*(x238)))+(((IkReal(-3.99329966351196))*(px)*(x237)))+(((IkReal(10.5086833250315))*(pp)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.00719424460431655))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x238)))+(((IkReal(-190.000000000000))*(r02)*(sj3)))+(((IkReal(-190.000000000000))*(r00)*(x237)))+(((IkReal(1000.00000000000))*(px)*(r00)))))), ((IkReal(-1.05496976651807))+(((IkReal(-3.99329966351196))*(pz)*(sj3)))+(((IkReal(-3.99329966351196))*(py)*(x238)))+(((IkReal(-3.99329966351196))*(px)*(x237)))+(((IkReal(10.5086833250315))*(pp)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x239=IKcos(j5);
IkReal x240=((cj2)*(r00));
IkReal x241=((IkReal(0.190000000000000))*(sj3));
IkReal x242=((IkReal(2.00000000000000))*(py));
IkReal x243=((r00)*(sj2));
IkReal x244=((IkReal(0.380000000000000))*(py));
IkReal x245=((r02)*(sj3));
IkReal x246=((r01)*(sj2));
IkReal x247=((IkReal(1.00000000000000))*(pp));
IkReal x248=((r02)*(sj2));
IkReal x249=((IkReal(0.380000000000000))*(px));
IkReal x250=((IkReal(0.139000000000000))*(cj6));
IkReal x251=((cj2)*(pz));
IkReal x252=((cj2)*(r01));
IkReal x253=((IkReal(0.380000000000000))*(sj3));
IkReal x254=((IkReal(0.190000000000000))*(cj3));
IkReal x255=((IkReal(1.00000000000000))*(pz));
IkReal x256=((IkReal(0.0951594000000000))*(x239));
evalcond[0]=((IkReal(0.100390290000000))+(((pz)*(x253)))+(x256)+(((cj2)*(cj3)*(x249)))+(((IkReal(-1.00000000000000))*(x247)))+(((cj3)*(sj2)*(x244))));
evalcond[1]=((((x246)*(x254)))+(((r02)*(x241)))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((IkReal(-1.00000000000000))*(r02)*(x255)))+(((x250)*(IKsin(j5))))+(((x240)*(x254)))+(((IkReal(-1.00000000000000))*(py)*(r01))));
evalcond[2]=((((cj2)*(px)*(r02)))+(((x240)*(x241)))+(((IkReal(-1.00000000000000))*(x240)*(x255)))+(((IkReal(-1.00000000000000))*(r02)*(x254)))+(((IkReal(-0.342300000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x239)*(x250)))+(((IkReal(-1.00000000000000))*(x246)*(x255)))+(((x241)*(x246)))+(((py)*(x248))));
evalcond[3]=((((cj3)*(r00)*(x244)))+(((IkReal(2.00000000000000))*(px)*(pz)*(x248)))+(((px)*(x242)*(x246)))+(((IkReal(-1.00000000000000))*(px)*(x240)*(x242)))+(((IkReal(-1.00000000000000))*(py)*(x242)*(x252)))+(((IkReal(0.0361000000000000))*(x252)))+(((IkReal(-1.00000000000000))*(sj2)*(x245)*(x249)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x249)))+(((IkReal(-1.00000000000000))*(x243)*(x247)))+(((cj2)*(x244)*(x245)))+(((IkReal(-0.0361000000000000))*(x243)))+(((pp)*(x252)))+(((IkReal(-0.136490290000000))*(sj6)))+(((pz)*(x243)*(x253)))+(((IkReal(-1.00000000000000))*(r01)*(x251)*(x253)))+(((IkReal(-1.00000000000000))*(sj6)*(x256)))+(((IkReal(-1.00000000000000))*(r02)*(x242)*(x251)))+(((IkReal(2.00000000000000))*(x243)*((px)*(px)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x257=((IkReal(3423.00000000000))*(cj6));
gconst2=IKsign(((((x257)*((cj5)*(cj5))))+(((IkReal(1390.00000000000))*(cj5)*(cj6)))+(((x257)*((sj5)*(sj5))))));
IkReal x258=((IkReal(2.46258992805755))*(cj6));
dummyeval[0]=((((x258)*((sj5)*(sj5))))+(((cj5)*(cj6)))+(((x258)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x259=((IkReal(0.0951594000000000))*(cj5));
IkReal x260=(px)*(px);
IkReal x261=(py)*(py);
IkReal x262=(pz)*(pz);
IkReal x263=((cj2)*(r00));
IkReal x264=((IkReal(0.190000000000000))*(sj3));
IkReal x265=((pp)*(sj3));
IkReal x266=((r01)*(sj2));
IkReal x267=((IkReal(2.00000000000000))*(r02));
IkReal x268=((IkReal(0.0361000000000000))*(cj3));
IkReal x269=((IkReal(1.00000000000000))*(r02));
IkReal x270=((IkReal(0.380000000000000))*(pz));
IkReal x271=((r00)*(sj2));
IkReal x272=((cj2)*(py));
IkReal x273=((IkReal(1.00000000000000))*(cj3));
IkReal x274=((IkReal(1.00000000000000))*(pp));
IkReal x275=((IkReal(0.0361000000000000))*(sj3));
IkReal x276=((px)*(pz));
IkReal x277=((cj2)*(sj3));
IkReal x278=((r02)*(sj2));
IkReal x279=((cj3)*(r00));
IkReal x280=((IkReal(0.380000000000000))*(py));
IkReal x281=((py)*(r01));
IkReal x282=((cj2)*(r01));
IkReal x283=((IkReal(2.00000000000000))*(r00));
IkReal x284=((IkReal(0.380000000000000))*(px));
IkReal x285=((IkReal(2.00000000000000))*(pz));
IkReal x286=((cj2)*(r02));
IkReal x287=((IkReal(1.00000000000000))*(px));
IkReal x288=((IkReal(0.190000000000000))*(cj3));
IkReal x289=((IkReal(1.00000000000000))*(pz));
IkReal x290=((cj3)*(x284));
IkReal x291=((cj3)*(py)*(sj2));
IkReal x292=((IkReal(2.00000000000000))*(px)*(py));
IkReal x293=((IkReal(2.00000000000000))*(x260));
IkReal x294=((IkReal(2.00000000000000))*(x261));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)*(x287)))+(x272));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x271)))+(x282));
evalcond[3]=((IkReal(0.100390290000000))+(((cj2)*(x290)))+(((cj3)*(sj2)*(x280)))+(((sj3)*(x270)))+(x259)+(((IkReal(-1.00000000000000))*(x274))));
evalcond[4]=((((sj3)*(x266)))+(((sj3)*(x263)))+(((IkReal(-1.00000000000000))*(cj3)*(x269))));
evalcond[5]=((((r02)*(x264)))+(((x263)*(x288)))+(((IkReal(-1.00000000000000))*(x281)))+(((IkReal(-1.00000000000000))*(r00)*(x287)))+(((x266)*(x288)))+(((IkReal(-1.00000000000000))*(pz)*(x269))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x269)))+(((IkReal(-1.00000000000000))*(x263)*(x273)))+(((IkReal(-1.00000000000000))*(x266)*(x273))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r02)*(x288)))+(((IkReal(-1.00000000000000))*(x263)*(x289)))+(((x264)*(x266)))+(((x263)*(x264)))+(((IkReal(-1.00000000000000))*(x266)*(x289)))+(((py)*(x278)))+(((px)*(x286))));
evalcond[8]=((IkReal(-0.136490290000000))+(((x271)*(x293)))+(((IkReal(0.0361000000000000))*(x282)))+(((x279)*(x280)))+(((IkReal(-1.00000000000000))*(pz)*(x267)*(x272)))+(((IkReal(-1.00000000000000))*(x271)*(x274)))+(((IkReal(-1.00000000000000))*(r01)*(x270)*(x277)))+(((x266)*(x292)))+(((sj2)*(x267)*(x276)))+(((sj3)*(x270)*(x271)))+(((IkReal(-0.0361000000000000))*(x271)))+(((IkReal(-1.00000000000000))*(x263)*(x292)))+(((IkReal(0.380000000000000))*(r02)*(sj3)*(x272)))+(((pp)*(x282)))+(((IkReal(-1.00000000000000))*(sj3)*(x278)*(x284)))+(((IkReal(-1.00000000000000))*(x282)*(x294)))+(((IkReal(-1.00000000000000))*(r01)*(x290)))+(((IkReal(-1.00000000000000))*(x259))));
evalcond[9]=((((pz)*(x267)*(x291)))+(((cj3)*(x263)*(x293)))+(((x266)*(x268)))+(((sj3)*(x276)*(x283)))+(((cj2)*(cj3)*(x267)*(x276)))+(((r02)*(x275)))+(((cj3)*(x266)*(x294)))+(((x263)*(x268)))+(((sj3)*(x281)*(x285)))+(((IkReal(-1.00000000000000))*(pp)*(x263)*(x273)))+(((IkReal(-1.00000000000000))*(r01)*(x280)))+(((IkReal(-1.00000000000000))*(pp)*(x266)*(x273)))+(((IkReal(-1.00000000000000))*(r02)*(x270)))+(((IkReal(-1.00000000000000))*(r00)*(x284)))+(((sj3)*(x262)*(x267)))+(((cj3)*(x271)*(x292)))+(((IkReal(-1.00000000000000))*(x265)*(x269)))+(((IkReal(2.00000000000000))*(cj3)*(px)*(r01)*(x272))));
evalcond[10]=((((x284)*(x286)))+(((IkReal(-1.00000000000000))*(x263)*(x270)))+(((x278)*(x280)))+(((x266)*(x275)))+(((IkReal(-1.00000000000000))*(sj3)*(x271)*(x292)))+(((IkReal(-2.00000000000000))*(px)*(r01)*(sj3)*(x272)))+(((IkReal(-1.00000000000000))*(py)*(pz)*(sj2)*(sj3)*(x267)))+(((IkReal(2.00000000000000))*(x276)*(x279)))+(((cj3)*(x281)*(x285)))+(((x263)*(x265)))+(((x263)*(x275)))+(((IkReal(-1.00000000000000))*(x267)*(x276)*(x277)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x269)))+(((IkReal(-1.00000000000000))*(sj3)*(x266)*(x294)))+(((cj3)*(x262)*(x267)))+(((IkReal(-1.00000000000000))*(r02)*(x268)))+(((IkReal(-1.00000000000000))*(x266)*(x270)))+(((x265)*(x266)))+(((IkReal(-1.00000000000000))*(sj3)*(x263)*(x293))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x295=((IkReal(34230000.0000000))*(sj5));
IkReal x296=((pz)*(sj3));
IkReal x297=((IkReal(34230000.0000000))*(cj5));
IkReal x298=((cj3)*(px));
IkReal x299=((IkReal(13900000.0000000))*(sj2));
IkReal x300=((cj3)*(py));
IkReal x301=((r02)*(sj2));
IkReal x302=((py)*(r00)*(sj3));
IkReal x303=((px)*(r01)*(sj3));
IkReal x304=((cj3)*(pz)*(r00)*(sj2));
IkReal x305=((cj2)*(r02)*(x300));
IkReal x306=((cj2)*(cj3)*(pz)*(r01));
if( IKabs(((gconst4)*(((((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x297)*(x302)))+(((IkReal(-1.00000000000000))*(x297)*(x306)))+(((cj3)*(pz)*(r00)*(x299)))+(((IkReal(13900000.0000000))*(x303)))+(((IkReal(13900000.0000000))*(x305)))+(((x297)*(x305)))+(((x297)*(x304)))+(((x297)*(x303)))+(((IkReal(-1.00000000000000))*(x297)*(x298)*(x301)))+(((IkReal(-1.00000000000000))*(cj2)*(x295)*(x298)))+(((IkReal(-1.00000000000000))*(x295)*(x296)))+(((IkReal(-1.00000000000000))*(r02)*(x298)*(x299)))+(((IkReal(-13900000.0000000))*(x306)))+(((IkReal(-13900000.0000000))*(x302)))+(((IkReal(-1.00000000000000))*(sj2)*(x295)*(x300))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(-13900000.0000000))*(x296)))+(((x295)*(x298)*(x301)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x296)*(x297)))+(((IkReal(-1.00000000000000))*(cj2)*(x297)*(x298)))+(((IkReal(-1.00000000000000))*(sj2)*(x297)*(x300)))+(((IkReal(-1.00000000000000))*(x295)*(x305)))+(((IkReal(-1.00000000000000))*(x295)*(x304)))+(((IkReal(-1.00000000000000))*(x295)*(x303)))+(((x295)*(x302)))+(((x295)*(x306)))+(((IkReal(-1.00000000000000))*(x299)*(x300)))+(((IkReal(-13900000.0000000))*(cj2)*(x298))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x297)*(x302)))+(((IkReal(-1.00000000000000))*(x297)*(x306)))+(((cj3)*(pz)*(r00)*(x299)))+(((IkReal(13900000.0000000))*(x303)))+(((IkReal(13900000.0000000))*(x305)))+(((x297)*(x305)))+(((x297)*(x304)))+(((x297)*(x303)))+(((IkReal(-1.00000000000000))*(x297)*(x298)*(x301)))+(((IkReal(-1.00000000000000))*(cj2)*(x295)*(x298)))+(((IkReal(-1.00000000000000))*(x295)*(x296)))+(((IkReal(-1.00000000000000))*(r02)*(x298)*(x299)))+(((IkReal(-13900000.0000000))*(x306)))+(((IkReal(-13900000.0000000))*(x302)))+(((IkReal(-1.00000000000000))*(sj2)*(x295)*(x300)))))), ((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(-13900000.0000000))*(x296)))+(((x295)*(x298)*(x301)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x296)*(x297)))+(((IkReal(-1.00000000000000))*(cj2)*(x297)*(x298)))+(((IkReal(-1.00000000000000))*(sj2)*(x297)*(x300)))+(((IkReal(-1.00000000000000))*(x295)*(x305)))+(((IkReal(-1.00000000000000))*(x295)*(x304)))+(((IkReal(-1.00000000000000))*(x295)*(x303)))+(((x295)*(x302)))+(((x295)*(x306)))+(((IkReal(-1.00000000000000))*(x299)*(x300)))+(((IkReal(-13900000.0000000))*(cj2)*(x298)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x307=IKsin(j4);
IkReal x308=IKcos(j4);
IkReal x309=((pz)*(r01));
IkReal x310=((cj3)*(py));
IkReal x311=((cj2)*(r02));
IkReal x312=((px)*(sj3));
IkReal x313=((IkReal(1.00000000000000))*(r00));
IkReal x314=((sj2)*(sj3));
IkReal x315=((IkReal(1.00000000000000))*(sj2));
IkReal x316=((cj3)*(px));
IkReal x317=((cj3)*(pz));
IkReal x318=((r00)*(sj2));
IkReal x319=((py)*(sj3));
IkReal x320=((IkReal(0.139000000000000))*(x307));
IkReal x321=((IkReal(0.139000000000000))*(x308));
IkReal x322=((IkReal(0.342300000000000))*(x308));
IkReal x323=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x324=((IkReal(0.342300000000000))*(x307));
IkReal x325=((cj5)*(x324));
IkReal x326=((sj5)*(x322));
IkReal x327=((cj5)*(x322));
IkReal x328=((sj5)*(x324));
IkReal x329=((x325)+(x320));
IkReal x330=((x327)+(x321)+(x328));
evalcond[0]=((((IkReal(-1.00000000000000))*(x326)))+(x329)+(((py)*(x314)))+(((cj2)*(x312)))+(((IkReal(-1.00000000000000))*(x317))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x310)*(x315)))+(((IkReal(-1.00000000000000))*(cj2)*(x316)))+(x330)+(((IkReal(-1.00000000000000))*(pz)*(sj3))));
evalcond[2]=((((x317)*(x318)))+(((x310)*(x311)))+(((IkReal(-1.00000000000000))*(x313)*(x319)))+(((IkReal(-1.00000000000000))*(x309)*(x323)))+(((IkReal(-1.00000000000000))*(r02)*(x315)*(x316)))+(((IkReal(-1.00000000000000))*(x326)))+(x329)+(((r01)*(x312))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x310)*(x313)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(pz)*(x313)*(x314)))+(((r01)*(x316)))+(((cj2)*(sj3)*(x309)))+(((r02)*(sj2)*(x312)))+(((IkReal(-1.00000000000000))*(x311)*(x319)))+(((IkReal(-1.00000000000000))*(x330)))+(((IkReal(0.190000000000000))*(x318))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x331=((cj2)*(px));
IkReal x332=((IkReal(34230000.0000000))*(cj3));
IkReal x333=((py)*(sj2));
IkReal x334=((IkReal(13900000.0000000))*(cj3));
IkReal x335=((IkReal(13900000.0000000))*(sj3));
IkReal x336=((IkReal(34230000.0000000))*(sj3)*(sj5));
IkReal x337=((IkReal(34230000.0000000))*(cj5)*(sj3));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj5)*(x332)*(x333)))+(((IkReal(6503700.00000000))*(sj5)))+(((x331)*(x337)))+(((x331)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x334)))+(((IkReal(-1.00000000000000))*(pz)*(x336)))+(((x333)*(x337)))+(((x333)*(x335)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x332)))+(((IkReal(-1.00000000000000))*(sj5)*(x331)*(x332))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x332)*(x333)))+(((IkReal(-1.00000000000000))*(x333)*(x334)))+(((IkReal(-1.00000000000000))*(x333)*(x336)))+(((IkReal(-1.00000000000000))*(cj5)*(x331)*(x332)))+(((IkReal(-1.00000000000000))*(pz)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x337)))+(((IkReal(-1.00000000000000))*(x331)*(x334)))+(((IkReal(-1.00000000000000))*(x331)*(x336)))+(((pz)*(sj5)*(x332))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(sj5)*(x332)*(x333)))+(((IkReal(6503700.00000000))*(sj5)))+(((x331)*(x337)))+(((x331)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x334)))+(((IkReal(-1.00000000000000))*(pz)*(x336)))+(((x333)*(x337)))+(((x333)*(x335)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x332)))+(((IkReal(-1.00000000000000))*(sj5)*(x331)*(x332)))))), ((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x332)*(x333)))+(((IkReal(-1.00000000000000))*(x333)*(x334)))+(((IkReal(-1.00000000000000))*(x333)*(x336)))+(((IkReal(-1.00000000000000))*(cj5)*(x331)*(x332)))+(((IkReal(-1.00000000000000))*(pz)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x337)))+(((IkReal(-1.00000000000000))*(x331)*(x334)))+(((IkReal(-1.00000000000000))*(x331)*(x336)))+(((pz)*(sj5)*(x332)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x338=IKsin(j4);
IkReal x339=IKcos(j4);
IkReal x340=((pz)*(r01));
IkReal x341=((cj3)*(py));
IkReal x342=((cj2)*(r02));
IkReal x343=((px)*(sj3));
IkReal x344=((IkReal(1.00000000000000))*(r00));
IkReal x345=((sj2)*(sj3));
IkReal x346=((IkReal(1.00000000000000))*(sj2));
IkReal x347=((cj3)*(px));
IkReal x348=((cj3)*(pz));
IkReal x349=((r00)*(sj2));
IkReal x350=((py)*(sj3));
IkReal x351=((IkReal(0.139000000000000))*(x338));
IkReal x352=((IkReal(0.139000000000000))*(x339));
IkReal x353=((IkReal(0.342300000000000))*(x339));
IkReal x354=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x355=((IkReal(0.342300000000000))*(x338));
IkReal x356=((cj5)*(x355));
IkReal x357=((sj5)*(x353));
IkReal x358=((cj5)*(x353));
IkReal x359=((sj5)*(x355));
IkReal x360=((x351)+(x356));
IkReal x361=((x352)+(x359)+(x358));
evalcond[0]=((((py)*(x345)))+(((IkReal(-1.00000000000000))*(x357)))+(x360)+(((cj2)*(x343)))+(((IkReal(-1.00000000000000))*(x348))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x347)))+(x361)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(x341)*(x346))));
evalcond[2]=((((r01)*(x343)))+(((x348)*(x349)))+(((IkReal(-1.00000000000000))*(x357)))+(((IkReal(-1.00000000000000))*(r02)*(x346)*(x347)))+(x360)+(((IkReal(-1.00000000000000))*(x344)*(x350)))+(((x341)*(x342)))+(((IkReal(-1.00000000000000))*(x340)*(x354))));
evalcond[3]=((((r01)*(x347)))+(((IkReal(-1.00000000000000))*(x342)*(x350)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x361)))+(((cj2)*(sj3)*(x340)))+(((r02)*(sj2)*(x343)))+(((IkReal(-1.00000000000000))*(x341)*(x344)))+(((IkReal(0.190000000000000))*(x349)))+(((IkReal(-1.00000000000000))*(pz)*(x344)*(x345))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x362=((IkReal(0.0951594000000000))*(cj5));
IkReal x363=(px)*(px);
IkReal x364=(py)*(py);
IkReal x365=(pz)*(pz);
IkReal x366=((cj2)*(r00));
IkReal x367=((IkReal(0.190000000000000))*(sj3));
IkReal x368=((pp)*(sj3));
IkReal x369=((r01)*(sj2));
IkReal x370=((IkReal(2.00000000000000))*(r02));
IkReal x371=((IkReal(0.0361000000000000))*(cj3));
IkReal x372=((IkReal(1.00000000000000))*(r02));
IkReal x373=((IkReal(0.380000000000000))*(pz));
IkReal x374=((r00)*(sj2));
IkReal x375=((cj2)*(py));
IkReal x376=((IkReal(1.00000000000000))*(cj3));
IkReal x377=((IkReal(1.00000000000000))*(pp));
IkReal x378=((IkReal(0.0361000000000000))*(sj3));
IkReal x379=((px)*(pz));
IkReal x380=((cj2)*(sj3));
IkReal x381=((r02)*(sj2));
IkReal x382=((cj3)*(r00));
IkReal x383=((IkReal(0.380000000000000))*(py));
IkReal x384=((py)*(r01));
IkReal x385=((cj2)*(r01));
IkReal x386=((IkReal(2.00000000000000))*(r00));
IkReal x387=((IkReal(0.380000000000000))*(px));
IkReal x388=((IkReal(2.00000000000000))*(pz));
IkReal x389=((cj2)*(r02));
IkReal x390=((IkReal(1.00000000000000))*(px));
IkReal x391=((IkReal(0.190000000000000))*(cj3));
IkReal x392=((IkReal(1.00000000000000))*(pz));
IkReal x393=((cj3)*(x387));
IkReal x394=((cj3)*(py)*(sj2));
IkReal x395=((IkReal(2.00000000000000))*(px)*(py));
IkReal x396=((IkReal(2.00000000000000))*(x363));
IkReal x397=((IkReal(2.00000000000000))*(x364));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)*(x390)))+(x375));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x374)))+(x385));
evalcond[3]=((IkReal(0.100390290000000))+(((cj3)*(sj2)*(x383)))+(((IkReal(-1.00000000000000))*(x377)))+(x362)+(((sj3)*(x373)))+(((cj2)*(x393))));
evalcond[4]=((((sj3)*(x366)))+(((sj3)*(x369)))+(((IkReal(-1.00000000000000))*(cj3)*(x372))));
evalcond[5]=((((x369)*(x391)))+(((x366)*(x391)))+(((IkReal(-1.00000000000000))*(r00)*(x390)))+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(pz)*(x372)))+(((r02)*(x367))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x372)))+(((IkReal(-1.00000000000000))*(x366)*(x376)))+(((IkReal(-1.00000000000000))*(x369)*(x376))));
evalcond[7]=((((px)*(x389)))+(((x366)*(x367)))+(((IkReal(-1.00000000000000))*(r02)*(x391)))+(((IkReal(-1.00000000000000))*(x366)*(x392)))+(((IkReal(-1.00000000000000))*(x369)*(x392)))+(((py)*(x381)))+(((x367)*(x369))));
evalcond[8]=((IkReal(0.136490290000000))+(((IkReal(-1.00000000000000))*(r01)*(x373)*(x380)))+(((IkReal(-1.00000000000000))*(x385)*(x397)))+(((x369)*(x395)))+(((IkReal(-1.00000000000000))*(pz)*(x370)*(x375)))+(((sj3)*(x373)*(x374)))+(((pp)*(x385)))+(((IkReal(-0.0361000000000000))*(x374)))+(((IkReal(-1.00000000000000))*(r01)*(x393)))+(x362)+(((IkReal(-1.00000000000000))*(x374)*(x377)))+(((IkReal(0.380000000000000))*(r02)*(sj3)*(x375)))+(((x382)*(x383)))+(((IkReal(-1.00000000000000))*(x366)*(x395)))+(((IkReal(0.0361000000000000))*(x385)))+(((IkReal(-1.00000000000000))*(sj3)*(x381)*(x387)))+(((sj2)*(x370)*(x379)))+(((x374)*(x396))));
evalcond[9]=((((IkReal(-1.00000000000000))*(pp)*(x366)*(x376)))+(((r02)*(x378)))+(((IkReal(-1.00000000000000))*(x368)*(x372)))+(((cj3)*(x374)*(x395)))+(((sj3)*(x365)*(x370)))+(((x369)*(x371)))+(((sj3)*(x379)*(x386)))+(((IkReal(-1.00000000000000))*(r02)*(x373)))+(((cj2)*(cj3)*(x370)*(x379)))+(((pz)*(x370)*(x394)))+(((x366)*(x371)))+(((cj3)*(x366)*(x396)))+(((IkReal(-1.00000000000000))*(pp)*(x369)*(x376)))+(((cj3)*(x369)*(x397)))+(((IkReal(2.00000000000000))*(cj3)*(px)*(r01)*(x375)))+(((IkReal(-1.00000000000000))*(r00)*(x387)))+(((IkReal(-1.00000000000000))*(r01)*(x383)))+(((sj3)*(x384)*(x388))));
evalcond[10]=((((IkReal(-1.00000000000000))*(sj3)*(x366)*(x396)))+(((x387)*(x389)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x372)))+(((x369)*(x378)))+(((IkReal(2.00000000000000))*(x379)*(x382)))+(((IkReal(-1.00000000000000))*(r02)*(x371)))+(((x366)*(x368)))+(((x366)*(x378)))+(((IkReal(-1.00000000000000))*(x366)*(x373)))+(((IkReal(-2.00000000000000))*(px)*(r01)*(sj3)*(x375)))+(((IkReal(-1.00000000000000))*(sj3)*(x369)*(x397)))+(((IkReal(-1.00000000000000))*(sj3)*(x374)*(x395)))+(((IkReal(-1.00000000000000))*(py)*(pz)*(sj2)*(sj3)*(x370)))+(((cj3)*(x365)*(x370)))+(((IkReal(-1.00000000000000))*(x369)*(x373)))+(((cj3)*(x384)*(x388)))+(((IkReal(-1.00000000000000))*(x370)*(x379)*(x380)))+(((x368)*(x369)))+(((x381)*(x383))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x398=((IkReal(34230000.0000000))*(sj5));
IkReal x399=((pz)*(sj3));
IkReal x400=((IkReal(34230000.0000000))*(cj5));
IkReal x401=((cj3)*(px));
IkReal x402=((IkReal(13900000.0000000))*(sj2));
IkReal x403=((cj3)*(py));
IkReal x404=((r02)*(sj2));
IkReal x405=((py)*(r00)*(sj3));
IkReal x406=((px)*(r01)*(sj3));
IkReal x407=((cj3)*(pz)*(r00)*(sj2));
IkReal x408=((cj2)*(r02)*(x403));
IkReal x409=((cj2)*(cj3)*(pz)*(r01));
if( IKabs(((gconst6)*(((((r02)*(x401)*(x402)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x398)*(x399)))+(((IkReal(13900000.0000000))*(x409)))+(((IkReal(13900000.0000000))*(x405)))+(((IkReal(-13900000.0000000))*(x406)))+(((IkReal(-13900000.0000000))*(x408)))+(((IkReal(-1.00000000000000))*(cj2)*(x398)*(x401)))+(((x400)*(x401)*(x404)))+(((IkReal(-1.00000000000000))*(x400)*(x407)))+(((IkReal(-1.00000000000000))*(x400)*(x406)))+(((IkReal(-1.00000000000000))*(x400)*(x408)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(r00)*(x402)))+(((IkReal(-1.00000000000000))*(sj2)*(x398)*(x403)))+(((x400)*(x405)))+(((x400)*(x409))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(sj2)*(x400)*(x403)))+(((IkReal(-1.00000000000000))*(cj2)*(x400)*(x401)))+(((IkReal(-1.00000000000000))*(x402)*(x403)))+(((IkReal(-13900000.0000000))*(x399)))+(((IkReal(-13900000.0000000))*(cj2)*(x401)))+(((IkReal(-1.00000000000000))*(x398)*(x405)))+(((IkReal(-1.00000000000000))*(x398)*(x409)))+(((IkReal(-1.00000000000000))*(x399)*(x400)))+(((IkReal(-1.00000000000000))*(x398)*(x401)*(x404)))+(((x398)*(x408)))+(((x398)*(x406)))+(((x398)*(x407))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((r02)*(x401)*(x402)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x398)*(x399)))+(((IkReal(13900000.0000000))*(x409)))+(((IkReal(13900000.0000000))*(x405)))+(((IkReal(-13900000.0000000))*(x406)))+(((IkReal(-13900000.0000000))*(x408)))+(((IkReal(-1.00000000000000))*(cj2)*(x398)*(x401)))+(((x400)*(x401)*(x404)))+(((IkReal(-1.00000000000000))*(x400)*(x407)))+(((IkReal(-1.00000000000000))*(x400)*(x406)))+(((IkReal(-1.00000000000000))*(x400)*(x408)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(r00)*(x402)))+(((IkReal(-1.00000000000000))*(sj2)*(x398)*(x403)))+(((x400)*(x405)))+(((x400)*(x409)))))), ((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(sj2)*(x400)*(x403)))+(((IkReal(-1.00000000000000))*(cj2)*(x400)*(x401)))+(((IkReal(-1.00000000000000))*(x402)*(x403)))+(((IkReal(-13900000.0000000))*(x399)))+(((IkReal(-13900000.0000000))*(cj2)*(x401)))+(((IkReal(-1.00000000000000))*(x398)*(x405)))+(((IkReal(-1.00000000000000))*(x398)*(x409)))+(((IkReal(-1.00000000000000))*(x399)*(x400)))+(((IkReal(-1.00000000000000))*(x398)*(x401)*(x404)))+(((x398)*(x408)))+(((x398)*(x406)))+(((x398)*(x407)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x410=IKsin(j4);
IkReal x411=IKcos(j4);
IkReal x412=((pz)*(r01));
IkReal x413=((cj3)*(py));
IkReal x414=((cj2)*(r02));
IkReal x415=((px)*(sj3));
IkReal x416=((IkReal(1.00000000000000))*(r00));
IkReal x417=((sj2)*(sj3));
IkReal x418=((IkReal(1.00000000000000))*(sj2));
IkReal x419=((cj3)*(px));
IkReal x420=((cj3)*(pz));
IkReal x421=((r00)*(sj2));
IkReal x422=((py)*(sj3));
IkReal x423=((IkReal(0.139000000000000))*(x410));
IkReal x424=((IkReal(0.139000000000000))*(x411));
IkReal x425=((IkReal(0.342300000000000))*(x411));
IkReal x426=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x427=((IkReal(0.342300000000000))*(x410));
IkReal x428=((sj5)*(x425));
IkReal x429=((cj5)*(x427));
IkReal x430=((cj5)*(x425));
IkReal x431=((sj5)*(x427));
IkReal x432=((x429)+(x423));
IkReal x433=((x424)+(x430)+(x431));
evalcond[0]=((((IkReal(-1.00000000000000))*(x420)))+(((py)*(x417)))+(((IkReal(-1.00000000000000))*(x428)))+(x432)+(((cj2)*(x415))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x419)))+(x433)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(x413)*(x418))));
evalcond[2]=((((x420)*(x421)))+(((IkReal(-1.00000000000000))*(x432)))+(((IkReal(-1.00000000000000))*(x416)*(x422)))+(((IkReal(-1.00000000000000))*(x412)*(x426)))+(((x413)*(x414)))+(((IkReal(-1.00000000000000))*(r02)*(x418)*(x419)))+(((r01)*(x415)))+(x428));
evalcond[3]=((((IkReal(-1.00000000000000))*(pz)*(x416)*(x417)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((r02)*(sj2)*(x415)))+(((r01)*(x419)))+(((IkReal(-1.00000000000000))*(x414)*(x422)))+(((IkReal(0.190000000000000))*(x421)))+(x433)+(((IkReal(-1.00000000000000))*(x413)*(x416)))+(((cj2)*(sj3)*(x412))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x434=((cj2)*(px));
IkReal x435=((IkReal(34230000.0000000))*(cj3));
IkReal x436=((py)*(sj2));
IkReal x437=((IkReal(13900000.0000000))*(cj3));
IkReal x438=((IkReal(13900000.0000000))*(sj3));
IkReal x439=((IkReal(34230000.0000000))*(sj3)*(sj5));
IkReal x440=((IkReal(34230000.0000000))*(cj5)*(sj3));
if( IKabs(((gconst5)*(((((x436)*(x438)))+(((x434)*(x440)))+(((IkReal(6503700.00000000))*(sj5)))+(((x434)*(x438)))+(((IkReal(-1.00000000000000))*(sj5)*(x434)*(x435)))+(((IkReal(-1.00000000000000))*(sj5)*(x435)*(x436)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x435)))+(((IkReal(-1.00000000000000))*(pz)*(x439)))+(((IkReal(-1.00000000000000))*(pz)*(x437)))+(((x436)*(x440))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x434)*(x437)))+(((IkReal(-1.00000000000000))*(x434)*(x439)))+(((IkReal(-1.00000000000000))*(cj5)*(x435)*(x436)))+(((IkReal(-1.00000000000000))*(x436)*(x439)))+(((IkReal(-1.00000000000000))*(x436)*(x437)))+(((pz)*(sj5)*(x435)))+(((IkReal(-1.00000000000000))*(cj5)*(x434)*(x435)))+(((IkReal(-1.00000000000000))*(pz)*(x438)))+(((IkReal(-1.00000000000000))*(pz)*(x440))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((x436)*(x438)))+(((x434)*(x440)))+(((IkReal(6503700.00000000))*(sj5)))+(((x434)*(x438)))+(((IkReal(-1.00000000000000))*(sj5)*(x434)*(x435)))+(((IkReal(-1.00000000000000))*(sj5)*(x435)*(x436)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x435)))+(((IkReal(-1.00000000000000))*(pz)*(x439)))+(((IkReal(-1.00000000000000))*(pz)*(x437)))+(((x436)*(x440)))))), ((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x434)*(x437)))+(((IkReal(-1.00000000000000))*(x434)*(x439)))+(((IkReal(-1.00000000000000))*(cj5)*(x435)*(x436)))+(((IkReal(-1.00000000000000))*(x436)*(x439)))+(((IkReal(-1.00000000000000))*(x436)*(x437)))+(((pz)*(sj5)*(x435)))+(((IkReal(-1.00000000000000))*(cj5)*(x434)*(x435)))+(((IkReal(-1.00000000000000))*(pz)*(x438)))+(((IkReal(-1.00000000000000))*(pz)*(x440)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x441=IKsin(j4);
IkReal x442=IKcos(j4);
IkReal x443=((pz)*(r01));
IkReal x444=((cj3)*(py));
IkReal x445=((cj2)*(r02));
IkReal x446=((px)*(sj3));
IkReal x447=((IkReal(1.00000000000000))*(r00));
IkReal x448=((sj2)*(sj3));
IkReal x449=((IkReal(1.00000000000000))*(sj2));
IkReal x450=((cj3)*(px));
IkReal x451=((cj3)*(pz));
IkReal x452=((r00)*(sj2));
IkReal x453=((py)*(sj3));
IkReal x454=((IkReal(0.139000000000000))*(x441));
IkReal x455=((IkReal(0.139000000000000))*(x442));
IkReal x456=((IkReal(0.342300000000000))*(x442));
IkReal x457=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x458=((IkReal(0.342300000000000))*(x441));
IkReal x459=((sj5)*(x456));
IkReal x460=((cj5)*(x458));
IkReal x461=((cj5)*(x456));
IkReal x462=((sj5)*(x458));
IkReal x463=((x454)+(x460));
IkReal x464=((x455)+(x462)+(x461));
evalcond[0]=((((IkReal(-1.00000000000000))*(x451)))+(((py)*(x448)))+(((IkReal(-1.00000000000000))*(x459)))+(x463)+(((cj2)*(x446))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x444)*(x449)))+(((IkReal(-1.00000000000000))*(cj2)*(x450)))+(x464)+(((IkReal(-1.00000000000000))*(pz)*(sj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x443)*(x457)))+(((IkReal(-1.00000000000000))*(x463)))+(((IkReal(-1.00000000000000))*(r02)*(x449)*(x450)))+(((IkReal(-1.00000000000000))*(x447)*(x453)))+(x459)+(((x444)*(x445)))+(((r01)*(x446)))+(((x451)*(x452))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x444)*(x447)))+(((cj2)*(sj3)*(x443)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(0.190000000000000))*(x452)))+(((IkReal(-1.00000000000000))*(x445)*(x453)))+(x464)+(((r02)*(sj2)*(x446)))+(((IkReal(-1.00000000000000))*(pz)*(x447)*(x448)))+(((r01)*(x450))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x465=((cj3)*(sj5));
IkReal x466=((IkReal(3423.00000000000))*(r02));
IkReal x467=((IkReal(10000.0000000000))*(cj6));
IkReal x468=((sj3)*(sj5));
IkReal x469=((cj2)*(px));
IkReal x470=((r01)*(sj2));
IkReal x471=((IkReal(1390.00000000000))*(sj3));
IkReal x472=((cj2)*(r00));
IkReal x473=((cj5)*(sj3));
IkReal x474=((py)*(sj2));
IkReal x475=((cj3)*(cj5));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x467)*(x473)*(x474)))+(((x465)*(x466)))+(((pz)*(x467)*(x475)))+(((IkReal(-1.00000000000000))*(x467)*(x469)*(x473)))+(((IkReal(-3423.00000000000))*(x468)*(x472)))+(((IkReal(-3423.00000000000))*(x468)*(x470))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-3423.00000000000))*(x472)*(x473)))+(((x466)*(x475)))+(((IkReal(-3423.00000000000))*(x470)*(x473)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((x467)*(x468)*(x474)))+(((IkReal(-1.00000000000000))*(pz)*(x465)*(x467)))+(((IkReal(-1.00000000000000))*(x471)*(x472)))+(((IkReal(-1.00000000000000))*(x470)*(x471)))+(((x467)*(x468)*(x469))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x467)*(x473)*(x474)))+(((x465)*(x466)))+(((pz)*(x467)*(x475)))+(((IkReal(-1.00000000000000))*(x467)*(x469)*(x473)))+(((IkReal(-3423.00000000000))*(x468)*(x472)))+(((IkReal(-3423.00000000000))*(x468)*(x470)))))), ((gconst2)*(((((IkReal(-3423.00000000000))*(x472)*(x473)))+(((x466)*(x475)))+(((IkReal(-3423.00000000000))*(x470)*(x473)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((x467)*(x468)*(x474)))+(((IkReal(-1.00000000000000))*(pz)*(x465)*(x467)))+(((IkReal(-1.00000000000000))*(x471)*(x472)))+(((IkReal(-1.00000000000000))*(x470)*(x471)))+(((x467)*(x468)*(x469)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x476=IKsin(j4);
IkReal x477=IKcos(j4);
IkReal x478=(pz)*(pz);
IkReal x479=(px)*(px);
IkReal x480=(py)*(py);
IkReal x481=((cj2)*(sj3));
IkReal x482=((pp)*(r00));
IkReal x483=((IkReal(2.00000000000000))*(py));
IkReal x484=((px)*(r01));
IkReal x485=((cj2)*(cj3));
IkReal x486=((IkReal(0.0361000000000000))*(r00));
IkReal x487=((r02)*(sj3));
IkReal x488=((IkReal(2.00000000000000))*(px));
IkReal x489=((IkReal(1.00000000000000))*(pp));
IkReal x490=((IkReal(1.00000000000000))*(px));
IkReal x491=((r00)*(sj3));
IkReal x492=((IkReal(1.00000000000000))*(py));
IkReal x493=((px)*(sj2));
IkReal x494=((pz)*(r01));
IkReal x495=((cj3)*(r00));
IkReal x496=((r01)*(sj2));
IkReal x497=((cj6)*(sj5));
IkReal x498=((IkReal(0.0951594000000000))*(cj6));
IkReal x499=((IkReal(0.380000000000000))*(r02));
IkReal x500=((py)*(sj2));
IkReal x501=((cj3)*(r02));
IkReal x502=((IkReal(1.00000000000000))*(pz));
IkReal x503=((IkReal(0.380000000000000))*(r00));
IkReal x504=((IkReal(0.342300000000000))*(sj6));
IkReal x505=((pz)*(sj2));
IkReal x506=((IkReal(0.136490290000000))*(cj6));
IkReal x507=((pz)*(x501));
IkReal x508=((IkReal(2.00000000000000))*(x478));
IkReal x509=((cj5)*(x477));
IkReal x510=((cj5)*(x476));
IkReal x511=((IkReal(0.139000000000000))*(x476));
IkReal x512=((IkReal(2.00000000000000))*(x480));
IkReal x513=((IkReal(0.139000000000000))*(x477));
IkReal x514=((sj5)*(x477));
IkReal x515=((sj5)*(x476));
IkReal x516=((IkReal(2.00000000000000))*(r00)*(x479));
evalcond[0]=((((cj6)*(x509)))+(((x476)*(x497)))+(((sj3)*(x496)))+(((r00)*(x481)))+(((IkReal(-1.00000000000000))*(x501))));
evalcond[1]=((((IkReal(0.342300000000000))*(x510)))+(((IkReal(-0.342300000000000))*(x514)))+(((sj3)*(x500)))+(((px)*(x481)))+(x511)+(((IkReal(-1.00000000000000))*(cj3)*(x502))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x485)))+(((IkReal(-1.00000000000000))*(cj6)*(x510)))+(((IkReal(-1.00000000000000))*(x487)))+(((IkReal(-1.00000000000000))*(cj3)*(x496)))+(((x477)*(x497))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(0.342300000000000))*(x515)))+(((IkReal(-1.00000000000000))*(sj3)*(x502)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x492)))+(((IkReal(0.342300000000000))*(x509)))+(x513)+(((IkReal(-1.00000000000000))*(x485)*(x490))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x491)*(x492)))+(((IkReal(-1.00000000000000))*(x485)*(x494)))+(((IkReal(-1.00000000000000))*(x504)*(x514)))+(((x504)*(x510)))+(((x495)*(x505)))+(((IkReal(-1.00000000000000))*(sj2)*(x490)*(x501)))+(((sj6)*(x511)))+(((sj3)*(x484)))+(((py)*(r02)*(x485))));
evalcond[5]=((((cj3)*(x484)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x504)*(x515)))+(((IkReal(-1.00000000000000))*(sj6)*(x513)))+(((IkReal(-1.00000000000000))*(sj2)*(x491)*(x502)))+(((x481)*(x494)))+(((IkReal(0.190000000000000))*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(x504)*(x509)))+(((IkReal(-1.00000000000000))*(r02)*(x481)*(x492)))+(((x487)*(x493)))+(((IkReal(-1.00000000000000))*(x492)*(x495))));
evalcond[6]=((((x485)*(x486)))+(((x483)*(x493)*(x495)))+(((pz)*(x488)*(x491)))+(((IkReal(0.0361000000000000))*(cj3)*(x496)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((x487)*(x508)))+(((pz)*(r02)*(x485)*(x488)))+(((IkReal(-1.00000000000000))*(x487)*(x489)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))+(((x483)*(x501)*(x505)))+(((IkReal(0.0978482900000000))*(x477)*(x497)))+(((x483)*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(x506)*(x510)))+(((cj3)*(x496)*(x512)))+(((IkReal(0.0361000000000000))*(x487)))+(((IkReal(-1.00000000000000))*(pz)*(x499)))+(((IkReal(-1.00000000000000))*(px)*(x503)))+(((IkReal(-1.00000000000000))*(cj3)*(x489)*(x496)))+(((sj3)*(x483)*(x494)))+(((x485)*(x516)))+(((IkReal(-1.00000000000000))*(x476)*(x498))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x489)*(x501)))+(((cj3)*(x483)*(x494)))+(((pz)*(x488)*(x495)))+(((IkReal(-1.00000000000000))*(x483)*(x491)*(x493)))+(((IkReal(0.0361000000000000))*(sj3)*(x496)))+(((pp)*(sj3)*(x496)))+(((x506)*(x509)))+(((IkReal(-1.00000000000000))*(sj3)*(x496)*(x512)))+(((x481)*(x482)))+(((x481)*(x486)))+(((IkReal(-0.0361000000000000))*(x501)))+(((x501)*(x508)))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x503)))+(((x477)*(x498)))+(((IkReal(-1.00000000000000))*(x481)*(x483)*(x484)))+(((IkReal(0.0978482900000000))*(x476)*(x497)))+(((cj2)*(px)*(x499)))+(((x499)*(x500)))+(((IkReal(-1.00000000000000))*(pz)*(r02)*(x481)*(x488)))+(((IkReal(-0.380000000000000))*(sj2)*(x494)))+(((IkReal(-1.00000000000000))*(x481)*(x516)))+(((IkReal(-1.00000000000000))*(x483)*(x487)*(x505))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x517=((cj3)*(sj5));
IkReal x518=((cj2)*(r00));
IkReal x519=((cj3)*(cj5));
IkReal x520=((r01)*(sj2));
IkReal x521=((IkReal(1.00000000000000))*(sj3)*(sj5));
IkReal x522=((IkReal(1.00000000000000))*(cj5)*(sj3));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x520)*(x521)))+(((IkReal(-1.00000000000000))*(x519)*(x520)))+(((IkReal(-1.00000000000000))*(r02)*(x522)))+(((IkReal(-1.00000000000000))*(x518)*(x519)))+(((IkReal(-1.00000000000000))*(x518)*(x521)))+(((r02)*(x517))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x520)*(x522)))+(((r02)*(sj3)*(sj5)))+(((x517)*(x520)))+(((x517)*(x518)))+(((IkReal(-1.00000000000000))*(x518)*(x522)))+(((r02)*(x519))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x520)*(x521)))+(((IkReal(-1.00000000000000))*(x519)*(x520)))+(((IkReal(-1.00000000000000))*(r02)*(x522)))+(((IkReal(-1.00000000000000))*(x518)*(x519)))+(((IkReal(-1.00000000000000))*(x518)*(x521)))+(((r02)*(x517)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(x520)*(x522)))+(((r02)*(sj3)*(sj5)))+(((x517)*(x520)))+(((x517)*(x518)))+(((IkReal(-1.00000000000000))*(x518)*(x522)))+(((r02)*(x519)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x523=IKsin(j4);
IkReal x524=IKcos(j4);
IkReal x525=(pz)*(pz);
IkReal x526=(px)*(px);
IkReal x527=(py)*(py);
IkReal x528=((cj2)*(sj3));
IkReal x529=((pp)*(r00));
IkReal x530=((IkReal(2.00000000000000))*(py));
IkReal x531=((px)*(r01));
IkReal x532=((cj2)*(cj3));
IkReal x533=((IkReal(0.0361000000000000))*(r00));
IkReal x534=((r02)*(sj3));
IkReal x535=((IkReal(2.00000000000000))*(px));
IkReal x536=((IkReal(1.00000000000000))*(pp));
IkReal x537=((IkReal(1.00000000000000))*(px));
IkReal x538=((r00)*(sj3));
IkReal x539=((IkReal(1.00000000000000))*(py));
IkReal x540=((px)*(sj2));
IkReal x541=((pz)*(r01));
IkReal x542=((cj3)*(r00));
IkReal x543=((r01)*(sj2));
IkReal x544=((cj6)*(sj5));
IkReal x545=((IkReal(0.0951594000000000))*(cj6));
IkReal x546=((IkReal(0.380000000000000))*(r02));
IkReal x547=((py)*(sj2));
IkReal x548=((cj3)*(r02));
IkReal x549=((IkReal(1.00000000000000))*(pz));
IkReal x550=((IkReal(0.380000000000000))*(r00));
IkReal x551=((IkReal(0.342300000000000))*(sj6));
IkReal x552=((pz)*(sj2));
IkReal x553=((IkReal(0.136490290000000))*(cj6));
IkReal x554=((pz)*(x548));
IkReal x555=((IkReal(2.00000000000000))*(x525));
IkReal x556=((cj5)*(x524));
IkReal x557=((cj5)*(x523));
IkReal x558=((IkReal(0.139000000000000))*(x523));
IkReal x559=((IkReal(2.00000000000000))*(x527));
IkReal x560=((IkReal(0.139000000000000))*(x524));
IkReal x561=((sj5)*(x524));
IkReal x562=((sj5)*(x523));
IkReal x563=((IkReal(2.00000000000000))*(r00)*(x526));
evalcond[0]=((((IkReal(-1.00000000000000))*(x548)))+(((sj3)*(x543)))+(((x523)*(x544)))+(((cj6)*(x556)))+(((r00)*(x528))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x549)))+(((sj3)*(x547)))+(((px)*(x528)))+(x558)+(((IkReal(0.342300000000000))*(x557)))+(((IkReal(-0.342300000000000))*(x561))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj6)*(x557)))+(((IkReal(-1.00000000000000))*(x534)))+(((IkReal(-1.00000000000000))*(cj3)*(x543)))+(((x524)*(x544)))+(((IkReal(-1.00000000000000))*(r00)*(x532))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x532)*(x537)))+(((IkReal(-1.00000000000000))*(sj3)*(x549)))+(((IkReal(0.342300000000000))*(x562)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x539)))+(x560)+(((IkReal(0.342300000000000))*(x556))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x532)*(x541)))+(((x542)*(x552)))+(((IkReal(-1.00000000000000))*(sj2)*(x537)*(x548)))+(((IkReal(-1.00000000000000))*(x538)*(x539)))+(((sj3)*(x531)))+(((py)*(r02)*(x532)))+(((x551)*(x557)))+(((sj6)*(x558)))+(((IkReal(-1.00000000000000))*(x551)*(x561))));
evalcond[5]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(sj6)*(x560)))+(((IkReal(-1.00000000000000))*(x539)*(x542)))+(((IkReal(-1.00000000000000))*(x551)*(x556)))+(((IkReal(-1.00000000000000))*(r02)*(x528)*(x539)))+(((IkReal(0.190000000000000))*(r00)*(sj2)))+(((x534)*(x540)))+(((cj3)*(x531)))+(((IkReal(-1.00000000000000))*(x551)*(x562)))+(((IkReal(-1.00000000000000))*(sj2)*(x538)*(x549)))+(((x528)*(x541))));
evalcond[6]=((((sj3)*(x530)*(x541)))+(((x532)*(x563)))+(((x530)*(x531)*(x532)))+(((IkReal(-1.00000000000000))*(x529)*(x532)))+(((IkReal(-1.00000000000000))*(x534)*(x536)))+(((IkReal(-1.00000000000000))*(x523)*(x545)))+(((IkReal(0.0361000000000000))*(cj3)*(x543)))+(((x530)*(x540)*(x542)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((IkReal(-1.00000000000000))*(x553)*(x557)))+(((pz)*(x535)*(x538)))+(((x534)*(x555)))+(((IkReal(0.0978482900000000))*(x524)*(x544)))+(((IkReal(-1.00000000000000))*(px)*(x550)))+(((IkReal(-1.00000000000000))*(pz)*(x546)))+(((cj3)*(x543)*(x559)))+(((x530)*(x548)*(x552)))+(((x532)*(x533)))+(((IkReal(0.0361000000000000))*(x534)))+(((IkReal(-1.00000000000000))*(cj3)*(x536)*(x543)))+(((pz)*(r02)*(x532)*(x535))));
evalcond[7]=((((x548)*(x555)))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x550)))+(((cj3)*(x530)*(x541)))+(((IkReal(-1.00000000000000))*(x530)*(x534)*(x552)))+(((IkReal(-1.00000000000000))*(x528)*(x530)*(x531)))+(((IkReal(0.0978482900000000))*(x523)*(x544)))+(((pz)*(x535)*(x542)))+(((IkReal(-1.00000000000000))*(pz)*(r02)*(x528)*(x535)))+(((IkReal(0.0361000000000000))*(sj3)*(x543)))+(((x524)*(x545)))+(((IkReal(-1.00000000000000))*(sj3)*(x543)*(x559)))+(((IkReal(-1.00000000000000))*(x536)*(x548)))+(((x528)*(x533)))+(((IkReal(-1.00000000000000))*(x530)*(x538)*(x540)))+(((IkReal(-0.0361000000000000))*(x548)))+(((x528)*(x529)))+(((pp)*(sj3)*(x543)))+(((cj2)*(px)*(x546)))+(((x553)*(x556)))+(((IkReal(-1.00000000000000))*(x528)*(x563)))+(((IkReal(-0.380000000000000))*(sj2)*(x541)))+(((x546)*(x547))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x564=((IkReal(1000.00000000000))*(pz));
IkReal x565=((cj2)*(r00));
IkReal x566=((IkReal(1000.00000000000))*(px));
IkReal x567=((IkReal(190.000000000000))*(cj3));
IkReal x568=((IkReal(1000.00000000000))*(py));
IkReal x569=((IkReal(190.000000000000))*(sj3));
IkReal x570=((r01)*(sj2));
if( IKabs(((gconst0)*(((((r01)*(x568)))+(((r00)*(x566)))+(((IkReal(-1.00000000000000))*(x567)*(x570)))+(((r02)*(x564)))+(((IkReal(-1.00000000000000))*(r02)*(x569)))+(((IkReal(-1.00000000000000))*(x565)*(x567))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x564)*(x565)))+(((IkReal(-342.300000000000))*(cj6)))+(((x565)*(x569)))+(((cj2)*(r02)*(x566)))+(((IkReal(-1.00000000000000))*(x564)*(x570)))+(((x569)*(x570)))+(((r02)*(sj2)*(x568)))+(((IkReal(-1.00000000000000))*(r02)*(x567))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst0)*(((((r01)*(x568)))+(((r00)*(x566)))+(((IkReal(-1.00000000000000))*(x567)*(x570)))+(((r02)*(x564)))+(((IkReal(-1.00000000000000))*(r02)*(x569)))+(((IkReal(-1.00000000000000))*(x565)*(x567)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(x564)*(x565)))+(((IkReal(-342.300000000000))*(cj6)))+(((x565)*(x569)))+(((cj2)*(r02)*(x566)))+(((IkReal(-1.00000000000000))*(x564)*(x570)))+(((x569)*(x570)))+(((r02)*(sj2)*(x568)))+(((IkReal(-1.00000000000000))*(r02)*(x567)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x571=IKcos(j5);
IkReal x572=((cj2)*(r00));
IkReal x573=((IkReal(0.190000000000000))*(sj3));
IkReal x574=((IkReal(2.00000000000000))*(py));
IkReal x575=((r00)*(sj2));
IkReal x576=((IkReal(0.380000000000000))*(py));
IkReal x577=((r02)*(sj3));
IkReal x578=((r01)*(sj2));
IkReal x579=((IkReal(1.00000000000000))*(pp));
IkReal x580=((r02)*(sj2));
IkReal x581=((IkReal(0.380000000000000))*(px));
IkReal x582=((IkReal(0.139000000000000))*(cj6));
IkReal x583=((cj2)*(pz));
IkReal x584=((cj2)*(r01));
IkReal x585=((IkReal(0.380000000000000))*(sj3));
IkReal x586=((IkReal(0.190000000000000))*(cj3));
IkReal x587=((IkReal(1.00000000000000))*(pz));
IkReal x588=((IkReal(0.0951594000000000))*(x571));
evalcond[0]=((IkReal(0.100390290000000))+(((cj2)*(cj3)*(x581)))+(((IkReal(-1.00000000000000))*(x579)))+(x588)+(((cj3)*(sj2)*(x576)))+(((pz)*(x585))));
evalcond[1]=((((x578)*(x586)))+(((IkReal(-1.00000000000000))*(r02)*(x587)))+(((x582)*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((r02)*(x573)))+(((IkReal(-1.00000000000000))*(py)*(r01)))+(((x572)*(x586))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x586)))+(((cj2)*(px)*(r02)))+(((IkReal(-1.00000000000000))*(x572)*(x587)))+(((IkReal(-1.00000000000000))*(x578)*(x587)))+(((IkReal(-0.342300000000000))*(cj6)))+(((x573)*(x578)))+(((IkReal(-1.00000000000000))*(x571)*(x582)))+(((py)*(x580)))+(((x572)*(x573))));
evalcond[3]=((((pz)*(x575)*(x585)))+(((pp)*(x584)))+(((IkReal(-1.00000000000000))*(r02)*(x574)*(x583)))+(((IkReal(-0.0361000000000000))*(x575)))+(((IkReal(-1.00000000000000))*(r01)*(x583)*(x585)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x581)))+(((IkReal(-1.00000000000000))*(sj6)*(x588)))+(((IkReal(-1.00000000000000))*(sj2)*(x577)*(x581)))+(((IkReal(0.0361000000000000))*(x584)))+(((IkReal(-1.00000000000000))*(px)*(x572)*(x574)))+(((IkReal(2.00000000000000))*(x575)*((px)*(px))))+(((IkReal(-1.00000000000000))*(x575)*(x579)))+(((cj2)*(x576)*(x577)))+(((IkReal(2.00000000000000))*(px)*(pz)*(x580)))+(((IkReal(-0.136490290000000))*(sj6)))+(((cj3)*(r00)*(x576)))+(((px)*(x574)*(x578)))+(((IkReal(-1.00000000000000))*(py)*(x574)*(x584))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x589=((IkReal(3423.00000000000))*(cj6));
gconst2=IKsign(((((IkReal(1390.00000000000))*(cj5)*(cj6)))+(((x589)*((sj5)*(sj5))))+(((x589)*((cj5)*(cj5))))));
IkReal x590=((IkReal(2.46258992805755))*(cj6));
dummyeval[0]=((((x590)*((sj5)*(sj5))))+(((x590)*((cj5)*(cj5))))+(((cj5)*(cj6))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x591=((IkReal(0.0951594000000000))*(cj5));
IkReal x592=(px)*(px);
IkReal x593=(py)*(py);
IkReal x594=(pz)*(pz);
IkReal x595=((cj2)*(r00));
IkReal x596=((IkReal(0.190000000000000))*(sj3));
IkReal x597=((pp)*(sj3));
IkReal x598=((r01)*(sj2));
IkReal x599=((IkReal(2.00000000000000))*(r02));
IkReal x600=((IkReal(0.0361000000000000))*(cj3));
IkReal x601=((IkReal(1.00000000000000))*(r02));
IkReal x602=((IkReal(0.380000000000000))*(pz));
IkReal x603=((r00)*(sj2));
IkReal x604=((cj2)*(py));
IkReal x605=((IkReal(1.00000000000000))*(cj3));
IkReal x606=((IkReal(1.00000000000000))*(pp));
IkReal x607=((IkReal(0.0361000000000000))*(sj3));
IkReal x608=((px)*(pz));
IkReal x609=((cj2)*(sj3));
IkReal x610=((r02)*(sj2));
IkReal x611=((cj3)*(r00));
IkReal x612=((IkReal(0.380000000000000))*(py));
IkReal x613=((py)*(r01));
IkReal x614=((cj2)*(r01));
IkReal x615=((IkReal(2.00000000000000))*(r00));
IkReal x616=((IkReal(0.380000000000000))*(px));
IkReal x617=((IkReal(2.00000000000000))*(pz));
IkReal x618=((cj2)*(r02));
IkReal x619=((IkReal(1.00000000000000))*(px));
IkReal x620=((IkReal(0.190000000000000))*(cj3));
IkReal x621=((IkReal(1.00000000000000))*(pz));
IkReal x622=((cj3)*(x616));
IkReal x623=((cj3)*(py)*(sj2));
IkReal x624=((IkReal(2.00000000000000))*(px)*(py));
IkReal x625=((IkReal(2.00000000000000))*(x592));
IkReal x626=((IkReal(2.00000000000000))*(x593));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)*(x619)))+(x604));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x603)))+(x614));
evalcond[3]=((IkReal(0.100390290000000))+(x591)+(((cj3)*(sj2)*(x612)))+(((IkReal(-1.00000000000000))*(x606)))+(((sj3)*(x602)))+(((cj2)*(x622))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj3)*(x601)))+(((sj3)*(x595)))+(((sj3)*(x598))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x619)))+(((IkReal(-1.00000000000000))*(x613)))+(((r02)*(x596)))+(((x598)*(x620)))+(((x595)*(x620)))+(((IkReal(-1.00000000000000))*(pz)*(x601))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x601)))+(((IkReal(-1.00000000000000))*(x598)*(x605)))+(((IkReal(-1.00000000000000))*(x595)*(x605))));
evalcond[7]=((((x595)*(x596)))+(((IkReal(-1.00000000000000))*(r02)*(x620)))+(((px)*(x618)))+(((IkReal(-1.00000000000000))*(x595)*(x621)))+(((py)*(x610)))+(((x596)*(x598)))+(((IkReal(-1.00000000000000))*(x598)*(x621))));
evalcond[8]=((IkReal(-0.136490290000000))+(((x603)*(x625)))+(((pp)*(x614)))+(((IkReal(-1.00000000000000))*(x603)*(x606)))+(((IkReal(-1.00000000000000))*(sj3)*(x610)*(x616)))+(((IkReal(-1.00000000000000))*(r01)*(x622)))+(((x611)*(x612)))+(((IkReal(0.380000000000000))*(r02)*(sj3)*(x604)))+(((sj3)*(x602)*(x603)))+(((IkReal(-1.00000000000000))*(x591)))+(((IkReal(-1.00000000000000))*(x595)*(x624)))+(((x598)*(x624)))+(((IkReal(-1.00000000000000))*(r01)*(x602)*(x609)))+(((IkReal(-1.00000000000000))*(x614)*(x626)))+(((IkReal(-1.00000000000000))*(pz)*(x599)*(x604)))+(((sj2)*(x599)*(x608)))+(((IkReal(-0.0361000000000000))*(x603)))+(((IkReal(0.0361000000000000))*(x614))));
evalcond[9]=((((cj3)*(x595)*(x625)))+(((IkReal(-1.00000000000000))*(pp)*(x598)*(x605)))+(((sj3)*(x594)*(x599)))+(((sj3)*(x608)*(x615)))+(((x595)*(x600)))+(((cj3)*(x598)*(x626)))+(((IkReal(-1.00000000000000))*(r00)*(x616)))+(((IkReal(-1.00000000000000))*(r01)*(x612)))+(((cj3)*(x603)*(x624)))+(((sj3)*(x613)*(x617)))+(((IkReal(-1.00000000000000))*(x597)*(x601)))+(((IkReal(-1.00000000000000))*(pp)*(x595)*(x605)))+(((pz)*(x599)*(x623)))+(((IkReal(2.00000000000000))*(cj3)*(px)*(r01)*(x604)))+(((r02)*(x607)))+(((cj2)*(cj3)*(x599)*(x608)))+(((IkReal(-1.00000000000000))*(r02)*(x602)))+(((x598)*(x600))));
evalcond[10]=((((IkReal(-2.00000000000000))*(px)*(r01)*(sj3)*(x604)))+(((x595)*(x597)))+(((x595)*(x607)))+(((IkReal(-1.00000000000000))*(x599)*(x608)*(x609)))+(((IkReal(-1.00000000000000))*(sj3)*(x598)*(x626)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x601)))+(((IkReal(2.00000000000000))*(x608)*(x611)))+(((IkReal(-1.00000000000000))*(sj3)*(x603)*(x624)))+(((x616)*(x618)))+(((IkReal(-1.00000000000000))*(x598)*(x602)))+(((cj3)*(x613)*(x617)))+(((cj3)*(x594)*(x599)))+(((IkReal(-1.00000000000000))*(sj3)*(x595)*(x625)))+(((IkReal(-1.00000000000000))*(r02)*(x600)))+(((x597)*(x598)))+(((IkReal(-1.00000000000000))*(py)*(pz)*(sj2)*(sj3)*(x599)))+(((x610)*(x612)))+(((x598)*(x607)))+(((IkReal(-1.00000000000000))*(x595)*(x602))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x627=((IkReal(34230000.0000000))*(sj5));
IkReal x628=((pz)*(sj3));
IkReal x629=((IkReal(34230000.0000000))*(cj5));
IkReal x630=((cj3)*(px));
IkReal x631=((IkReal(13900000.0000000))*(sj2));
IkReal x632=((cj3)*(py));
IkReal x633=((r02)*(sj2));
IkReal x634=((py)*(r00)*(sj3));
IkReal x635=((px)*(r01)*(sj3));
IkReal x636=((cj3)*(pz)*(r00)*(sj2));
IkReal x637=((cj2)*(r02)*(x632));
IkReal x638=((cj2)*(cj3)*(pz)*(r01));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x629)*(x638)))+(((IkReal(-1.00000000000000))*(x629)*(x634)))+(((IkReal(-1.00000000000000))*(x629)*(x630)*(x633)))+(((IkReal(-1.00000000000000))*(r02)*(x630)*(x631)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x634)))+(((IkReal(-13900000.0000000))*(x638)))+(((x629)*(x636)))+(((x629)*(x637)))+(((x629)*(x635)))+(((cj3)*(pz)*(r00)*(x631)))+(((IkReal(-1.00000000000000))*(cj2)*(x627)*(x630)))+(((IkReal(-1.00000000000000))*(x627)*(x628)))+(((IkReal(13900000.0000000))*(x635)))+(((IkReal(13900000.0000000))*(x637)))+(((IkReal(-1.00000000000000))*(sj2)*(x627)*(x632))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-13900000.0000000))*(x628)))+(((IkReal(-1.00000000000000))*(x628)*(x629)))+(((IkReal(-1.00000000000000))*(cj2)*(x629)*(x630)))+(((IkReal(-1.00000000000000))*(x627)*(x636)))+(((IkReal(-1.00000000000000))*(x627)*(x637)))+(((IkReal(-1.00000000000000))*(x627)*(x635)))+(((IkReal(-13900000.0000000))*(cj2)*(x630)))+(((x627)*(x638)))+(((x627)*(x634)))+(((x627)*(x630)*(x633)))+(((IkReal(-1.00000000000000))*(sj2)*(x629)*(x632))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x629)*(x638)))+(((IkReal(-1.00000000000000))*(x629)*(x634)))+(((IkReal(-1.00000000000000))*(x629)*(x630)*(x633)))+(((IkReal(-1.00000000000000))*(r02)*(x630)*(x631)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x634)))+(((IkReal(-13900000.0000000))*(x638)))+(((x629)*(x636)))+(((x629)*(x637)))+(((x629)*(x635)))+(((cj3)*(pz)*(r00)*(x631)))+(((IkReal(-1.00000000000000))*(cj2)*(x627)*(x630)))+(((IkReal(-1.00000000000000))*(x627)*(x628)))+(((IkReal(13900000.0000000))*(x635)))+(((IkReal(13900000.0000000))*(x637)))+(((IkReal(-1.00000000000000))*(sj2)*(x627)*(x632)))))), ((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-13900000.0000000))*(x628)))+(((IkReal(-1.00000000000000))*(x628)*(x629)))+(((IkReal(-1.00000000000000))*(cj2)*(x629)*(x630)))+(((IkReal(-1.00000000000000))*(x627)*(x636)))+(((IkReal(-1.00000000000000))*(x627)*(x637)))+(((IkReal(-1.00000000000000))*(x627)*(x635)))+(((IkReal(-13900000.0000000))*(cj2)*(x630)))+(((x627)*(x638)))+(((x627)*(x634)))+(((x627)*(x630)*(x633)))+(((IkReal(-1.00000000000000))*(sj2)*(x629)*(x632)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x639=IKsin(j4);
IkReal x640=IKcos(j4);
IkReal x641=((pz)*(r01));
IkReal x642=((cj3)*(py));
IkReal x643=((cj2)*(r02));
IkReal x644=((px)*(sj3));
IkReal x645=((IkReal(1.00000000000000))*(r00));
IkReal x646=((sj2)*(sj3));
IkReal x647=((IkReal(1.00000000000000))*(sj2));
IkReal x648=((cj3)*(px));
IkReal x649=((cj3)*(pz));
IkReal x650=((r00)*(sj2));
IkReal x651=((py)*(sj3));
IkReal x652=((IkReal(0.139000000000000))*(x639));
IkReal x653=((IkReal(0.139000000000000))*(x640));
IkReal x654=((IkReal(0.342300000000000))*(x640));
IkReal x655=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x656=((IkReal(0.342300000000000))*(x639));
IkReal x657=((cj5)*(x656));
IkReal x658=((sj5)*(x654));
IkReal x659=((cj5)*(x654));
IkReal x660=((sj5)*(x656));
IkReal x661=((x652)+(x657));
IkReal x662=((x653)+(x659)+(x660));
evalcond[0]=((((IkReal(-1.00000000000000))*(x649)))+(((py)*(x646)))+(((IkReal(-1.00000000000000))*(x658)))+(((cj2)*(x644)))+(x661));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x642)*(x647)))+(((IkReal(-1.00000000000000))*(cj2)*(x648)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(x662));
evalcond[2]=((((IkReal(-1.00000000000000))*(x641)*(x655)))+(((IkReal(-1.00000000000000))*(r02)*(x647)*(x648)))+(((x649)*(x650)))+(((IkReal(-1.00000000000000))*(x658)))+(x661)+(((IkReal(-1.00000000000000))*(x645)*(x651)))+(((r01)*(x644)))+(((x642)*(x643))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x642)*(x645)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x643)*(x651)))+(((cj2)*(sj3)*(x641)))+(((IkReal(-1.00000000000000))*(x662)))+(((r01)*(x648)))+(((r02)*(sj2)*(x644)))+(((IkReal(0.190000000000000))*(x650)))+(((IkReal(-1.00000000000000))*(pz)*(x645)*(x646))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x663=((cj2)*(px));
IkReal x664=((IkReal(34230000.0000000))*(cj3));
IkReal x665=((py)*(sj2));
IkReal x666=((IkReal(13900000.0000000))*(cj3));
IkReal x667=((IkReal(13900000.0000000))*(sj3));
IkReal x668=((IkReal(34230000.0000000))*(sj3)*(sj5));
IkReal x669=((IkReal(34230000.0000000))*(cj5)*(sj3));
if( IKabs(((gconst3)*(((((IkReal(6503700.00000000))*(sj5)))+(((x665)*(x667)))+(((x665)*(x669)))+(((IkReal(-1.00000000000000))*(sj5)*(x664)*(x665)))+(((x663)*(x669)))+(((x663)*(x667)))+(((IkReal(-1.00000000000000))*(pz)*(x668)))+(((IkReal(-1.00000000000000))*(pz)*(x666)))+(((IkReal(-1.00000000000000))*(sj5)*(x663)*(x664)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x664))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x665)*(x668)))+(((IkReal(-1.00000000000000))*(x665)*(x666)))+(((pz)*(sj5)*(x664)))+(((IkReal(-1.00000000000000))*(cj5)*(x663)*(x664)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x663)*(x666)))+(((IkReal(-1.00000000000000))*(x663)*(x668)))+(((IkReal(-1.00000000000000))*(pz)*(x669)))+(((IkReal(-1.00000000000000))*(pz)*(x667)))+(((IkReal(-1.00000000000000))*(cj5)*(x664)*(x665))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((IkReal(6503700.00000000))*(sj5)))+(((x665)*(x667)))+(((x665)*(x669)))+(((IkReal(-1.00000000000000))*(sj5)*(x664)*(x665)))+(((x663)*(x669)))+(((x663)*(x667)))+(((IkReal(-1.00000000000000))*(pz)*(x668)))+(((IkReal(-1.00000000000000))*(pz)*(x666)))+(((IkReal(-1.00000000000000))*(sj5)*(x663)*(x664)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x664)))))), ((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x665)*(x668)))+(((IkReal(-1.00000000000000))*(x665)*(x666)))+(((pz)*(sj5)*(x664)))+(((IkReal(-1.00000000000000))*(cj5)*(x663)*(x664)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x663)*(x666)))+(((IkReal(-1.00000000000000))*(x663)*(x668)))+(((IkReal(-1.00000000000000))*(pz)*(x669)))+(((IkReal(-1.00000000000000))*(pz)*(x667)))+(((IkReal(-1.00000000000000))*(cj5)*(x664)*(x665)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x670=IKsin(j4);
IkReal x671=IKcos(j4);
IkReal x672=((pz)*(r01));
IkReal x673=((cj3)*(py));
IkReal x674=((cj2)*(r02));
IkReal x675=((px)*(sj3));
IkReal x676=((IkReal(1.00000000000000))*(r00));
IkReal x677=((sj2)*(sj3));
IkReal x678=((IkReal(1.00000000000000))*(sj2));
IkReal x679=((cj3)*(px));
IkReal x680=((cj3)*(pz));
IkReal x681=((r00)*(sj2));
IkReal x682=((py)*(sj3));
IkReal x683=((IkReal(0.139000000000000))*(x670));
IkReal x684=((IkReal(0.139000000000000))*(x671));
IkReal x685=((IkReal(0.342300000000000))*(x671));
IkReal x686=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x687=((IkReal(0.342300000000000))*(x670));
IkReal x688=((cj5)*(x687));
IkReal x689=((sj5)*(x685));
IkReal x690=((cj5)*(x685));
IkReal x691=((sj5)*(x687));
IkReal x692=((x688)+(x683));
IkReal x693=((x684)+(x690)+(x691));
evalcond[0]=((((py)*(x677)))+(((cj2)*(x675)))+(((IkReal(-1.00000000000000))*(x689)))+(x692)+(((IkReal(-1.00000000000000))*(x680))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(x693)+(((IkReal(-1.00000000000000))*(x673)*(x678)))+(((IkReal(-1.00000000000000))*(cj2)*(x679))));
evalcond[2]=((((x673)*(x674)))+(((r01)*(x675)))+(((IkReal(-1.00000000000000))*(x689)))+(((IkReal(-1.00000000000000))*(r02)*(x678)*(x679)))+(((x680)*(x681)))+(x692)+(((IkReal(-1.00000000000000))*(x672)*(x686)))+(((IkReal(-1.00000000000000))*(x676)*(x682))));
evalcond[3]=((((cj2)*(sj3)*(x672)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((r01)*(x679)))+(((IkReal(-1.00000000000000))*(pz)*(x676)*(x677)))+(((IkReal(0.190000000000000))*(x681)))+(((r02)*(sj2)*(x675)))+(((IkReal(-1.00000000000000))*(x674)*(x682)))+(((IkReal(-1.00000000000000))*(x693)))+(((IkReal(-1.00000000000000))*(x673)*(x676))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x694=((IkReal(0.0951594000000000))*(cj5));
IkReal x695=(px)*(px);
IkReal x696=(py)*(py);
IkReal x697=(pz)*(pz);
IkReal x698=((cj2)*(r00));
IkReal x699=((IkReal(0.190000000000000))*(sj3));
IkReal x700=((pp)*(sj3));
IkReal x701=((r01)*(sj2));
IkReal x702=((IkReal(2.00000000000000))*(r02));
IkReal x703=((IkReal(0.0361000000000000))*(cj3));
IkReal x704=((IkReal(1.00000000000000))*(r02));
IkReal x705=((IkReal(0.380000000000000))*(pz));
IkReal x706=((r00)*(sj2));
IkReal x707=((cj2)*(py));
IkReal x708=((IkReal(1.00000000000000))*(cj3));
IkReal x709=((IkReal(1.00000000000000))*(pp));
IkReal x710=((IkReal(0.0361000000000000))*(sj3));
IkReal x711=((px)*(pz));
IkReal x712=((cj2)*(sj3));
IkReal x713=((r02)*(sj2));
IkReal x714=((cj3)*(r00));
IkReal x715=((IkReal(0.380000000000000))*(py));
IkReal x716=((py)*(r01));
IkReal x717=((cj2)*(r01));
IkReal x718=((IkReal(2.00000000000000))*(r00));
IkReal x719=((IkReal(0.380000000000000))*(px));
IkReal x720=((IkReal(2.00000000000000))*(pz));
IkReal x721=((cj2)*(r02));
IkReal x722=((IkReal(1.00000000000000))*(px));
IkReal x723=((IkReal(0.190000000000000))*(cj3));
IkReal x724=((IkReal(1.00000000000000))*(pz));
IkReal x725=((cj3)*(x719));
IkReal x726=((cj3)*(py)*(sj2));
IkReal x727=((IkReal(2.00000000000000))*(px)*(py));
IkReal x728=((IkReal(2.00000000000000))*(x695));
IkReal x729=((IkReal(2.00000000000000))*(x696));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)*(x722)))+(x707));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x706)))+(x717));
evalcond[3]=((IkReal(0.100390290000000))+(((sj3)*(x705)))+(((IkReal(-1.00000000000000))*(x709)))+(((cj2)*(x725)))+(x694)+(((cj3)*(sj2)*(x715))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj3)*(x704)))+(((sj3)*(x701)))+(((sj3)*(x698))));
evalcond[5]=((((x701)*(x723)))+(((IkReal(-1.00000000000000))*(r00)*(x722)))+(((IkReal(-1.00000000000000))*(pz)*(x704)))+(((IkReal(-1.00000000000000))*(x716)))+(((r02)*(x699)))+(((x698)*(x723))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x698)*(x708)))+(((IkReal(-1.00000000000000))*(sj3)*(x704)))+(((IkReal(-1.00000000000000))*(x701)*(x708))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x701)*(x724)))+(((IkReal(-1.00000000000000))*(r02)*(x723)))+(((px)*(x721)))+(((py)*(x713)))+(((IkReal(-1.00000000000000))*(x698)*(x724)))+(((x698)*(x699)))+(((x699)*(x701))));
evalcond[8]=((IkReal(0.136490290000000))+(((x701)*(x727)))+(((x714)*(x715)))+(((IkReal(-1.00000000000000))*(x706)*(x709)))+(((IkReal(-0.0361000000000000))*(x706)))+(((sj2)*(x702)*(x711)))+(((IkReal(-1.00000000000000))*(r01)*(x705)*(x712)))+(((IkReal(-1.00000000000000))*(sj3)*(x713)*(x719)))+(((IkReal(-1.00000000000000))*(pz)*(x702)*(x707)))+(((x706)*(x728)))+(((IkReal(-1.00000000000000))*(x717)*(x729)))+(((pp)*(x717)))+(x694)+(((IkReal(0.380000000000000))*(r02)*(sj3)*(x707)))+(((IkReal(-1.00000000000000))*(x698)*(x727)))+(((IkReal(-1.00000000000000))*(r01)*(x725)))+(((IkReal(0.0361000000000000))*(x717)))+(((sj3)*(x705)*(x706))));
evalcond[9]=((((IkReal(2.00000000000000))*(cj3)*(px)*(r01)*(x707)))+(((pz)*(x702)*(x726)))+(((IkReal(-1.00000000000000))*(r02)*(x705)))+(((x701)*(x703)))+(((sj3)*(x711)*(x718)))+(((cj2)*(cj3)*(x702)*(x711)))+(((cj3)*(x698)*(x728)))+(((x698)*(x703)))+(((IkReal(-1.00000000000000))*(pp)*(x698)*(x708)))+(((IkReal(-1.00000000000000))*(r01)*(x715)))+(((r02)*(x710)))+(((sj3)*(x697)*(x702)))+(((cj3)*(x706)*(x727)))+(((IkReal(-1.00000000000000))*(r00)*(x719)))+(((IkReal(-1.00000000000000))*(x700)*(x704)))+(((sj3)*(x716)*(x720)))+(((cj3)*(x701)*(x729)))+(((IkReal(-1.00000000000000))*(pp)*(x701)*(x708))));
evalcond[10]=((((IkReal(-1.00000000000000))*(r02)*(x703)))+(((x701)*(x710)))+(((IkReal(-2.00000000000000))*(px)*(r01)*(sj3)*(x707)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x704)))+(((IkReal(-1.00000000000000))*(sj3)*(x701)*(x729)))+(((x700)*(x701)))+(((cj3)*(x716)*(x720)))+(((cj3)*(x697)*(x702)))+(((IkReal(-1.00000000000000))*(sj3)*(x698)*(x728)))+(((IkReal(-1.00000000000000))*(x702)*(x711)*(x712)))+(((IkReal(-1.00000000000000))*(sj3)*(x706)*(x727)))+(((x698)*(x700)))+(((x719)*(x721)))+(((x698)*(x710)))+(((IkReal(-1.00000000000000))*(x698)*(x705)))+(((IkReal(2.00000000000000))*(x711)*(x714)))+(((IkReal(-1.00000000000000))*(x701)*(x705)))+(((x713)*(x715)))+(((IkReal(-1.00000000000000))*(py)*(pz)*(sj2)*(sj3)*(x702))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-11716929.0000000))*((sj5)*(sj5))))+(((IkReal(-9515940.00000000))*(cj5)))+(((IkReal(-11716929.0000000))*((cj5)*(cj5))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-6.06434915377051))*((sj5)*(sj5))))+(((IkReal(-4.92517985611511))*(cj5)))+(((IkReal(-6.06434915377051))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x730=((IkReal(34230000.0000000))*(sj5));
IkReal x731=((pz)*(sj3));
IkReal x732=((IkReal(34230000.0000000))*(cj5));
IkReal x733=((cj3)*(px));
IkReal x734=((IkReal(13900000.0000000))*(sj2));
IkReal x735=((cj3)*(py));
IkReal x736=((r02)*(sj2));
IkReal x737=((py)*(r00)*(sj3));
IkReal x738=((px)*(r01)*(sj3));
IkReal x739=((cj3)*(pz)*(r00)*(sj2));
IkReal x740=((cj2)*(r02)*(x735));
IkReal x741=((cj2)*(cj3)*(pz)*(r01));
if( IKabs(((gconst6)*(((((IkReal(13900000.0000000))*(x741)))+(((IkReal(-1.00000000000000))*(sj2)*(x730)*(x735)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x740)))+(((IkReal(-1.00000000000000))*(x732)*(x738)))+(((IkReal(-1.00000000000000))*(x732)*(x739)))+(((x732)*(x733)*(x736)))+(((IkReal(-13900000.0000000))*(x738)))+(((IkReal(-1.00000000000000))*(cj2)*(x730)*(x733)))+(((IkReal(-1.00000000000000))*(x732)*(x740)))+(((x732)*(x741)))+(((r02)*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(x730)*(x731)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(r00)*(x734)))+(((IkReal(13900000.0000000))*(x737)))+(((x732)*(x737))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x730)*(x733)*(x736)))+(((IkReal(-13900000.0000000))*(cj2)*(x733)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x731)*(x732)))+(((x730)*(x740)))+(((IkReal(-1.00000000000000))*(x730)*(x741)))+(((IkReal(-1.00000000000000))*(x734)*(x735)))+(((IkReal(-13900000.0000000))*(x731)))+(((IkReal(-1.00000000000000))*(cj2)*(x732)*(x733)))+(((IkReal(-1.00000000000000))*(x730)*(x737)))+(((IkReal(-1.00000000000000))*(sj2)*(x732)*(x735)))+(((x730)*(x738)))+(((x730)*(x739))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((IkReal(13900000.0000000))*(x741)))+(((IkReal(-1.00000000000000))*(sj2)*(x730)*(x735)))+(((IkReal(6503700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x740)))+(((IkReal(-1.00000000000000))*(x732)*(x738)))+(((IkReal(-1.00000000000000))*(x732)*(x739)))+(((x732)*(x733)*(x736)))+(((IkReal(-13900000.0000000))*(x738)))+(((IkReal(-1.00000000000000))*(cj2)*(x730)*(x733)))+(((IkReal(-1.00000000000000))*(x732)*(x740)))+(((x732)*(x741)))+(((r02)*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(x730)*(x731)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(r00)*(x734)))+(((IkReal(13900000.0000000))*(x737)))+(((x732)*(x737)))))), ((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x730)*(x733)*(x736)))+(((IkReal(-13900000.0000000))*(cj2)*(x733)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x731)*(x732)))+(((x730)*(x740)))+(((IkReal(-1.00000000000000))*(x730)*(x741)))+(((IkReal(-1.00000000000000))*(x734)*(x735)))+(((IkReal(-13900000.0000000))*(x731)))+(((IkReal(-1.00000000000000))*(cj2)*(x732)*(x733)))+(((IkReal(-1.00000000000000))*(x730)*(x737)))+(((IkReal(-1.00000000000000))*(sj2)*(x732)*(x735)))+(((x730)*(x738)))+(((x730)*(x739)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x742=IKsin(j4);
IkReal x743=IKcos(j4);
IkReal x744=((pz)*(r01));
IkReal x745=((cj3)*(py));
IkReal x746=((cj2)*(r02));
IkReal x747=((px)*(sj3));
IkReal x748=((IkReal(1.00000000000000))*(r00));
IkReal x749=((sj2)*(sj3));
IkReal x750=((IkReal(1.00000000000000))*(sj2));
IkReal x751=((cj3)*(px));
IkReal x752=((cj3)*(pz));
IkReal x753=((r00)*(sj2));
IkReal x754=((py)*(sj3));
IkReal x755=((IkReal(0.139000000000000))*(x742));
IkReal x756=((IkReal(0.139000000000000))*(x743));
IkReal x757=((IkReal(0.342300000000000))*(x743));
IkReal x758=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x759=((IkReal(0.342300000000000))*(x742));
IkReal x760=((sj5)*(x757));
IkReal x761=((cj5)*(x759));
IkReal x762=((cj5)*(x757));
IkReal x763=((sj5)*(x759));
IkReal x764=((x755)+(x761));
IkReal x765=((x756)+(x762)+(x763));
evalcond[0]=((((py)*(x749)))+(((IkReal(-1.00000000000000))*(x760)))+(((cj2)*(x747)))+(((IkReal(-1.00000000000000))*(x752)))+(x764));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x745)*(x750)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x751)))+(x765));
evalcond[2]=((((x745)*(x746)))+(((x752)*(x753)))+(((IkReal(-1.00000000000000))*(x764)))+(((IkReal(-1.00000000000000))*(x744)*(x758)))+(((r01)*(x747)))+(x760)+(((IkReal(-1.00000000000000))*(x748)*(x754)))+(((IkReal(-1.00000000000000))*(r02)*(x750)*(x751))));
evalcond[3]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(0.190000000000000))*(x753)))+(((IkReal(-1.00000000000000))*(x745)*(x748)))+(((r01)*(x751)))+(((IkReal(-1.00000000000000))*(x746)*(x754)))+(((r02)*(sj2)*(x747)))+(((IkReal(-1.00000000000000))*(pz)*(x748)*(x749)))+(x765)+(((cj2)*(sj3)*(x744))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x766=((cj2)*(px));
IkReal x767=((IkReal(34230000.0000000))*(cj3));
IkReal x768=((py)*(sj2));
IkReal x769=((IkReal(13900000.0000000))*(cj3));
IkReal x770=((IkReal(13900000.0000000))*(sj3));
IkReal x771=((IkReal(34230000.0000000))*(sj3)*(sj5));
IkReal x772=((IkReal(34230000.0000000))*(cj5)*(sj3));
if( IKabs(((gconst5)*(((((IkReal(6503700.00000000))*(sj5)))+(((x766)*(x772)))+(((x766)*(x770)))+(((IkReal(-1.00000000000000))*(pz)*(x771)))+(((IkReal(-1.00000000000000))*(sj5)*(x766)*(x767)))+(((IkReal(-1.00000000000000))*(sj5)*(x767)*(x768)))+(((x768)*(x770)))+(((x768)*(x772)))+(((IkReal(-1.00000000000000))*(pz)*(x769)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x767))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x768)*(x771)))+(((pz)*(sj5)*(x767)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x766)*(x769)))+(((IkReal(-1.00000000000000))*(x766)*(x771)))+(((IkReal(-1.00000000000000))*(pz)*(x772)))+(((IkReal(-1.00000000000000))*(pz)*(x770)))+(((IkReal(-1.00000000000000))*(cj5)*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(x768)*(x769)))+(((IkReal(-1.00000000000000))*(cj5)*(x766)*(x767))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(6503700.00000000))*(sj5)))+(((x766)*(x772)))+(((x766)*(x770)))+(((IkReal(-1.00000000000000))*(pz)*(x771)))+(((IkReal(-1.00000000000000))*(sj5)*(x766)*(x767)))+(((IkReal(-1.00000000000000))*(sj5)*(x767)*(x768)))+(((x768)*(x770)))+(((x768)*(x772)))+(((IkReal(-1.00000000000000))*(pz)*(x769)))+(((IkReal(-1.00000000000000))*(cj5)*(pz)*(x767)))))), ((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x768)*(x771)))+(((pz)*(sj5)*(x767)))+(((IkReal(6503700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x766)*(x769)))+(((IkReal(-1.00000000000000))*(x766)*(x771)))+(((IkReal(-1.00000000000000))*(pz)*(x772)))+(((IkReal(-1.00000000000000))*(pz)*(x770)))+(((IkReal(-1.00000000000000))*(cj5)*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(x768)*(x769)))+(((IkReal(-1.00000000000000))*(cj5)*(x766)*(x767)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x773=IKsin(j4);
IkReal x774=IKcos(j4);
IkReal x775=((pz)*(r01));
IkReal x776=((cj3)*(py));
IkReal x777=((cj2)*(r02));
IkReal x778=((px)*(sj3));
IkReal x779=((IkReal(1.00000000000000))*(r00));
IkReal x780=((sj2)*(sj3));
IkReal x781=((IkReal(1.00000000000000))*(sj2));
IkReal x782=((cj3)*(px));
IkReal x783=((cj3)*(pz));
IkReal x784=((r00)*(sj2));
IkReal x785=((py)*(sj3));
IkReal x786=((IkReal(0.139000000000000))*(x773));
IkReal x787=((IkReal(0.139000000000000))*(x774));
IkReal x788=((IkReal(0.342300000000000))*(x774));
IkReal x789=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x790=((IkReal(0.342300000000000))*(x773));
IkReal x791=((sj5)*(x788));
IkReal x792=((cj5)*(x790));
IkReal x793=((cj5)*(x788));
IkReal x794=((sj5)*(x790));
IkReal x795=((x792)+(x786));
IkReal x796=((x793)+(x794)+(x787));
evalcond[0]=((((IkReal(-1.00000000000000))*(x791)))+(((cj2)*(x778)))+(((py)*(x780)))+(x795)+(((IkReal(-1.00000000000000))*(x783))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x776)*(x781)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x782)))+(x796));
evalcond[2]=((((x776)*(x777)))+(((IkReal(-1.00000000000000))*(x795)))+(((IkReal(-1.00000000000000))*(x775)*(x789)))+(((x783)*(x784)))+(((IkReal(-1.00000000000000))*(r02)*(x781)*(x782)))+(((r01)*(x778)))+(x791)+(((IkReal(-1.00000000000000))*(x779)*(x785))));
evalcond[3]=((((IkReal(-1.00000000000000))*(pz)*(x779)*(x780)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((r01)*(x782)))+(((r02)*(sj2)*(x778)))+(((IkReal(-1.00000000000000))*(x777)*(x785)))+(((IkReal(-1.00000000000000))*(x776)*(x779)))+(x796)+(((cj2)*(sj3)*(x775)))+(((IkReal(0.190000000000000))*(x784))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x797=((cj3)*(sj5));
IkReal x798=((IkReal(3423.00000000000))*(r02));
IkReal x799=((IkReal(10000.0000000000))*(cj6));
IkReal x800=((sj3)*(sj5));
IkReal x801=((cj2)*(px));
IkReal x802=((r01)*(sj2));
IkReal x803=((IkReal(1390.00000000000))*(sj3));
IkReal x804=((cj2)*(r00));
IkReal x805=((cj5)*(sj3));
IkReal x806=((py)*(sj2));
IkReal x807=((cj3)*(cj5));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x799)*(x801)*(x805)))+(((IkReal(-1.00000000000000))*(x799)*(x805)*(x806)))+(((pz)*(x799)*(x807)))+(((IkReal(-3423.00000000000))*(x800)*(x804)))+(((IkReal(-3423.00000000000))*(x800)*(x802)))+(((x797)*(x798))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(pz)*(x797)*(x799)))+(((x798)*(x807)))+(((x799)*(x800)*(x806)))+(((x799)*(x800)*(x801)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-3423.00000000000))*(x802)*(x805)))+(((IkReal(-1.00000000000000))*(x802)*(x803)))+(((IkReal(-3423.00000000000))*(x804)*(x805))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x799)*(x801)*(x805)))+(((IkReal(-1.00000000000000))*(x799)*(x805)*(x806)))+(((pz)*(x799)*(x807)))+(((IkReal(-3423.00000000000))*(x800)*(x804)))+(((IkReal(-3423.00000000000))*(x800)*(x802)))+(((x797)*(x798)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(pz)*(x797)*(x799)))+(((x798)*(x807)))+(((x799)*(x800)*(x806)))+(((x799)*(x800)*(x801)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-3423.00000000000))*(x802)*(x805)))+(((IkReal(-1.00000000000000))*(x802)*(x803)))+(((IkReal(-3423.00000000000))*(x804)*(x805)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x808=IKsin(j4);
IkReal x809=IKcos(j4);
IkReal x810=(pz)*(pz);
IkReal x811=(px)*(px);
IkReal x812=(py)*(py);
IkReal x813=((cj2)*(sj3));
IkReal x814=((pp)*(r00));
IkReal x815=((IkReal(2.00000000000000))*(py));
IkReal x816=((px)*(r01));
IkReal x817=((cj2)*(cj3));
IkReal x818=((IkReal(0.0361000000000000))*(r00));
IkReal x819=((r02)*(sj3));
IkReal x820=((IkReal(2.00000000000000))*(px));
IkReal x821=((IkReal(1.00000000000000))*(pp));
IkReal x822=((IkReal(1.00000000000000))*(px));
IkReal x823=((r00)*(sj3));
IkReal x824=((IkReal(1.00000000000000))*(py));
IkReal x825=((px)*(sj2));
IkReal x826=((pz)*(r01));
IkReal x827=((cj3)*(r00));
IkReal x828=((r01)*(sj2));
IkReal x829=((cj6)*(sj5));
IkReal x830=((IkReal(0.0951594000000000))*(cj6));
IkReal x831=((IkReal(0.380000000000000))*(r02));
IkReal x832=((py)*(sj2));
IkReal x833=((cj3)*(r02));
IkReal x834=((IkReal(1.00000000000000))*(pz));
IkReal x835=((IkReal(0.380000000000000))*(r00));
IkReal x836=((IkReal(0.342300000000000))*(sj6));
IkReal x837=((pz)*(sj2));
IkReal x838=((IkReal(0.136490290000000))*(cj6));
IkReal x839=((pz)*(x833));
IkReal x840=((IkReal(2.00000000000000))*(x810));
IkReal x841=((cj5)*(x809));
IkReal x842=((cj5)*(x808));
IkReal x843=((IkReal(0.139000000000000))*(x808));
IkReal x844=((IkReal(2.00000000000000))*(x812));
IkReal x845=((IkReal(0.139000000000000))*(x809));
IkReal x846=((sj5)*(x809));
IkReal x847=((sj5)*(x808));
IkReal x848=((IkReal(2.00000000000000))*(r00)*(x811));
evalcond[0]=((((sj3)*(x828)))+(((r00)*(x813)))+(((x808)*(x829)))+(((cj6)*(x841)))+(((IkReal(-1.00000000000000))*(x833))));
evalcond[1]=((((IkReal(-0.342300000000000))*(x846)))+(((px)*(x813)))+(((IkReal(0.342300000000000))*(x842)))+(x843)+(((sj3)*(x832)))+(((IkReal(-1.00000000000000))*(cj3)*(x834))));
evalcond[2]=((((x809)*(x829)))+(((IkReal(-1.00000000000000))*(r00)*(x817)))+(((IkReal(-1.00000000000000))*(x819)))+(((IkReal(-1.00000000000000))*(cj6)*(x842)))+(((IkReal(-1.00000000000000))*(cj3)*(x828))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x817)*(x822)))+(((IkReal(0.342300000000000))*(x841)))+(((IkReal(0.342300000000000))*(x847)))+(x845)+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x824)))+(((IkReal(-1.00000000000000))*(sj3)*(x834))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x817)*(x826)))+(((py)*(r02)*(x817)))+(((IkReal(-1.00000000000000))*(x836)*(x846)))+(((sj6)*(x843)))+(((IkReal(-1.00000000000000))*(x823)*(x824)))+(((x827)*(x837)))+(((x836)*(x842)))+(((sj3)*(x816)))+(((IkReal(-1.00000000000000))*(sj2)*(x822)*(x833))));
evalcond[5]=((((cj3)*(x816)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x836)*(x841)))+(((IkReal(-1.00000000000000))*(x836)*(x847)))+(((x819)*(x825)))+(((IkReal(-1.00000000000000))*(x824)*(x827)))+(((x813)*(x826)))+(((IkReal(-1.00000000000000))*(r02)*(x813)*(x824)))+(((IkReal(-1.00000000000000))*(sj2)*(x823)*(x834)))+(((IkReal(0.190000000000000))*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(sj6)*(x845))));
evalcond[6]=((((pz)*(r02)*(x817)*(x820)))+(((IkReal(-1.00000000000000))*(pz)*(x831)))+(((x819)*(x840)))+(((pz)*(x820)*(x823)))+(((IkReal(-1.00000000000000))*(cj3)*(x821)*(x828)))+(((cj3)*(x828)*(x844)))+(((IkReal(0.0361000000000000))*(x819)))+(((IkReal(-1.00000000000000))*(x819)*(x821)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((IkReal(-1.00000000000000))*(x808)*(x830)))+(((IkReal(0.0978482900000000))*(x809)*(x829)))+(((IkReal(-1.00000000000000))*(px)*(x835)))+(((x815)*(x816)*(x817)))+(((x817)*(x818)))+(((IkReal(0.0361000000000000))*(cj3)*(x828)))+(((sj3)*(x815)*(x826)))+(((IkReal(-1.00000000000000))*(x838)*(x842)))+(((x817)*(x848)))+(((x815)*(x833)*(x837)))+(((x815)*(x825)*(x827)))+(((IkReal(-1.00000000000000))*(x814)*(x817))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x821)*(x833)))+(((IkReal(0.0361000000000000))*(sj3)*(x828)))+(((x831)*(x832)))+(((x838)*(x841)))+(((IkReal(-1.00000000000000))*(x813)*(x815)*(x816)))+(((IkReal(0.0978482900000000))*(x808)*(x829)))+(((pz)*(x820)*(x827)))+(((x833)*(x840)))+(((IkReal(-1.00000000000000))*(x813)*(x848)))+(((pp)*(sj3)*(x828)))+(((IkReal(-1.00000000000000))*(x815)*(x823)*(x825)))+(((x813)*(x818)))+(((x813)*(x814)))+(((x809)*(x830)))+(((IkReal(-0.380000000000000))*(sj2)*(x826)))+(((cj2)*(px)*(x831)))+(((IkReal(-1.00000000000000))*(pz)*(r02)*(x813)*(x820)))+(((IkReal(-1.00000000000000))*(sj3)*(x828)*(x844)))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x835)))+(((IkReal(-0.0361000000000000))*(x833)))+(((IkReal(-1.00000000000000))*(x815)*(x819)*(x837)))+(((cj3)*(x815)*(x826))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x849=((cj3)*(sj5));
IkReal x850=((cj2)*(r00));
IkReal x851=((cj3)*(cj5));
IkReal x852=((r01)*(sj2));
IkReal x853=((IkReal(1.00000000000000))*(sj3)*(sj5));
IkReal x854=((IkReal(1.00000000000000))*(cj5)*(sj3));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x850)*(x851)))+(((r02)*(x849)))+(((IkReal(-1.00000000000000))*(x852)*(x853)))+(((IkReal(-1.00000000000000))*(x851)*(x852)))+(((IkReal(-1.00000000000000))*(x850)*(x853)))+(((IkReal(-1.00000000000000))*(r02)*(x854))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x852)*(x854)))+(((IkReal(-1.00000000000000))*(x850)*(x854)))+(((r02)*(sj3)*(sj5)))+(((r02)*(x851)))+(((x849)*(x850)))+(((x849)*(x852))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x850)*(x851)))+(((r02)*(x849)))+(((IkReal(-1.00000000000000))*(x852)*(x853)))+(((IkReal(-1.00000000000000))*(x851)*(x852)))+(((IkReal(-1.00000000000000))*(x850)*(x853)))+(((IkReal(-1.00000000000000))*(r02)*(x854)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(x852)*(x854)))+(((IkReal(-1.00000000000000))*(x850)*(x854)))+(((r02)*(sj3)*(sj5)))+(((r02)*(x851)))+(((x849)*(x850)))+(((x849)*(x852)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x855=IKsin(j4);
IkReal x856=IKcos(j4);
IkReal x857=(pz)*(pz);
IkReal x858=(px)*(px);
IkReal x859=(py)*(py);
IkReal x860=((cj2)*(sj3));
IkReal x861=((pp)*(r00));
IkReal x862=((IkReal(2.00000000000000))*(py));
IkReal x863=((px)*(r01));
IkReal x864=((cj2)*(cj3));
IkReal x865=((IkReal(0.0361000000000000))*(r00));
IkReal x866=((r02)*(sj3));
IkReal x867=((IkReal(2.00000000000000))*(px));
IkReal x868=((IkReal(1.00000000000000))*(pp));
IkReal x869=((IkReal(1.00000000000000))*(px));
IkReal x870=((r00)*(sj3));
IkReal x871=((IkReal(1.00000000000000))*(py));
IkReal x872=((px)*(sj2));
IkReal x873=((pz)*(r01));
IkReal x874=((cj3)*(r00));
IkReal x875=((r01)*(sj2));
IkReal x876=((cj6)*(sj5));
IkReal x877=((IkReal(0.0951594000000000))*(cj6));
IkReal x878=((IkReal(0.380000000000000))*(r02));
IkReal x879=((py)*(sj2));
IkReal x880=((cj3)*(r02));
IkReal x881=((IkReal(1.00000000000000))*(pz));
IkReal x882=((IkReal(0.380000000000000))*(r00));
IkReal x883=((IkReal(0.342300000000000))*(sj6));
IkReal x884=((pz)*(sj2));
IkReal x885=((IkReal(0.136490290000000))*(cj6));
IkReal x886=((pz)*(x880));
IkReal x887=((IkReal(2.00000000000000))*(x857));
IkReal x888=((cj5)*(x856));
IkReal x889=((cj5)*(x855));
IkReal x890=((IkReal(0.139000000000000))*(x855));
IkReal x891=((IkReal(2.00000000000000))*(x859));
IkReal x892=((IkReal(0.139000000000000))*(x856));
IkReal x893=((sj5)*(x856));
IkReal x894=((sj5)*(x855));
IkReal x895=((IkReal(2.00000000000000))*(r00)*(x858));
evalcond[0]=((((sj3)*(x875)))+(((r00)*(x860)))+(((x855)*(x876)))+(((IkReal(-1.00000000000000))*(x880)))+(((cj6)*(x888))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x881)))+(((sj3)*(x879)))+(((IkReal(-0.342300000000000))*(x893)))+(((IkReal(0.342300000000000))*(x889)))+(((px)*(x860)))+(x890));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(x875)))+(((IkReal(-1.00000000000000))*(r00)*(x864)))+(((IkReal(-1.00000000000000))*(x866)))+(((x856)*(x876)))+(((IkReal(-1.00000000000000))*(cj6)*(x889))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(0.342300000000000))*(x894)))+(((IkReal(0.342300000000000))*(x888)))+(((IkReal(-1.00000000000000))*(x864)*(x869)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x871)))+(x892)+(((IkReal(-1.00000000000000))*(sj3)*(x881))));
evalcond[4]=((((sj3)*(x863)))+(((x874)*(x884)))+(((IkReal(-1.00000000000000))*(x883)*(x893)))+(((x883)*(x889)))+(((py)*(r02)*(x864)))+(((IkReal(-1.00000000000000))*(sj2)*(x869)*(x880)))+(((sj6)*(x890)))+(((IkReal(-1.00000000000000))*(x870)*(x871)))+(((IkReal(-1.00000000000000))*(x864)*(x873))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj6)*(x892)))+(((IkReal(-1.00000000000000))*(x883)*(x888)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x883)*(x894)))+(((cj3)*(x863)))+(((IkReal(-1.00000000000000))*(x871)*(x874)))+(((IkReal(-1.00000000000000))*(r02)*(x860)*(x871)))+(((x866)*(x872)))+(((x860)*(x873)))+(((IkReal(0.190000000000000))*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(sj2)*(x870)*(x881))));
evalcond[6]=((((x862)*(x872)*(x874)))+(((IkReal(0.0361000000000000))*(x866)))+(((x862)*(x863)*(x864)))+(((IkReal(0.0361000000000000))*(cj3)*(x875)))+(((pz)*(r02)*(x864)*(x867)))+(((IkReal(-1.00000000000000))*(x866)*(x868)))+(((x862)*(x880)*(x884)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((x864)*(x895)))+(((IkReal(-1.00000000000000))*(cj3)*(x868)*(x875)))+(((IkReal(-1.00000000000000))*(pz)*(x878)))+(((IkReal(0.0978482900000000))*(x856)*(x876)))+(((IkReal(-1.00000000000000))*(x861)*(x864)))+(((pz)*(x867)*(x870)))+(((x866)*(x887)))+(((IkReal(-1.00000000000000))*(px)*(x882)))+(((x864)*(x865)))+(((IkReal(-1.00000000000000))*(x885)*(x889)))+(((sj3)*(x862)*(x873)))+(((cj3)*(x875)*(x891)))+(((IkReal(-1.00000000000000))*(x855)*(x877))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x862)*(x870)*(x872)))+(((pp)*(sj3)*(x875)))+(((cj2)*(px)*(x878)))+(((x878)*(x879)))+(((x880)*(x887)))+(((IkReal(-1.00000000000000))*(x860)*(x862)*(x863)))+(((IkReal(0.0361000000000000))*(sj3)*(x875)))+(((IkReal(0.0978482900000000))*(x855)*(x876)))+(((x856)*(x877)))+(((IkReal(-0.0361000000000000))*(x880)))+(((IkReal(-1.00000000000000))*(pz)*(r02)*(x860)*(x867)))+(((IkReal(-1.00000000000000))*(sj3)*(x875)*(x891)))+(((pz)*(x867)*(x874)))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x882)))+(((x860)*(x861)))+(((x860)*(x865)))+(((IkReal(-1.00000000000000))*(x862)*(x866)*(x884)))+(((IkReal(-1.00000000000000))*(x868)*(x880)))+(((IkReal(-0.380000000000000))*(sj2)*(x873)))+(((x885)*(x888)))+(((IkReal(-1.00000000000000))*(x860)*(x895)))+(((cj3)*(x862)*(x873))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
}
}
return solutions.GetNumSolutions()>0;
}
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int& numroots)
{
    using std::complex;
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[4];
    const int maxsteps = 110;
    for(int i = 0; i < 4; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[4];
    IkReal err[4];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 4; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 4; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 4; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 4; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[4] = {false};
    for(int i = 0; i < 4; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 4; ++j) {
                if( abs(roots[i]-roots[j]) < 8*tolsqrt ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - kurtana (0398dcfa3824695714323aa1d9f33a72)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
