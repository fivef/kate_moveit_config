/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-07-01 13:00:01.849964
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=((IkReal(0.262300000000000))*(x4));
x11=((IkReal(1.00000000000000))*(x6));
x12=((IkReal(0.139000000000000))*(x2));
x13=((IkReal(1.00000000000000))*(x5));
x14=((IkReal(0.139000000000000))*(x4));
x15=((IkReal(1.00000000000000))*(x7));
x16=((IkReal(0.262300000000000))*(x2));
x17=((IkReal(1.00000000000000))*(x4));
x18=((IkReal(1.00000000000000))*(x2));
x19=((x1)*(x6));
x20=((x0)*(x1));
x21=((x3)*(x6));
x22=((x1)*(x2));
x23=((x0)*(x3));
x24=((x3)*(x4));
IkReal x25=((IkReal(1.00000000000000))*(x23));
eetrans[0]=((((IkReal(0.190000000000000))*(x20)))+(((IkReal(-1.00000000000000))*(x14)*(x25)))+(((x12)*(x20)))+(((x5)*(((((IkReal(-1.00000000000000))*(x10)*(x25)))+(((x16)*(x20)))))))+(((x7)*(((((x16)*(x23)))+(((x10)*(x20))))))));
IkReal x26=((IkReal(1.00000000000000))*(x21));
eetrans[1]=((((IkReal(0.190000000000000))*(x19)))+(((x7)*(((((x16)*(x21)))+(((x10)*(x19)))))))+(((IkReal(-1.00000000000000))*(x14)*(x26)))+(((x5)*(((((IkReal(-1.00000000000000))*(x10)*(x26)))+(((x16)*(x19)))))))+(((x12)*(x19))));
eetrans[2]=((IkReal(0.201500000000000))+(((x7)*(((((IkReal(-1.00000000000000))*(x1)*(x16)))+(((x10)*(x3)))))))+(((x1)*(x14)))+(((x5)*(((((x1)*(x10)))+(((x16)*(x3)))))))+(((IkReal(0.190000000000000))*(x3)))+(((x12)*(x3))));
eerot[0]=((((IkReal(-1.00000000000000))*(x11)*(x9)))+(((IkReal(-1.00000000000000))*(x8)*(((((x13)*(((((x2)*(x23)))+(((x20)*(x4)))))))+(((x15)*(((((IkReal(-1.00000000000000))*(x18)*(x20)))+(((x17)*(x23))))))))))));
eerot[1]=((((IkReal(-1.00000000000000))*(x8)*(((((x15)*(((((IkReal(-1.00000000000000))*(x11)*(x22)))+(((x11)*(x24)))))))+(((x13)*(((((x19)*(x4)))+(((x2)*(x21)))))))))))+(((x0)*(x9))));
IkReal x27=((IkReal(1.00000000000000))*(x1));
eerot[2]=((IkReal(-1.00000000000000))*(x8)*(((((x13)*(((((IkReal(-1.00000000000000))*(x18)*(x27)))+(x24)))))+(((x15)*(((((IkReal(-1.00000000000000))*(x18)*(x3)))+(((IkReal(-1.00000000000000))*(x17)*(x27))))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 5; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.201500000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(((IkReal(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH && IKabs(px) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x28=IKatan2(((IkReal(-1.00000000000000))*(py)), px);
j2array[0]=((IkReal(-1.00000000000000))*(x28));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x28))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

IkReal op[4+1], zeror[4];
int numroots;
op[0]=((((IkReal(0.104577960800000))*(cj2)*(pz)*(r00)*(r02)))+(((IkReal(1.52000000000000))*(cj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.760000000000000))*(pp)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(py)*(sj2)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.288800000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((py)*(py))))+((((pp)*(pp))*((r02)*(r02))))+(((IkReal(-0.760000000000000))*(pp)*(px)*(r00)*(r01)*(sj2)))+(((IkReal(0.342321160000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))))+((((pp)*(pp))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-0.760000000000000))*(cj2)*(pp)*(px)*((r00)*(r00))))+(((IkReal(0.134232000000000))*(cj2)*(px)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(0.208089160000000))*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(0.0146479720729682))*(cj2)*(r00)*(r01)*(sj2)))+(((IkReal(1.52000000000000))*(px)*(r00)*(r01)*(sj2)*((pz)*(pz))))+(((IkReal(0.104577960800000))*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(16.0000000000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(1.52000000000000))*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(0.342321160000000))*(cj2)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(0.342321160000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.0650410204000000))*(px)*(r00)*(r01)*(sj2)))+(((IkReal(0.342321160000000))*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(1.52000000000000))*(cj2)*(px)*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.342321160000000))*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*(cj2)*(py)*(sj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(0.208089160000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(0.208089160000000))*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(16.0000000000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(0.342321160000000))*(cj2)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(0.0650410204000000))*(py)*(sj2)*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(px)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(0.0650410204000000))*(cj2)*(px)*((r00)*(r00))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(1.52000000000000))*(cj2)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(1.52000000000000))*(cj2)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-0.171160580000000))*(pp)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(pz)*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.342321160000000))*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(py)*(sj2)*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.00732398603648410))*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(1.52000000000000))*(px)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(0.0671160000000000))*((pz)*(pz))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(py)*(sj2)*((px)*(px))*((r00)*(r00))))+(((IkReal(0.134232000000000))*(cj2)*(r00)*(r01)*(sj2)*((pz)*(pz))))+((((cj2)*(cj2))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((py)*(py))*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.760000000000000))*(cj2)*(pp)*(px)*((r02)*(r02))))+(((IkReal(0.342321160000000))*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(2.00000000000000))*(cj2)*(r00)*(r01)*(sj2)*((pp)*(pp))))+(((IkReal(-4.00000000000000))*(pp)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.144400000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(py)*(r00)*(r01)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(1.52000000000000))*(cj2)*(px)*((py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(1.52000000000000))*(cj2)*(px)*(py)*(pz)*(r01)*(r02)))+(((IkReal(-0.0395369404000000))*(py)*(sj2)*((r02)*(r02))))+(((IkReal(8.00000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-0.00261092023951590))*((r02)*(r02))))+(((IkReal(0.0671160000000000))*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(0.342321160000000))*(cj2)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-0.342321160000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)))+(((IkReal(-1.52000000000000))*(cj2)*(pp)*(pz)*(r00)*(r02)))+(((IkReal(-0.760000000000000))*(cj2)*(pp)*(py)*(r00)*(r01)))+(((IkReal(0.342321160000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(-0.171160580000000))*(pp)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-0.0395369404000000))*(cj2)*(px)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.208089160000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(8.00000000000000))*(py)*(pz)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(1.52000000000000))*(r01)*(r02)*(sj2)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(1.52000000000000))*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(4.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(cj2)*(pz)*(r00)*(r02)*((px)*(px))))+(((IkReal(4.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(8.00000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(0.197921160000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))*((py)*(py))))+(((IkReal(-0.0267605800000000))*(pp)*((r02)*(r02))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(0.0650410204000000))*(cj2)*(py)*(r00)*(r01)))+(((IkReal(-0.760000000000000))*(pp)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(3.04000000000000))*(cj2)*(py)*(r00)*(r01)*((px)*(px))))+(((IkReal(0.00732398603648410))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.144400000000000))*((py)*(py))*((r01)*(r01)))));
op[1]=((((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-6.08000000000000))*(px)*(py)*(pz)*(r00)*(r01)))+(((IkReal(-0.0790738808000000))*(cj2)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(-0.0397396251040000))*(r01)*(r02)*(sj2)))+(((IkReal(-0.577600000000000))*(cj2)*(px)*(pz)*((r00)*(r00))))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(-0.130082040800000))*(pz)*((r02)*(r02))))+(((IkReal(-3.04000000000000))*((pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.577600000000000))*(cj2)*(r00)*(r02)*((px)*(px))))+(((IkReal(3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-0.130082040800000))*(py)*(r01)*(r02)))+(((IkReal(-0.130082040800000))*(px)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(0.0790738808000000))*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-0.577600000000000))*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-0.577600000000000))*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(-0.577600000000000))*(cj2)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))))+(((IkReal(-0.0397396251040000))*(cj2)*(r00)*(r02)))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(3.04000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-6.08000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-0.577600000000000))*(cj2)*(px)*(pz)*((r02)*(r02))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-0.577600000000000))*(px)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-3.04000000000000))*(cj2)*(pp)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-6.08000000000000))*(px)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(py)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(-0.577600000000000))*(cj2)*(px)*(py)*(r01)*(r02)))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)))+(((IkReal(0.0790738808000000))*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(0.577600000000000))*(pp)*(r01)*(r02)*(sj2)))+(((IkReal(-0.0790738808000000))*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-0.577600000000000))*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(3.04000000000000))*(py)*(r01)*(r02)*((pz)*(pz))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(pp)*(pz)*((r02)*(r02))))+(((IkReal(-0.0790738808000000))*(cj2)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-0.0790738808000000))*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-0.577600000000000))*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(-6.08000000000000))*(py)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(-0.577600000000000))*(cj2)*(py)*(pz)*(r00)*(r01)))+(((IkReal(0.158147761600000))*(cj2)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-0.577600000000000))*(px)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-3.04000000000000))*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.577600000000000))*(cj2)*(pp)*(r00)*(r02)))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(pz)*((px)*(px))*((r00)*(r00))))+(((IkReal(3.04000000000000))*(px)*(r00)*(r02)*((cj2)*(cj2))*((pz)*(pz)))));
op[2]=((((IkReal(-0.470557680000000))*(cj2)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(1.83984232000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.288800000000000))*((py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*((cj2)*(cj2))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*((cj2)*(cj2))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-0.470557680000000))*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.268464000000000))*(cj2)*(r00)*(r01)*(sj2)*((pz)*(pz))))+(((IkReal(-8.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(2.00000000000000))*((cj2)*(cj2))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(16.0000000000000))*(py)*(r00)*(r01)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(16.0000000000000))*(cj2)*(px)*(py)*(sj2)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.134232000000000))*((pz)*(pz))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.268464000000000))*(cj2)*(px)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(8.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(16.0000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(32.0000000000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(8.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.577600000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(0.134232000000000))*((cj2)*(cj2))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.470557680000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)))+(((IkReal(8.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(-0.631121160000000))*(pp)*((r02)*(r02))))+(((IkReal(8.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(-0.0250916530310318))*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-0.470557680000000))*(cj2)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(0.134232000000000))*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.134232000000000))*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(16.0000000000000))*(pz)*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(16.0000000000000))*(cj2)*(py)*(sj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-0.470557680000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-0.739021680000000))*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-0.470557680000000))*(cj2)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(2.00000000000000))*((pp)*(pp))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(1.83984232000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(0.235278840000000))*(pp)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(2.00000000000000))*((pp)*(pp))*((r02)*(r02))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-0.739021680000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-0.470557680000000))*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(1.55104232000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-8.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(16.0000000000000))*(cj2)*(px)*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(-0.739021680000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(-0.470557680000000))*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(0.288800000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*((cj2)*(cj2))*((px)*(px))*((py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(4.00000000000000))*(cj2)*(r00)*(r01)*(sj2)*((pp)*(pp))))+(((IkReal(-0.739021680000000))*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-0.470557680000000))*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(pp)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(32.0000000000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))*((py)*(py))))+(((IkReal(16.0000000000000))*(py)*(pz)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(-0.0250916530310318))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-8.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(-0.0501833060620636))*(cj2)*(r00)*(r01)*(sj2)))+(((IkReal(32.0000000000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(16.0000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(0.0345177846249682))*((r02)*(r02))))+(((IkReal(8.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(0.235278840000000))*(pp)*((r01)*(r01))*((sj2)*(sj2)))));
op[3]=((((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-6.08000000000000))*(px)*(py)*(pz)*(r00)*(r01)))+(((IkReal(-0.0790738808000000))*(cj2)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(-0.130082040800000))*(pz)*((r02)*(r02))))+(((IkReal(-3.04000000000000))*((pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.577600000000000))*(cj2)*(pp)*(r00)*(r02)))+(((IkReal(0.577600000000000))*(cj2)*(py)*(pz)*(r00)*(r01)))+(((IkReal(0.577600000000000))*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.0397396251040000))*(r01)*(r02)*(sj2)))+(((IkReal(-0.130082040800000))*(py)*(r01)*(r02)))+(((IkReal(-0.130082040800000))*(px)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(0.0790738808000000))*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.577600000000000))*(cj2)*(px)*(pz)*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(px)*(r01)*(r02)*(sj2)))+(((IkReal(3.04000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-6.08000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r02)*(r02))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-6.08000000000000))*(cj2)*(py)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(cj2)*(pp)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(-6.08000000000000))*(px)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(0.0397396251040000))*(cj2)*(r00)*(r02)))+(((IkReal(-3.04000000000000))*(py)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)))+(((IkReal(0.0790738808000000))*(pz)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(0.577600000000000))*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(0.577600000000000))*(cj2)*(r00)*(r02)*((px)*(px))))+(((IkReal(-0.0790738808000000))*(px)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(0.577600000000000))*(cj2)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(0.577600000000000))*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(3.04000000000000))*(py)*(r01)*(r02)*((pz)*(pz))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(pp)*(pz)*((r02)*(r02))))+(((IkReal(0.577600000000000))*(py)*(pz)*(sj2)*((r01)*(r01))))+(((IkReal(-0.0790738808000000))*(cj2)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-0.0790738808000000))*(py)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(3.04000000000000))*(cj2)*(pz)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-6.08000000000000))*(py)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj2)*(px)*(py)*(pz)*(sj2)*((r00)*(r00))))+(((IkReal(0.577600000000000))*(cj2)*(px)*(pz)*((r02)*(r02))))+(((IkReal(-3.04000000000000))*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(0.577600000000000))*(cj2)*(px)*(py)*(r01)*(r02)))+(((IkReal(0.158147761600000))*(cj2)*(pz)*(r00)*(r01)*(sj2)))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-3.04000000000000))*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-0.577600000000000))*(pp)*(r01)*(r02)*(sj2)))+(((IkReal(-3.04000000000000))*(pz)*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.577600000000000))*(px)*(py)*(r00)*(r02)*(sj2)))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj2)*(px)*(r01)*(r02)*(sj2)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(pz)*((px)*(px))*((r00)*(r00))))+(((IkReal(3.04000000000000))*(px)*(r00)*(r02)*((cj2)*(cj2))*((pz)*(pz))))+(((IkReal(0.577600000000000))*(px)*(pz)*(r00)*(r01)*(sj2))));
op[4]=((((IkReal(4.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(py)*(sj2)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.288800000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((py)*(py))))+((((pp)*(pp))*((r02)*(r02))))+(((IkReal(-3.04000000000000))*(cj2)*(py)*(r00)*(r01)*((px)*(px))))+(((IkReal(0.342321160000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))))+((((pp)*(pp))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-1.52000000000000))*(px)*(r00)*(r01)*(sj2)*((pz)*(pz))))+(((IkReal(0.134232000000000))*(cj2)*(px)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(0.760000000000000))*(pp)*(px)*(r00)*(r01)*(sj2)))+(((IkReal(0.760000000000000))*(cj2)*(pp)*(py)*(r00)*(r01)))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(-1.52000000000000))*(px)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(-1.52000000000000))*(cj2)*(px)*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.208089160000000))*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(px)*((py)*(py))*((r01)*(r01))))+(((IkReal(0.0146479720729682))*(cj2)*(r00)*(r01)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(16.0000000000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.342321160000000))*(cj2)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(0.342321160000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.342321160000000))*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(0.342321160000000))*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(8.00000000000000))*(cj2)*(py)*(sj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(0.208089160000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)))+(((IkReal(0.208089160000000))*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(16.0000000000000))*(cj2)*(py)*(pz)*(r00)*(r02)*(sj2)*((px)*(px))))+(((IkReal(0.342321160000000))*(cj2)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(-4.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.760000000000000))*(pp)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj2)*(sj2))))+(((IkReal(-0.760000000000000))*(cj2)*(pp)*(px)*((r02)*(r02))))+(((IkReal(-0.0650410204000000))*(py)*(sj2)*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-0.171160580000000))*(pp)*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(8.00000000000000))*(pz)*(r00)*(r02)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(8.00000000000000))*(cj2)*(px)*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.342321160000000))*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.00732398603648410))*((cj2)*(cj2))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj2)*(cj2))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r01)*(r01))))+(((IkReal(-1.52000000000000))*(py)*(sj2)*((px)*(px))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((pz)*(pz))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-0.0650410204000000))*(cj2)*(py)*(r00)*(r01)))+(((IkReal(-1.52000000000000))*(py)*(sj2)*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.134232000000000))*(cj2)*(r00)*(r01)*(sj2)*((pz)*(pz))))+((((cj2)*(cj2))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(-0.104577960800000))*(cj2)*(pz)*(r00)*(r02)))+(((IkReal(-1.52000000000000))*(cj2)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(4.00000000000000))*((cj2)*(cj2))*((px)*(px))*((py)*(py))*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj2)*(cj2))))+(((IkReal(0.0395369404000000))*(cj2)*(px)*((r02)*(r02))))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)*((px)*(px))))+(((IkReal(-1.52000000000000))*(cj2)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-0.760000000000000))*(pp)*(py)*(sj2)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.342321160000000))*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(2.00000000000000))*(cj2)*(r00)*(r01)*(sj2)*((pp)*(pp))))+(((IkReal(-1.52000000000000))*(r01)*(r02)*(sj2)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*((cj2)*(cj2))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((cj2)*(cj2))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.144400000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(cj2)*(pp)*(pz)*(r00)*(r02)))+(((IkReal(8.00000000000000))*(py)*(r00)*(r01)*((cj2)*(cj2))*((px)*(px)*(px))))+(((IkReal(-1.52000000000000))*(sj2)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.0395369404000000))*(py)*(sj2)*((r02)*(r02))))+(((IkReal(8.00000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj2)*(sj2))))+(((IkReal(-0.00261092023951590))*((r02)*(r02))))+(((IkReal(0.0671160000000000))*((py)*(py))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(0.342321160000000))*(cj2)*(r00)*(r01)*(sj2)*((py)*(py))))+(((IkReal(-0.342321160000000))*(cj2)*(pp)*(r00)*(r01)*(sj2)))+(((IkReal(0.342321160000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(-0.171160580000000))*(pp)*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(px)*((pz)*(pz))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.208089160000000))*(cj2)*(px)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(8.00000000000000))*(py)*(pz)*(r01)*(r02)*((cj2)*(cj2))*((px)*(px))))+(((IkReal(-4.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(1.52000000000000))*(pp)*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(4.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(cj2)*(pz)*(r00)*(r02)*((px)*(px))))+(((IkReal(-0.0650410204000000))*(cj2)*(px)*((r00)*(r00))))+(((IkReal(0.760000000000000))*(cj2)*(pp)*(px)*((r00)*(r00))))+(((IkReal(4.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(8.00000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj2)*(sj2))))+(((IkReal(0.197921160000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj2)*(sj2))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj2)*(sj2))))+(((IkReal(-1.52000000000000))*(pz)*(r01)*(r02)*(sj2)*((py)*(py))))+(((IkReal(16.0000000000000))*(cj2)*(r00)*(r01)*(sj2)*((px)*(px))*((py)*(py))))+(((IkReal(-0.0267605800000000))*(pp)*((r02)*(r02))))+(((IkReal(-0.0650410204000000))*(px)*(r00)*(r01)*(sj2)))+(((IkReal(-0.104577960800000))*(pz)*(r01)*(r02)*(sj2)))+(((IkReal(-4.00000000000000))*(cj2)*(pp)*(px)*(py)*(sj2)*((r00)*(r00))))+(((IkReal(0.00732398603648410))*((r01)*(r01))*((sj2)*(sj2))))+(((IkReal(0.144400000000000))*((py)*(py))*((r01)*(r01)))));
polyroots4(op,zeror,numroots);
IkReal j3array[4], cj3array[4], sj3array[4], tempj3array[1];
int numsolutions = 0;
for(int ij3 = 0; ij3 < numroots; ++ij3)
{
IkReal htj3 = zeror[ij3];
tempj3array[0]=((IkReal(2.00000000000000))*(atan(htj3)));
for(int kj3 = 0; kj3 < 1; ++kj3)
{
j3array[numsolutions] = tempj3array[kj3];
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
sj3array[numsolutions] = IKsin(j3array[numsolutions]);
cj3array[numsolutions] = IKcos(j3array[numsolutions]);
numsolutions++;
}
}
bool j3valid[4]={true,true,true,true};
_nj3 = 4;
for(int ij3 = 0; ij3 < numsolutions; ++ij3)
    {
if( !j3valid[ij3] )
{
    continue;
}
    j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
htj3 = IKtan(j3/2);

_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < numsolutions; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
sj6array[0]=((((IkReal(-1.00000000000000))*(r00)*(sj2)))+(((cj2)*(r01))));
if( sj6array[0] >= -1-IKFAST_SINCOS_THRESH && sj6array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j6valid[0] = j6valid[1] = true;
    j6array[0] = IKasin(sj6array[0]);
    cj6array[0] = IKcos(j6array[0]);
    sj6array[1] = sj6array[0];
    j6array[1] = j6array[0] > 0 ? (IKPI-j6array[0]) : (-IKPI-j6array[0]);
    cj6array[1] = -cj6array[0];
}
else if( isnan(sj6array[0]) )
{
    // probably any value will work
    j6valid[0] = true;
    cj6array[0] = 1; sj6array[0] = 0; j6array[0] = 0;
}
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x29=(pz)*(pz);
IkReal x30=(px)*(px);
IkReal x31=(py)*(py);
IkReal x32=((cj2)*(r00));
IkReal x33=((IkReal(0.190000000000000))*(sj3));
IkReal x34=((IkReal(2.00000000000000))*(r02));
IkReal x35=((cj3)*(pz));
IkReal x36=((py)*(sj2));
IkReal x37=((IkReal(0.0361000000000000))*(cj3));
IkReal x38=((cj2)*(px));
IkReal x39=((IkReal(1.00000000000000))*(pp));
IkReal x40=((r02)*(sj3));
IkReal x41=((IkReal(0.380000000000000))*(pz));
IkReal x42=((IkReal(1.00000000000000))*(sj2));
IkReal x43=((r01)*(sj2));
IkReal x44=((IkReal(1.00000000000000))*(cj3));
IkReal x45=((IkReal(2.00000000000000))*(cj3));
IkReal x46=((IkReal(0.0361000000000000))*(sj3));
IkReal x47=((py)*(r01));
IkReal x48=((px)*(r00));
IkReal x49=((IkReal(0.380000000000000))*(r02));
IkReal x50=((pz)*(sj3));
IkReal x51=((IkReal(2.00000000000000))*(sj3));
IkReal x52=((cj3)*(r02));
IkReal x53=((pp)*(sj3));
IkReal x54=((IkReal(0.190000000000000))*(cj3));
IkReal x55=((IkReal(1.00000000000000))*(pz));
IkReal x56=((IkReal(2.00000000000000))*(x48));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj2)*(py)))+(((IkReal(-1.00000000000000))*(px)*(x42))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x42)))+(((cj2)*(r01))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x44)))+(((sj3)*(x32)))+(((sj3)*(x43))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x48)))+(((IkReal(-1.00000000000000))*(x47)))+(((IkReal(-1.00000000000000))*(r02)*(x55)))+(((x32)*(x54)))+(((x43)*(x54)))+(((r02)*(x33))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x40)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x42)))+(((IkReal(-1.00000000000000))*(x32)*(x44))));
evalcond[6]=((((IkReal(-0.190000000000000))*(x52)))+(((IkReal(-1.00000000000000))*(x32)*(x55)))+(((r02)*(x38)))+(((r02)*(x36)))+(((IkReal(-1.00000000000000))*(pz)*(r01)*(x42)))+(((x32)*(x33)))+(((x33)*(x43))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(x32)*(x39)))+(((IkReal(-1.00000000000000))*(r02)*(x41)))+(((x36)*(x45)*(x48)))+(((x34)*(x35)*(x36)))+(((x34)*(x35)*(x38)))+(((IkReal(2.00000000000000))*(x47)*(x50)))+(((x37)*(x43)))+(((IkReal(0.0361000000000000))*(x40)))+(((IkReal(-1.00000000000000))*(x39)*(x40)))+(((IkReal(-0.380000000000000))*(x47)))+(((IkReal(-0.380000000000000))*(x48)))+(((x50)*(x56)))+(((x38)*(x45)*(x47)))+(((x31)*(x43)*(x45)))+(((IkReal(-1.00000000000000))*(cj3)*(x39)*(x43)))+(((sj3)*(x29)*(x34)))+(((x32)*(x37)))+(((x30)*(x32)*(x45))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r02)*(x37)))+(((IkReal(-1.00000000000000))*(x34)*(x38)*(x50)))+(((IkReal(-1.00000000000000))*(x31)*(x43)*(x51)))+(((x36)*(x49)))+(((x43)*(x46)))+(((IkReal(-1.00000000000000))*(x36)*(x48)*(x51)))+(((x35)*(x56)))+(((IkReal(-1.00000000000000))*(x41)*(x43)))+(((cj3)*(x29)*(x34)))+(((IkReal(-1.00000000000000))*(x34)*(x36)*(x50)))+(((x38)*(x49)))+(((IkReal(-1.00000000000000))*(x38)*(x47)*(x51)))+(((IkReal(-1.00000000000000))*(x32)*(x41)))+(((IkReal(-1.00000000000000))*(x39)*(x52)))+(((x32)*(x53)))+(((IkReal(-1.00000000000000))*(x30)*(x32)*(x51)))+(((x43)*(x53)))+(((IkReal(2.00000000000000))*(x35)*(x47)))+(((x32)*(x46))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x57=((IkReal(5.21123322462884))*(cj3));
cj5array[0]=((IkReal(-0.713421805445464))+(((IkReal(13.7137716437601))*(pp)))+(((IkReal(-1.00000000000000))*(cj2)*(px)*(x57)))+(((IkReal(-5.21123322462884))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(py)*(sj2)*(x57))));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x58=((r00)*(sj2));
IkReal x59=((pz)*(r02));
IkReal x60=((IkReal(0.380000000000000))*(cj3));
IkReal x61=((py)*(r00));
IkReal x62=((cj2)*(r01));
IkReal x63=((IkReal(0.380000000000000))*(sj3));
IkReal x64=((IkReal(2.00000000000000))*(cj2));
IkReal x65=((IkReal(2.00000000000000))*(px)*(sj2));
evalcond[0]=((IkReal(-0.0881222900000000))+(((pp)*(x62)))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x60)))+(((x59)*(x65)))+(((IkReal(-1.00000000000000))*(pp)*(x58)))+(((x60)*(x61)))+(((IkReal(0.0361000000000000))*(x62)))+(((cj2)*(py)*(r02)*(x63)))+(((IkReal(-1.00000000000000))*(py)*(x59)*(x64)))+(((IkReal(-1.00000000000000))*(px)*(x61)*(x64)))+(((IkReal(-0.0729194000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(pz)*(x62)*(x63)))+(((pz)*(x58)*(x63)))+(((py)*(r01)*(x65)))+(((IkReal(-0.0361000000000000))*(x58)))+(((IkReal(-1.00000000000000))*(px)*(r02)*(sj2)*(x63)))+(((IkReal(-2.00000000000000))*(x62)*((py)*(py))))+(((IkReal(2.00000000000000))*(x58)*((px)*(px)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x66=((IkReal(26230000.0000000))*(cj5));
IkReal x67=((cj2)*(cj3));
IkReal x68=((pz)*(r01));
IkReal x69=((py)*(r02));
IkReal x70=((IkReal(26230000.0000000))*(sj5));
IkReal x71=((pz)*(sj3));
IkReal x72=((cj3)*(sj2));
IkReal x73=((px)*(r02));
IkReal x74=((IkReal(13900000.0000000))*(px));
IkReal x75=((r01)*(sj3));
IkReal x76=((py)*(r00)*(sj3));
IkReal x77=((pz)*(r00)*(x72));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(px)*(x67)*(x70)))+(((x66)*(x67)*(x69)))+(((IkReal(4983700.00000000))*(sj5)))+(((px)*(x66)*(x75)))+(((IkReal(-1.00000000000000))*(x66)*(x76)))+(((IkReal(-1.00000000000000))*(x70)*(x71)))+(((IkReal(-1.00000000000000))*(x66)*(x67)*(x68)))+(((IkReal(-1.00000000000000))*(py)*(x70)*(x72)))+(((IkReal(13900000.0000000))*(x77)))+(((IkReal(-1.00000000000000))*(x66)*(x72)*(x73)))+(((IkReal(13900000.0000000))*(x67)*(x69)))+(((IkReal(-13900000.0000000))*(x67)*(x68)))+(((x66)*(x77)))+(((x74)*(x75)))+(((IkReal(-13900000.0000000))*(x76)))+(((IkReal(-13900000.0000000))*(x72)*(x73))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x66)*(x71)))+(((IkReal(-1.00000000000000))*(x67)*(x69)*(x70)))+(((IkReal(-1.00000000000000))*(x70)*(x77)))+(((IkReal(-13900000.0000000))*(py)*(x72)))+(((IkReal(-1.00000000000000))*(px)*(x66)*(x67)))+(((IkReal(-1.00000000000000))*(py)*(x66)*(x72)))+(((IkReal(-1.00000000000000))*(px)*(x70)*(x75)))+(((x70)*(x72)*(x73)))+(((x70)*(x76)))+(((IkReal(-1.00000000000000))*(x67)*(x74)))+(((x67)*(x68)*(x70)))+(((IkReal(-13900000.0000000))*(x71))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(px)*(x67)*(x70)))+(((x66)*(x67)*(x69)))+(((IkReal(4983700.00000000))*(sj5)))+(((px)*(x66)*(x75)))+(((IkReal(-1.00000000000000))*(x66)*(x76)))+(((IkReal(-1.00000000000000))*(x70)*(x71)))+(((IkReal(-1.00000000000000))*(x66)*(x67)*(x68)))+(((IkReal(-1.00000000000000))*(py)*(x70)*(x72)))+(((IkReal(13900000.0000000))*(x77)))+(((IkReal(-1.00000000000000))*(x66)*(x72)*(x73)))+(((IkReal(13900000.0000000))*(x67)*(x69)))+(((IkReal(-13900000.0000000))*(x67)*(x68)))+(((x66)*(x77)))+(((x74)*(x75)))+(((IkReal(-13900000.0000000))*(x76)))+(((IkReal(-13900000.0000000))*(x72)*(x73)))))), ((gconst8)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x66)*(x71)))+(((IkReal(-1.00000000000000))*(x67)*(x69)*(x70)))+(((IkReal(-1.00000000000000))*(x70)*(x77)))+(((IkReal(-13900000.0000000))*(py)*(x72)))+(((IkReal(-1.00000000000000))*(px)*(x66)*(x67)))+(((IkReal(-1.00000000000000))*(py)*(x66)*(x72)))+(((IkReal(-1.00000000000000))*(px)*(x70)*(x75)))+(((x70)*(x72)*(x73)))+(((x70)*(x76)))+(((IkReal(-1.00000000000000))*(x67)*(x74)))+(((x67)*(x68)*(x70)))+(((IkReal(-13900000.0000000))*(x71)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x78=IKsin(j4);
IkReal x79=IKcos(j4);
IkReal x80=((pz)*(r01));
IkReal x81=((cj3)*(py));
IkReal x82=((cj2)*(r02));
IkReal x83=((px)*(sj3));
IkReal x84=((IkReal(1.00000000000000))*(r00));
IkReal x85=((sj2)*(sj3));
IkReal x86=((IkReal(1.00000000000000))*(sj2));
IkReal x87=((cj3)*(px));
IkReal x88=((cj3)*(pz));
IkReal x89=((r00)*(sj2));
IkReal x90=((py)*(sj3));
IkReal x91=((IkReal(0.139000000000000))*(x78));
IkReal x92=((IkReal(0.139000000000000))*(x79));
IkReal x93=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x94=((IkReal(0.262300000000000))*(x78));
IkReal x95=((IkReal(0.262300000000000))*(x79));
IkReal x96=((cj5)*(x94));
IkReal x97=((sj5)*(x95));
IkReal x98=((sj5)*(x94));
IkReal x99=((cj5)*(x95));
IkReal x100=((x91)+(x96));
IkReal x101=((x99)+(x98)+(x92));
evalcond[0]=((((cj2)*(x83)))+(x100)+(((py)*(x85)))+(((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x97))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x81)*(x86)))+(((IkReal(-1.00000000000000))*(cj2)*(x87)))+(x101)+(((IkReal(-1.00000000000000))*(pz)*(sj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x80)*(x93)))+(((IkReal(-1.00000000000000))*(r02)*(x86)*(x87)))+(((x81)*(x82)))+(x100)+(((r01)*(x83)))+(((x88)*(x89)))+(((IkReal(-1.00000000000000))*(x84)*(x90)))+(((IkReal(-1.00000000000000))*(x97))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x81)*(x84)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(pz)*(x84)*(x85)))+(((cj2)*(sj3)*(x80)))+(((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x82)*(x90)))+(((r01)*(x87)))+(((IkReal(0.190000000000000))*(x89)))+(((r02)*(sj2)*(x83))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x102=((IkReal(26230000.0000000))*(cj5));
IkReal x103=((py)*(sj2));
IkReal x104=((cj2)*(px));
IkReal x105=((pz)*(sj3));
IkReal x106=((IkReal(26230000.0000000))*(sj5));
IkReal x107=((IkReal(13900000.0000000))*(cj3));
IkReal x108=((cj3)*(pz));
IkReal x109=((IkReal(13900000.0000000))*(sj3));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(pz)*(x107)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x104)*(x106)))+(((sj3)*(x102)*(x103)))+(((sj3)*(x102)*(x104)))+(((IkReal(-1.00000000000000))*(cj3)*(x103)*(x106)))+(((x103)*(x109)))+(((IkReal(-1.00000000000000))*(x102)*(x108)))+(((x104)*(x109)))+(((IkReal(-1.00000000000000))*(x105)*(x106))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x104)*(x107)))+(((IkReal(4983700.00000000))*(cj5)))+(((x106)*(x108)))+(((IkReal(-1.00000000000000))*(sj3)*(x103)*(x106)))+(((IkReal(-1.00000000000000))*(sj3)*(x104)*(x106)))+(((IkReal(-1.00000000000000))*(x103)*(x107)))+(((IkReal(-1.00000000000000))*(x102)*(x105)))+(((IkReal(-1.00000000000000))*(cj3)*(x102)*(x104)))+(((IkReal(-1.00000000000000))*(cj3)*(x102)*(x103)))+(((IkReal(-13900000.0000000))*(x105))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(pz)*(x107)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x104)*(x106)))+(((sj3)*(x102)*(x103)))+(((sj3)*(x102)*(x104)))+(((IkReal(-1.00000000000000))*(cj3)*(x103)*(x106)))+(((x103)*(x109)))+(((IkReal(-1.00000000000000))*(x102)*(x108)))+(((x104)*(x109)))+(((IkReal(-1.00000000000000))*(x105)*(x106)))))), ((gconst7)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x104)*(x107)))+(((IkReal(4983700.00000000))*(cj5)))+(((x106)*(x108)))+(((IkReal(-1.00000000000000))*(sj3)*(x103)*(x106)))+(((IkReal(-1.00000000000000))*(sj3)*(x104)*(x106)))+(((IkReal(-1.00000000000000))*(x103)*(x107)))+(((IkReal(-1.00000000000000))*(x102)*(x105)))+(((IkReal(-1.00000000000000))*(cj3)*(x102)*(x104)))+(((IkReal(-1.00000000000000))*(cj3)*(x102)*(x103)))+(((IkReal(-13900000.0000000))*(x105)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x110=IKsin(j4);
IkReal x111=IKcos(j4);
IkReal x112=((pz)*(r01));
IkReal x113=((cj3)*(py));
IkReal x114=((cj2)*(r02));
IkReal x115=((px)*(sj3));
IkReal x116=((IkReal(1.00000000000000))*(r00));
IkReal x117=((sj2)*(sj3));
IkReal x118=((IkReal(1.00000000000000))*(sj2));
IkReal x119=((cj3)*(px));
IkReal x120=((cj3)*(pz));
IkReal x121=((r00)*(sj2));
IkReal x122=((py)*(sj3));
IkReal x123=((IkReal(0.139000000000000))*(x110));
IkReal x124=((IkReal(0.139000000000000))*(x111));
IkReal x125=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x126=((IkReal(0.262300000000000))*(x110));
IkReal x127=((IkReal(0.262300000000000))*(x111));
IkReal x128=((cj5)*(x126));
IkReal x129=((sj5)*(x127));
IkReal x130=((sj5)*(x126));
IkReal x131=((cj5)*(x127));
IkReal x132=((x123)+(x128));
IkReal x133=((x131)+(x130)+(x124));
evalcond[0]=((((cj2)*(x115)))+(((py)*(x117)))+(((IkReal(-1.00000000000000))*(x129)))+(x132)+(((IkReal(-1.00000000000000))*(x120))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x113)*(x118)))+(x133)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x119))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x118)*(x119)))+(((IkReal(-1.00000000000000))*(x112)*(x125)))+(((IkReal(-1.00000000000000))*(x116)*(x122)))+(((x113)*(x114)))+(((IkReal(-1.00000000000000))*(x129)))+(x132)+(((x120)*(x121)))+(((r01)*(x115))));
evalcond[3]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x113)*(x116)))+(((IkReal(-1.00000000000000))*(x133)))+(((r01)*(x119)))+(((r02)*(sj2)*(x115)))+(((cj2)*(sj3)*(x112)))+(((IkReal(-1.00000000000000))*(x114)*(x122)))+(((IkReal(0.190000000000000))*(x121)))+(((IkReal(-1.00000000000000))*(pz)*(x116)*(x117))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x134=(pz)*(pz);
IkReal x135=(px)*(px);
IkReal x136=(py)*(py);
IkReal x137=((cj2)*(r00));
IkReal x138=((IkReal(0.190000000000000))*(sj3));
IkReal x139=((IkReal(2.00000000000000))*(r02));
IkReal x140=((cj3)*(pz));
IkReal x141=((py)*(sj2));
IkReal x142=((IkReal(0.0361000000000000))*(cj3));
IkReal x143=((cj2)*(px));
IkReal x144=((IkReal(1.00000000000000))*(pp));
IkReal x145=((r02)*(sj3));
IkReal x146=((IkReal(0.380000000000000))*(pz));
IkReal x147=((IkReal(1.00000000000000))*(sj2));
IkReal x148=((r01)*(sj2));
IkReal x149=((IkReal(1.00000000000000))*(cj3));
IkReal x150=((IkReal(2.00000000000000))*(cj3));
IkReal x151=((IkReal(0.0361000000000000))*(sj3));
IkReal x152=((py)*(r01));
IkReal x153=((px)*(r00));
IkReal x154=((IkReal(0.380000000000000))*(r02));
IkReal x155=((pz)*(sj3));
IkReal x156=((IkReal(2.00000000000000))*(sj3));
IkReal x157=((cj3)*(r02));
IkReal x158=((pp)*(sj3));
IkReal x159=((IkReal(0.190000000000000))*(cj3));
IkReal x160=((IkReal(1.00000000000000))*(pz));
IkReal x161=((IkReal(2.00000000000000))*(x153));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(px)*(x147)))+(((cj2)*(py))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x147)))+(((cj2)*(r01))));
evalcond[3]=((((sj3)*(x137)))+(((IkReal(-1.00000000000000))*(r02)*(x149)))+(((sj3)*(x148))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(x160)))+(((x137)*(x159)))+(((r02)*(x138)))+(((IkReal(-1.00000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x153)))+(((x148)*(x159))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x137)*(x149)))+(((IkReal(-1.00000000000000))*(x145)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x147))));
evalcond[6]=((((IkReal(-0.190000000000000))*(x157)))+(((IkReal(-1.00000000000000))*(pz)*(r01)*(x147)))+(((x137)*(x138)))+(((x138)*(x148)))+(((r02)*(x143)))+(((r02)*(x141)))+(((IkReal(-1.00000000000000))*(x137)*(x160))));
evalcond[7]=((((x142)*(x148)))+(((x141)*(x150)*(x153)))+(((x143)*(x150)*(x152)))+(((x137)*(x142)))+(((IkReal(-1.00000000000000))*(r02)*(x146)))+(((IkReal(-1.00000000000000))*(x144)*(x145)))+(((x135)*(x137)*(x150)))+(((sj3)*(x134)*(x139)))+(((x139)*(x140)*(x143)))+(((x139)*(x140)*(x141)))+(((IkReal(-0.380000000000000))*(x152)))+(((IkReal(-0.380000000000000))*(x153)))+(((x155)*(x161)))+(((IkReal(-1.00000000000000))*(cj3)*(x137)*(x144)))+(((IkReal(2.00000000000000))*(x152)*(x155)))+(((x136)*(x148)*(x150)))+(((IkReal(-1.00000000000000))*(cj3)*(x144)*(x148)))+(((IkReal(0.0361000000000000))*(x145))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x135)*(x137)*(x156)))+(((IkReal(-1.00000000000000))*(x137)*(x146)))+(((IkReal(-1.00000000000000))*(x143)*(x152)*(x156)))+(((x140)*(x161)))+(((x137)*(x151)))+(((x137)*(x158)))+(((IkReal(-1.00000000000000))*(x141)*(x153)*(x156)))+(((cj3)*(x134)*(x139)))+(((IkReal(-1.00000000000000))*(x144)*(x157)))+(((IkReal(-1.00000000000000))*(r02)*(x142)))+(((IkReal(-1.00000000000000))*(x139)*(x141)*(x155)))+(((x141)*(x154)))+(((IkReal(-1.00000000000000))*(x146)*(x148)))+(((x148)*(x158)))+(((x148)*(x151)))+(((IkReal(2.00000000000000))*(x140)*(x152)))+(((IkReal(-1.00000000000000))*(x136)*(x148)*(x156)))+(((IkReal(-1.00000000000000))*(x139)*(x143)*(x155)))+(((x143)*(x154))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x162=((IkReal(5.21123322462884))*(cj3));
cj5array[0]=((IkReal(-0.713421805445464))+(((IkReal(-1.00000000000000))*(py)*(sj2)*(x162)))+(((IkReal(13.7137716437601))*(pp)))+(((IkReal(-1.00000000000000))*(cj2)*(px)*(x162)))+(((IkReal(-5.21123322462884))*(pz)*(sj3))));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x163=((r00)*(sj2));
IkReal x164=((pz)*(r02));
IkReal x165=((py)*(r00));
IkReal x166=((IkReal(0.380000000000000))*(cj3));
IkReal x167=((cj2)*(r01));
IkReal x168=((IkReal(0.380000000000000))*(sj3));
IkReal x169=((IkReal(2.00000000000000))*(cj2));
IkReal x170=((IkReal(2.00000000000000))*(px)*(sj2));
evalcond[0]=((IkReal(0.0881222900000000))+(((cj2)*(py)*(r02)*(x168)))+(((IkReal(-1.00000000000000))*(py)*(x164)*(x169)))+(((IkReal(-2.00000000000000))*(x167)*((py)*(py))))+(((IkReal(-1.00000000000000))*(px)*(x165)*(x169)))+(((IkReal(-1.00000000000000))*(pp)*(x163)))+(((IkReal(0.0729194000000000))*(IKcos(j5))))+(((x164)*(x170)))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x166)))+(((IkReal(2.00000000000000))*(x163)*((px)*(px))))+(((IkReal(-1.00000000000000))*(px)*(r02)*(sj2)*(x168)))+(((x165)*(x166)))+(((pp)*(x167)))+(((py)*(r01)*(x170)))+(((IkReal(0.0361000000000000))*(x167)))+(((pz)*(x163)*(x168)))+(((IkReal(-1.00000000000000))*(pz)*(x167)*(x168)))+(((IkReal(-0.0361000000000000))*(x163))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x171=((IkReal(26230000.0000000))*(cj5));
IkReal x172=((cj2)*(cj3));
IkReal x173=((pz)*(r01));
IkReal x174=((py)*(r02));
IkReal x175=((IkReal(26230000.0000000))*(sj5));
IkReal x176=((cj3)*(sj2));
IkReal x177=((pz)*(sj3));
IkReal x178=((px)*(r02));
IkReal x179=((IkReal(13900000.0000000))*(px));
IkReal x180=((r01)*(sj3));
IkReal x181=((py)*(r00)*(sj3));
IkReal x182=((pz)*(r00)*(x176));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x175)*(x177)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x182)))+(((IkReal(-1.00000000000000))*(py)*(x175)*(x176)))+(((IkReal(-13900000.0000000))*(x172)*(x174)))+(((IkReal(13900000.0000000))*(x172)*(x173)))+(((IkReal(-1.00000000000000))*(x171)*(x182)))+(((IkReal(-1.00000000000000))*(px)*(x171)*(x180)))+(((x171)*(x172)*(x173)))+(((x171)*(x181)))+(((IkReal(13900000.0000000))*(x176)*(x178)))+(((IkReal(13900000.0000000))*(x181)))+(((IkReal(-1.00000000000000))*(x171)*(x172)*(x174)))+(((x171)*(x176)*(x178)))+(((IkReal(-1.00000000000000))*(x179)*(x180)))+(((IkReal(-1.00000000000000))*(px)*(x172)*(x175))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(px)*(x171)*(x172)))+(((IkReal(4983700.00000000))*(cj5)))+(((px)*(x175)*(x180)))+(((IkReal(-1.00000000000000))*(x172)*(x173)*(x175)))+(((IkReal(-1.00000000000000))*(py)*(x171)*(x176)))+(((IkReal(-13900000.0000000))*(x177)))+(((x175)*(x182)))+(((IkReal(-1.00000000000000))*(x175)*(x176)*(x178)))+(((IkReal(-13900000.0000000))*(py)*(x176)))+(((IkReal(-1.00000000000000))*(x171)*(x177)))+(((x172)*(x174)*(x175)))+(((IkReal(-1.00000000000000))*(x175)*(x181)))+(((IkReal(-1.00000000000000))*(x172)*(x179))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(x175)*(x177)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x182)))+(((IkReal(-1.00000000000000))*(py)*(x175)*(x176)))+(((IkReal(-13900000.0000000))*(x172)*(x174)))+(((IkReal(13900000.0000000))*(x172)*(x173)))+(((IkReal(-1.00000000000000))*(x171)*(x182)))+(((IkReal(-1.00000000000000))*(px)*(x171)*(x180)))+(((x171)*(x172)*(x173)))+(((x171)*(x181)))+(((IkReal(13900000.0000000))*(x176)*(x178)))+(((IkReal(13900000.0000000))*(x181)))+(((IkReal(-1.00000000000000))*(x171)*(x172)*(x174)))+(((x171)*(x176)*(x178)))+(((IkReal(-1.00000000000000))*(x179)*(x180)))+(((IkReal(-1.00000000000000))*(px)*(x172)*(x175)))))), ((gconst10)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(px)*(x171)*(x172)))+(((IkReal(4983700.00000000))*(cj5)))+(((px)*(x175)*(x180)))+(((IkReal(-1.00000000000000))*(x172)*(x173)*(x175)))+(((IkReal(-1.00000000000000))*(py)*(x171)*(x176)))+(((IkReal(-13900000.0000000))*(x177)))+(((x175)*(x182)))+(((IkReal(-1.00000000000000))*(x175)*(x176)*(x178)))+(((IkReal(-13900000.0000000))*(py)*(x176)))+(((IkReal(-1.00000000000000))*(x171)*(x177)))+(((x172)*(x174)*(x175)))+(((IkReal(-1.00000000000000))*(x175)*(x181)))+(((IkReal(-1.00000000000000))*(x172)*(x179)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x183=IKsin(j4);
IkReal x184=IKcos(j4);
IkReal x185=((pz)*(r01));
IkReal x186=((cj3)*(py));
IkReal x187=((cj2)*(r02));
IkReal x188=((px)*(sj3));
IkReal x189=((IkReal(1.00000000000000))*(r00));
IkReal x190=((sj2)*(sj3));
IkReal x191=((IkReal(1.00000000000000))*(sj2));
IkReal x192=((cj3)*(px));
IkReal x193=((cj3)*(pz));
IkReal x194=((r00)*(sj2));
IkReal x195=((py)*(sj3));
IkReal x196=((IkReal(0.139000000000000))*(x183));
IkReal x197=((IkReal(0.139000000000000))*(x184));
IkReal x198=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x199=((IkReal(0.262300000000000))*(x183));
IkReal x200=((IkReal(0.262300000000000))*(x184));
IkReal x201=((sj5)*(x200));
IkReal x202=((cj5)*(x199));
IkReal x203=((sj5)*(x199));
IkReal x204=((cj5)*(x200));
IkReal x205=((x196)+(x202));
IkReal x206=((x197)+(x204)+(x203));
evalcond[0]=((((IkReal(-1.00000000000000))*(x193)))+(((IkReal(-1.00000000000000))*(x201)))+(x205)+(((cj2)*(x188)))+(((py)*(x190))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x186)*(x191)))+(x206)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x192))));
evalcond[2]=((((x186)*(x187)))+(((x193)*(x194)))+(((r01)*(x188)))+(((IkReal(-1.00000000000000))*(x189)*(x195)))+(((IkReal(-1.00000000000000))*(x205)))+(x201)+(((IkReal(-1.00000000000000))*(x185)*(x198)))+(((IkReal(-1.00000000000000))*(r02)*(x191)*(x192))));
evalcond[3]=((((IkReal(-1.00000000000000))*(pz)*(x189)*(x190)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x186)*(x189)))+(((IkReal(0.190000000000000))*(x194)))+(((r01)*(x192)))+(((IkReal(-1.00000000000000))*(x187)*(x195)))+(x206)+(((cj2)*(sj3)*(x185)))+(((r02)*(sj2)*(x188))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x207=((IkReal(26230000.0000000))*(cj5));
IkReal x208=((py)*(sj2));
IkReal x209=((cj2)*(px));
IkReal x210=((IkReal(13900000.0000000))*(cj3));
IkReal x211=((IkReal(26230000.0000000))*(sj5));
IkReal x212=((IkReal(13900000.0000000))*(sj3));
IkReal x213=((pz)*(x211));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj3)*(x209)*(x211)))+(((IkReal(-1.00000000000000))*(cj3)*(x208)*(x211)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(pz)*(x210)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(x207)))+(((x208)*(x212)))+(((IkReal(-1.00000000000000))*(sj3)*(x213)))+(((x209)*(x212)))+(((sj3)*(x207)*(x209)))+(((sj3)*(x207)*(x208))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(pz)*(x212)))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)*(x207)))+(((IkReal(-1.00000000000000))*(sj3)*(x209)*(x211)))+(((cj3)*(x213)))+(((IkReal(-1.00000000000000))*(cj3)*(x207)*(x209)))+(((IkReal(-1.00000000000000))*(cj3)*(x207)*(x208)))+(((IkReal(-1.00000000000000))*(x208)*(x210)))+(((IkReal(-1.00000000000000))*(x209)*(x210)))+(((IkReal(-1.00000000000000))*(sj3)*(x208)*(x211))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(cj3)*(x209)*(x211)))+(((IkReal(-1.00000000000000))*(cj3)*(x208)*(x211)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(pz)*(x210)))+(((IkReal(-1.00000000000000))*(cj3)*(pz)*(x207)))+(((x208)*(x212)))+(((IkReal(-1.00000000000000))*(sj3)*(x213)))+(((x209)*(x212)))+(((sj3)*(x207)*(x209)))+(((sj3)*(x207)*(x208)))))), ((gconst9)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(pz)*(x212)))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)*(x207)))+(((IkReal(-1.00000000000000))*(sj3)*(x209)*(x211)))+(((cj3)*(x213)))+(((IkReal(-1.00000000000000))*(cj3)*(x207)*(x209)))+(((IkReal(-1.00000000000000))*(cj3)*(x207)*(x208)))+(((IkReal(-1.00000000000000))*(x208)*(x210)))+(((IkReal(-1.00000000000000))*(x209)*(x210)))+(((IkReal(-1.00000000000000))*(sj3)*(x208)*(x211)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x214=IKsin(j4);
IkReal x215=IKcos(j4);
IkReal x216=((pz)*(r01));
IkReal x217=((cj3)*(py));
IkReal x218=((cj2)*(r02));
IkReal x219=((px)*(sj3));
IkReal x220=((IkReal(1.00000000000000))*(r00));
IkReal x221=((sj2)*(sj3));
IkReal x222=((IkReal(1.00000000000000))*(sj2));
IkReal x223=((cj3)*(px));
IkReal x224=((cj3)*(pz));
IkReal x225=((r00)*(sj2));
IkReal x226=((py)*(sj3));
IkReal x227=((IkReal(0.139000000000000))*(x214));
IkReal x228=((IkReal(0.139000000000000))*(x215));
IkReal x229=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x230=((IkReal(0.262300000000000))*(x214));
IkReal x231=((IkReal(0.262300000000000))*(x215));
IkReal x232=((sj5)*(x231));
IkReal x233=((cj5)*(x230));
IkReal x234=((sj5)*(x230));
IkReal x235=((cj5)*(x231));
IkReal x236=((x227)+(x233));
IkReal x237=((x228)+(x234)+(x235));
evalcond[0]=((((py)*(x221)))+(((cj2)*(x219)))+(((IkReal(-1.00000000000000))*(x232)))+(x236)+(((IkReal(-1.00000000000000))*(x224))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x223)))+(x237)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(x217)*(x222))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x216)*(x229)))+(((x224)*(x225)))+(((IkReal(-1.00000000000000))*(r02)*(x222)*(x223)))+(((IkReal(-1.00000000000000))*(x236)))+(x232)+(((IkReal(-1.00000000000000))*(x220)*(x226)))+(((r01)*(x219)))+(((x217)*(x218))));
evalcond[3]=((((cj2)*(sj3)*(x216)))+(((IkReal(-1.00000000000000))*(pz)*(x220)*(x221)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((r01)*(x223)))+(((r02)*(sj2)*(x219)))+(((IkReal(0.190000000000000))*(x225)))+(x237)+(((IkReal(-1.00000000000000))*(x218)*(x226)))+(((IkReal(-1.00000000000000))*(x217)*(x220))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x238=((cj3)*(sj2));
IkReal x239=((cj2)*(cj3));
if( IKabs(((IkReal(0.00719424460431655))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x238)))+(((IkReal(-190.000000000000))*(r02)*(sj3)))+(((IkReal(-190.000000000000))*(r00)*(x239)))+(((IkReal(1000.00000000000))*(px)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.713421805445464))+(((IkReal(13.7137716437601))*(pp)))+(((IkReal(-5.21123322462884))*(py)*(x238)))+(((IkReal(-5.21123322462884))*(px)*(x239)))+(((IkReal(-5.21123322462884))*(pz)*(sj3))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00719424460431655))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x238)))+(((IkReal(-190.000000000000))*(r02)*(sj3)))+(((IkReal(-190.000000000000))*(r00)*(x239)))+(((IkReal(1000.00000000000))*(px)*(r00)))))))+IKsqr(((IkReal(-0.713421805445464))+(((IkReal(13.7137716437601))*(pp)))+(((IkReal(-5.21123322462884))*(py)*(x238)))+(((IkReal(-5.21123322462884))*(px)*(x239)))+(((IkReal(-5.21123322462884))*(pz)*(sj3)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.00719424460431655))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x238)))+(((IkReal(-190.000000000000))*(r02)*(sj3)))+(((IkReal(-190.000000000000))*(r00)*(x239)))+(((IkReal(1000.00000000000))*(px)*(r00)))))), ((IkReal(-0.713421805445464))+(((IkReal(13.7137716437601))*(pp)))+(((IkReal(-5.21123322462884))*(py)*(x238)))+(((IkReal(-5.21123322462884))*(px)*(x239)))+(((IkReal(-5.21123322462884))*(pz)*(sj3)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x240=IKcos(j5);
IkReal x241=((cj2)*(r00));
IkReal x242=((IkReal(0.190000000000000))*(sj3));
IkReal x243=((IkReal(2.00000000000000))*(py));
IkReal x244=((r00)*(sj2));
IkReal x245=((IkReal(0.380000000000000))*(py));
IkReal x246=((r02)*(sj3));
IkReal x247=((r01)*(sj2));
IkReal x248=((r02)*(sj2));
IkReal x249=((IkReal(0.380000000000000))*(px));
IkReal x250=((IkReal(0.139000000000000))*(cj6));
IkReal x251=((cj2)*(pz));
IkReal x252=((IkReal(1.00000000000000))*(pp));
IkReal x253=((cj2)*(r01));
IkReal x254=((IkReal(0.380000000000000))*(sj3));
IkReal x255=((IkReal(0.190000000000000))*(cj3));
IkReal x256=((IkReal(1.00000000000000))*(pz));
IkReal x257=((IkReal(0.0729194000000000))*(x240));
evalcond[0]=((IkReal(0.0520222900000000))+(((pz)*(x254)))+(x257)+(((cj2)*(cj3)*(x249)))+(((cj3)*(sj2)*(x245)))+(((IkReal(-1.00000000000000))*(x252))));
evalcond[1]=((((x241)*(x255)))+(((r02)*(x242)))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((IkReal(-1.00000000000000))*(r02)*(x256)))+(((x250)*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(py)*(r01)))+(((x247)*(x255))));
evalcond[2]=((((IkReal(-0.262300000000000))*(cj6)))+(((cj2)*(px)*(r02)))+(((IkReal(-1.00000000000000))*(x240)*(x250)))+(((IkReal(-1.00000000000000))*(r02)*(x255)))+(((IkReal(-1.00000000000000))*(x241)*(x256)))+(((IkReal(-1.00000000000000))*(x247)*(x256)))+(((x241)*(x242)))+(((x242)*(x247)))+(((py)*(x248))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x246)*(x249)))+(((IkReal(2.00000000000000))*(x244)*((px)*(px))))+(((cj3)*(r00)*(x245)))+(((IkReal(2.00000000000000))*(px)*(pz)*(x248)))+(((IkReal(-1.00000000000000))*(px)*(x241)*(x243)))+(((IkReal(-1.00000000000000))*(r02)*(x243)*(x251)))+(((IkReal(0.0361000000000000))*(x253)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x249)))+(((IkReal(-1.00000000000000))*(x244)*(x252)))+(((IkReal(-1.00000000000000))*(py)*(x243)*(x253)))+(((pz)*(x244)*(x254)))+(((IkReal(-0.0361000000000000))*(x244)))+(((pp)*(x253)))+(((IkReal(-0.0881222900000000))*(sj6)))+(((cj2)*(x245)*(x246)))+(((IkReal(-1.00000000000000))*(r01)*(x251)*(x254)))+(((px)*(x243)*(x247)))+(((IkReal(-1.00000000000000))*(sj6)*(x257))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x258=((IkReal(2623.00000000000))*(cj6));
gconst2=IKsign(((((IkReal(1390.00000000000))*(cj5)*(cj6)))+(((x258)*((sj5)*(sj5))))+(((x258)*((cj5)*(cj5))))));
IkReal x259=((IkReal(1.88705035971223))*(cj6));
dummyeval[0]=((((x259)*((sj5)*(sj5))))+(((cj5)*(cj6)))+(((x259)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x260=((IkReal(0.0729194000000000))*(cj5));
IkReal x261=(px)*(px);
IkReal x262=(py)*(py);
IkReal x263=(pz)*(pz);
IkReal x264=((cj2)*(r00));
IkReal x265=((IkReal(0.190000000000000))*(sj3));
IkReal x266=((IkReal(0.380000000000000))*(py));
IkReal x267=((pp)*(sj3));
IkReal x268=((r01)*(sj2));
IkReal x269=((IkReal(2.00000000000000))*(r02));
IkReal x270=((cj3)*(sj2));
IkReal x271=((py)*(pz));
IkReal x272=((IkReal(0.0361000000000000))*(cj3));
IkReal x273=((IkReal(1.00000000000000))*(r02));
IkReal x274=((IkReal(0.380000000000000))*(pz));
IkReal x275=((r00)*(sj2));
IkReal x276=((IkReal(0.0361000000000000))*(sj3));
IkReal x277=((IkReal(1.00000000000000))*(cj3));
IkReal x278=((IkReal(1.00000000000000))*(pp));
IkReal x279=((r02)*(sj2));
IkReal x280=((cj2)*(r01));
IkReal x281=((IkReal(0.380000000000000))*(px));
IkReal x282=((IkReal(2.00000000000000))*(r01));
IkReal x283=((px)*(sj2));
IkReal x284=((cj2)*(r02));
IkReal x285=((IkReal(0.190000000000000))*(cj3));
IkReal x286=((IkReal(1.00000000000000))*(pz));
IkReal x287=((IkReal(2.00000000000000))*(px)*(py));
IkReal x288=((cj3)*(x281));
IkReal x289=((IkReal(2.00000000000000))*(x261));
IkReal x290=((IkReal(2.00000000000000))*(x262));
IkReal x291=((cj2)*(px)*(pz));
IkReal x292=((IkReal(2.00000000000000))*(px)*(pz)*(r00));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x283)))+(((cj2)*(py))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x275)))+(x280));
evalcond[3]=((IkReal(0.0520222900000000))+(((x266)*(x270)))+(((sj3)*(x274)))+(((cj2)*(x288)))+(x260)+(((IkReal(-1.00000000000000))*(x278))));
evalcond[4]=((((sj3)*(x264)))+(((sj3)*(x268)))+(((IkReal(-1.00000000000000))*(cj3)*(x273))));
evalcond[5]=((((x268)*(x285)))+(((IkReal(-1.00000000000000))*(pz)*(x273)))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((x264)*(x285)))+(((r02)*(x265)))+(((IkReal(-1.00000000000000))*(py)*(r01))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x273)))+(((IkReal(-1.00000000000000))*(x268)*(x277)))+(((IkReal(-1.00000000000000))*(x264)*(x277))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r02)*(x285)))+(((x264)*(x265)))+(((IkReal(-1.00000000000000))*(x268)*(x286)))+(((py)*(x279)))+(((x265)*(x268)))+(((IkReal(-1.00000000000000))*(x264)*(x286)))+(((px)*(x284))));
evalcond[8]=((IkReal(-0.0881222900000000))+(((x268)*(x287)))+(((pz)*(x269)*(x283)))+(((IkReal(0.0361000000000000))*(x280)))+(((cj3)*(r00)*(x266)))+(((IkReal(-1.00000000000000))*(sj3)*(x274)*(x280)))+(((IkReal(-1.00000000000000))*(r01)*(x288)))+(((IkReal(-0.0361000000000000))*(x275)))+(((x275)*(x289)))+(((sj3)*(x274)*(x275)))+(((IkReal(-1.00000000000000))*(x280)*(x290)))+(((IkReal(-1.00000000000000))*(x275)*(x278)))+(((IkReal(-1.00000000000000))*(x260)))+(((pp)*(x280)))+(((IkReal(-1.00000000000000))*(x264)*(x287)))+(((IkReal(-1.00000000000000))*(sj3)*(x279)*(x281)))+(((sj3)*(x266)*(x284)))+(((IkReal(-1.00000000000000))*(cj2)*(x269)*(x271))));
evalcond[9]=((((sj3)*(x263)*(x269)))+(((r02)*(x276)))+(((cj3)*(x268)*(x290)))+(((cj3)*(x269)*(x291)))+(((cj3)*(x264)*(x289)))+(((x264)*(x272)))+(((x269)*(x270)*(x271)))+(((IkReal(-1.00000000000000))*(pp)*(x268)*(x277)))+(((IkReal(-1.00000000000000))*(r01)*(x266)))+(((IkReal(-1.00000000000000))*(r02)*(x274)))+(((IkReal(-1.00000000000000))*(r00)*(x281)))+(((r00)*(x270)*(x287)))+(((IkReal(-1.00000000000000))*(x267)*(x273)))+(((cj3)*(x280)*(x287)))+(((sj3)*(x271)*(x282)))+(((IkReal(-1.00000000000000))*(pp)*(x264)*(x277)))+(((sj3)*(x292)))+(((x268)*(x272))));
evalcond[10]=((((x267)*(x268)))+(((cj3)*(x292)))+(((IkReal(-1.00000000000000))*(sj3)*(x268)*(x290)))+(((IkReal(-1.00000000000000))*(sj3)*(x269)*(x291)))+(((x266)*(x279)))+(((cj3)*(x271)*(x282)))+(((IkReal(-1.00000000000000))*(sj3)*(x280)*(x287)))+(((x264)*(x267)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x269)*(x271)))+(((x264)*(x276)))+(((cj3)*(x263)*(x269)))+(((IkReal(-1.00000000000000))*(sj3)*(x275)*(x287)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x273)))+(((IkReal(-1.00000000000000))*(r02)*(x272)))+(((IkReal(-1.00000000000000))*(x268)*(x274)))+(((IkReal(-1.00000000000000))*(sj3)*(x264)*(x289)))+(((x281)*(x284)))+(((IkReal(-1.00000000000000))*(x264)*(x274)))+(((x268)*(x276))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x293=((IkReal(26230000.0000000))*(cj5));
IkReal x294=((cj2)*(cj3));
IkReal x295=((pz)*(r01));
IkReal x296=((py)*(r02));
IkReal x297=((IkReal(26230000.0000000))*(sj5));
IkReal x298=((pz)*(sj3));
IkReal x299=((cj3)*(sj2));
IkReal x300=((px)*(r02));
IkReal x301=((IkReal(13900000.0000000))*(px));
IkReal x302=((r01)*(sj3));
IkReal x303=((py)*(r00)*(sj3));
IkReal x304=((pz)*(r00)*(x299));
if( IKabs(((gconst4)*(((((x301)*(x302)))+(((IkReal(-1.00000000000000))*(py)*(x297)*(x299)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(px)*(x294)*(x297)))+(((IkReal(-1.00000000000000))*(x297)*(x298)))+(((px)*(x293)*(x302)))+(((IkReal(-1.00000000000000))*(x293)*(x294)*(x295)))+(((IkReal(13900000.0000000))*(x304)))+(((x293)*(x294)*(x296)))+(((x293)*(x304)))+(((IkReal(-1.00000000000000))*(x293)*(x303)))+(((IkReal(-1.00000000000000))*(x293)*(x299)*(x300)))+(((IkReal(-13900000.0000000))*(x299)*(x300)))+(((IkReal(13900000.0000000))*(x294)*(x296)))+(((IkReal(-13900000.0000000))*(x303)))+(((IkReal(-13900000.0000000))*(x294)*(x295))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(-13900000.0000000))*(x298)))+(((IkReal(4983700.00000000))*(cj5)))+(((x297)*(x299)*(x300)))+(((IkReal(-1.00000000000000))*(px)*(x293)*(x294)))+(((IkReal(-1.00000000000000))*(x294)*(x301)))+(((IkReal(-1.00000000000000))*(x297)*(x304)))+(((IkReal(-1.00000000000000))*(x293)*(x298)))+(((IkReal(-1.00000000000000))*(x294)*(x296)*(x297)))+(((x297)*(x303)))+(((x294)*(x295)*(x297)))+(((IkReal(-1.00000000000000))*(py)*(x293)*(x299)))+(((IkReal(-13900000.0000000))*(py)*(x299)))+(((IkReal(-1.00000000000000))*(px)*(x297)*(x302))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((x301)*(x302)))+(((IkReal(-1.00000000000000))*(py)*(x297)*(x299)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(px)*(x294)*(x297)))+(((IkReal(-1.00000000000000))*(x297)*(x298)))+(((px)*(x293)*(x302)))+(((IkReal(-1.00000000000000))*(x293)*(x294)*(x295)))+(((IkReal(13900000.0000000))*(x304)))+(((x293)*(x294)*(x296)))+(((x293)*(x304)))+(((IkReal(-1.00000000000000))*(x293)*(x303)))+(((IkReal(-1.00000000000000))*(x293)*(x299)*(x300)))+(((IkReal(-13900000.0000000))*(x299)*(x300)))+(((IkReal(13900000.0000000))*(x294)*(x296)))+(((IkReal(-13900000.0000000))*(x303)))+(((IkReal(-13900000.0000000))*(x294)*(x295)))))), ((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(-13900000.0000000))*(x298)))+(((IkReal(4983700.00000000))*(cj5)))+(((x297)*(x299)*(x300)))+(((IkReal(-1.00000000000000))*(px)*(x293)*(x294)))+(((IkReal(-1.00000000000000))*(x294)*(x301)))+(((IkReal(-1.00000000000000))*(x297)*(x304)))+(((IkReal(-1.00000000000000))*(x293)*(x298)))+(((IkReal(-1.00000000000000))*(x294)*(x296)*(x297)))+(((x297)*(x303)))+(((x294)*(x295)*(x297)))+(((IkReal(-1.00000000000000))*(py)*(x293)*(x299)))+(((IkReal(-13900000.0000000))*(py)*(x299)))+(((IkReal(-1.00000000000000))*(px)*(x297)*(x302)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x305=IKsin(j4);
IkReal x306=IKcos(j4);
IkReal x307=((pz)*(r01));
IkReal x308=((cj3)*(py));
IkReal x309=((cj2)*(r02));
IkReal x310=((px)*(sj3));
IkReal x311=((IkReal(1.00000000000000))*(r00));
IkReal x312=((sj2)*(sj3));
IkReal x313=((IkReal(1.00000000000000))*(sj2));
IkReal x314=((cj3)*(px));
IkReal x315=((cj3)*(pz));
IkReal x316=((r00)*(sj2));
IkReal x317=((py)*(sj3));
IkReal x318=((IkReal(0.139000000000000))*(x305));
IkReal x319=((IkReal(0.139000000000000))*(x306));
IkReal x320=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x321=((IkReal(0.262300000000000))*(x305));
IkReal x322=((IkReal(0.262300000000000))*(x306));
IkReal x323=((cj5)*(x321));
IkReal x324=((sj5)*(x322));
IkReal x325=((sj5)*(x321));
IkReal x326=((cj5)*(x322));
IkReal x327=((x323)+(x318));
IkReal x328=((x325)+(x326)+(x319));
evalcond[0]=((((IkReal(-1.00000000000000))*(x324)))+(x327)+(((py)*(x312)))+(((cj2)*(x310)))+(((IkReal(-1.00000000000000))*(x315))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x314)))+(((IkReal(-1.00000000000000))*(x308)*(x313)))+(x328)+(((IkReal(-1.00000000000000))*(pz)*(sj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x324)))+(((x315)*(x316)))+(((IkReal(-1.00000000000000))*(x307)*(x320)))+(x327)+(((r01)*(x310)))+(((x308)*(x309)))+(((IkReal(-1.00000000000000))*(r02)*(x313)*(x314)))+(((IkReal(-1.00000000000000))*(x311)*(x317))));
evalcond[3]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(pz)*(x311)*(x312)))+(((IkReal(-1.00000000000000))*(x328)))+(((IkReal(-1.00000000000000))*(x308)*(x311)))+(((IkReal(-1.00000000000000))*(x309)*(x317)))+(((r01)*(x314)))+(((cj2)*(sj3)*(x307)))+(((r02)*(sj2)*(x310)))+(((IkReal(0.190000000000000))*(x316))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x329=((IkReal(26230000.0000000))*(cj5));
IkReal x330=((py)*(sj2));
IkReal x331=((cj2)*(px));
IkReal x332=((pz)*(sj3));
IkReal x333=((IkReal(26230000.0000000))*(sj5));
IkReal x334=((IkReal(13900000.0000000))*(cj3));
IkReal x335=((cj3)*(pz));
IkReal x336=((IkReal(13900000.0000000))*(sj3));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj3)*(x331)*(x333)))+(((IkReal(4983700.00000000))*(sj5)))+(((x330)*(x336)))+(((x331)*(x336)))+(((IkReal(-1.00000000000000))*(cj3)*(x330)*(x333)))+(((IkReal(-1.00000000000000))*(x329)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x334)))+(((IkReal(-1.00000000000000))*(x332)*(x333)))+(((sj3)*(x329)*(x330)))+(((sj3)*(x329)*(x331))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x329)*(x332)))+(((IkReal(-1.00000000000000))*(x330)*(x334)))+(((x333)*(x335)))+(((IkReal(-1.00000000000000))*(x331)*(x334)))+(((IkReal(-13900000.0000000))*(x332)))+(((IkReal(-1.00000000000000))*(sj3)*(x330)*(x333)))+(((IkReal(-1.00000000000000))*(sj3)*(x331)*(x333)))+(((IkReal(-1.00000000000000))*(cj3)*(x329)*(x331)))+(((IkReal(-1.00000000000000))*(cj3)*(x329)*(x330))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(cj3)*(x331)*(x333)))+(((IkReal(4983700.00000000))*(sj5)))+(((x330)*(x336)))+(((x331)*(x336)))+(((IkReal(-1.00000000000000))*(cj3)*(x330)*(x333)))+(((IkReal(-1.00000000000000))*(x329)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x334)))+(((IkReal(-1.00000000000000))*(x332)*(x333)))+(((sj3)*(x329)*(x330)))+(((sj3)*(x329)*(x331)))))), ((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x329)*(x332)))+(((IkReal(-1.00000000000000))*(x330)*(x334)))+(((x333)*(x335)))+(((IkReal(-1.00000000000000))*(x331)*(x334)))+(((IkReal(-13900000.0000000))*(x332)))+(((IkReal(-1.00000000000000))*(sj3)*(x330)*(x333)))+(((IkReal(-1.00000000000000))*(sj3)*(x331)*(x333)))+(((IkReal(-1.00000000000000))*(cj3)*(x329)*(x331)))+(((IkReal(-1.00000000000000))*(cj3)*(x329)*(x330)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x337=IKsin(j4);
IkReal x338=IKcos(j4);
IkReal x339=((pz)*(r01));
IkReal x340=((cj3)*(py));
IkReal x341=((cj2)*(r02));
IkReal x342=((px)*(sj3));
IkReal x343=((IkReal(1.00000000000000))*(r00));
IkReal x344=((sj2)*(sj3));
IkReal x345=((IkReal(1.00000000000000))*(sj2));
IkReal x346=((cj3)*(px));
IkReal x347=((cj3)*(pz));
IkReal x348=((r00)*(sj2));
IkReal x349=((py)*(sj3));
IkReal x350=((IkReal(0.139000000000000))*(x337));
IkReal x351=((IkReal(0.139000000000000))*(x338));
IkReal x352=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x353=((IkReal(0.262300000000000))*(x337));
IkReal x354=((IkReal(0.262300000000000))*(x338));
IkReal x355=((cj5)*(x353));
IkReal x356=((sj5)*(x354));
IkReal x357=((sj5)*(x353));
IkReal x358=((cj5)*(x354));
IkReal x359=((x350)+(x355));
IkReal x360=((x351)+(x357)+(x358));
evalcond[0]=((((py)*(x344)))+(((IkReal(-1.00000000000000))*(x356)))+(x359)+(((cj2)*(x342)))+(((IkReal(-1.00000000000000))*(x347))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x346)))+(x360)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(x340)*(x345))));
evalcond[2]=((((r01)*(x342)))+(((IkReal(-1.00000000000000))*(x356)))+(((IkReal(-1.00000000000000))*(x339)*(x352)))+(x359)+(((x347)*(x348)))+(((IkReal(-1.00000000000000))*(r02)*(x345)*(x346)))+(((IkReal(-1.00000000000000))*(x343)*(x349)))+(((x340)*(x341))));
evalcond[3]=((((r01)*(x346)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x341)*(x349)))+(((IkReal(-1.00000000000000))*(x360)))+(((cj2)*(sj3)*(x339)))+(((r02)*(sj2)*(x342)))+(((IkReal(-1.00000000000000))*(x340)*(x343)))+(((IkReal(0.190000000000000))*(x348)))+(((IkReal(-1.00000000000000))*(pz)*(x343)*(x344))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x361=((IkReal(0.0729194000000000))*(cj5));
IkReal x362=(px)*(px);
IkReal x363=(py)*(py);
IkReal x364=(pz)*(pz);
IkReal x365=((cj2)*(r00));
IkReal x366=((IkReal(0.190000000000000))*(sj3));
IkReal x367=((IkReal(0.380000000000000))*(py));
IkReal x368=((pp)*(sj3));
IkReal x369=((r01)*(sj2));
IkReal x370=((IkReal(2.00000000000000))*(r02));
IkReal x371=((cj3)*(sj2));
IkReal x372=((py)*(pz));
IkReal x373=((IkReal(0.0361000000000000))*(cj3));
IkReal x374=((IkReal(1.00000000000000))*(r02));
IkReal x375=((IkReal(0.380000000000000))*(pz));
IkReal x376=((r00)*(sj2));
IkReal x377=((IkReal(0.0361000000000000))*(sj3));
IkReal x378=((IkReal(1.00000000000000))*(cj3));
IkReal x379=((IkReal(1.00000000000000))*(pp));
IkReal x380=((r02)*(sj2));
IkReal x381=((cj2)*(r01));
IkReal x382=((IkReal(0.380000000000000))*(px));
IkReal x383=((IkReal(2.00000000000000))*(r01));
IkReal x384=((px)*(sj2));
IkReal x385=((cj2)*(r02));
IkReal x386=((IkReal(0.190000000000000))*(cj3));
IkReal x387=((IkReal(1.00000000000000))*(pz));
IkReal x388=((IkReal(2.00000000000000))*(px)*(py));
IkReal x389=((cj3)*(x382));
IkReal x390=((IkReal(2.00000000000000))*(x362));
IkReal x391=((IkReal(2.00000000000000))*(x363));
IkReal x392=((cj2)*(px)*(pz));
IkReal x393=((IkReal(2.00000000000000))*(px)*(pz)*(r00));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x384)))+(((cj2)*(py))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x376)))+(x381));
evalcond[3]=((IkReal(0.0520222900000000))+(((x367)*(x371)))+(((cj2)*(x389)))+(((IkReal(-1.00000000000000))*(x379)))+(x361)+(((sj3)*(x375))));
evalcond[4]=((((sj3)*(x365)))+(((sj3)*(x369)))+(((IkReal(-1.00000000000000))*(cj3)*(x374))));
evalcond[5]=((((IkReal(-1.00000000000000))*(px)*(r00)))+(((x365)*(x386)))+(((IkReal(-1.00000000000000))*(pz)*(x374)))+(((IkReal(-1.00000000000000))*(py)*(r01)))+(((x369)*(x386)))+(((r02)*(x366))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x374)))+(((IkReal(-1.00000000000000))*(x369)*(x378)))+(((IkReal(-1.00000000000000))*(x365)*(x378))));
evalcond[7]=((((px)*(x385)))+(((IkReal(-1.00000000000000))*(x369)*(x387)))+(((IkReal(-1.00000000000000))*(x365)*(x387)))+(((x366)*(x369)))+(((x365)*(x366)))+(((IkReal(-1.00000000000000))*(r02)*(x386)))+(((py)*(x380))));
evalcond[8]=((IkReal(0.0881222900000000))+(((sj3)*(x375)*(x376)))+(((IkReal(-1.00000000000000))*(x365)*(x388)))+(((IkReal(-1.00000000000000))*(cj2)*(x370)*(x372)))+(((IkReal(-1.00000000000000))*(sj3)*(x375)*(x381)))+(((pp)*(x381)))+(((IkReal(-0.0361000000000000))*(x376)))+(((IkReal(-1.00000000000000))*(sj3)*(x380)*(x382)))+(x361)+(((x376)*(x390)))+(((IkReal(0.0361000000000000))*(x381)))+(((IkReal(-1.00000000000000))*(x381)*(x391)))+(((IkReal(-1.00000000000000))*(x376)*(x379)))+(((cj3)*(r00)*(x367)))+(((pz)*(x370)*(x384)))+(((IkReal(-1.00000000000000))*(r01)*(x389)))+(((sj3)*(x367)*(x385)))+(((x369)*(x388))));
evalcond[9]=((((x370)*(x371)*(x372)))+(((r02)*(x377)))+(((IkReal(-1.00000000000000))*(x368)*(x374)))+(((IkReal(-1.00000000000000))*(pp)*(x365)*(x378)))+(((IkReal(-1.00000000000000))*(r01)*(x367)))+(((x369)*(x373)))+(((IkReal(-1.00000000000000))*(r02)*(x375)))+(((cj3)*(x381)*(x388)))+(((x365)*(x373)))+(((sj3)*(x364)*(x370)))+(((cj3)*(x370)*(x392)))+(((sj3)*(x393)))+(((r00)*(x371)*(x388)))+(((IkReal(-1.00000000000000))*(pp)*(x369)*(x378)))+(((cj3)*(x369)*(x391)))+(((cj3)*(x365)*(x390)))+(((IkReal(-1.00000000000000))*(r00)*(x382)))+(((sj3)*(x372)*(x383))));
evalcond[10]=((((IkReal(-1.00000000000000))*(sj3)*(x376)*(x388)))+(((cj3)*(x364)*(x370)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x374)))+(((IkReal(-1.00000000000000))*(sj3)*(x370)*(x392)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x370)*(x372)))+(((x369)*(x377)))+(((IkReal(-1.00000000000000))*(r02)*(x373)))+(((x365)*(x377)))+(((IkReal(-1.00000000000000))*(sj3)*(x365)*(x390)))+(((x365)*(x368)))+(((cj3)*(x372)*(x383)))+(((x382)*(x385)))+(((IkReal(-1.00000000000000))*(sj3)*(x369)*(x391)))+(((x367)*(x380)))+(((cj3)*(x393)))+(((IkReal(-1.00000000000000))*(sj3)*(x381)*(x388)))+(((IkReal(-1.00000000000000))*(x369)*(x375)))+(((x368)*(x369)))+(((IkReal(-1.00000000000000))*(x365)*(x375))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x394=((IkReal(26230000.0000000))*(cj5));
IkReal x395=((cj2)*(cj3));
IkReal x396=((pz)*(r01));
IkReal x397=((py)*(r02));
IkReal x398=((IkReal(26230000.0000000))*(sj5));
IkReal x399=((cj3)*(sj2));
IkReal x400=((px)*(r02));
IkReal x401=((pz)*(sj3));
IkReal x402=((IkReal(13900000.0000000))*(px));
IkReal x403=((r01)*(sj3));
IkReal x404=((py)*(r00)*(sj3));
IkReal x405=((pz)*(r00)*(x399));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(px)*(x395)*(x398)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(px)*(x394)*(x403)))+(((IkReal(13900000.0000000))*(x395)*(x396)))+(((IkReal(-1.00000000000000))*(x394)*(x405)))+(((IkReal(13900000.0000000))*(x404)))+(((IkReal(-1.00000000000000))*(x402)*(x403)))+(((IkReal(-13900000.0000000))*(x405)))+(((IkReal(-1.00000000000000))*(x394)*(x395)*(x397)))+(((IkReal(-1.00000000000000))*(x398)*(x401)))+(((IkReal(13900000.0000000))*(x399)*(x400)))+(((x394)*(x404)))+(((x394)*(x399)*(x400)))+(((x394)*(x395)*(x396)))+(((IkReal(-13900000.0000000))*(x395)*(x397)))+(((IkReal(-1.00000000000000))*(py)*(x398)*(x399))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x394)*(x401)))+(((IkReal(-1.00000000000000))*(x395)*(x402)))+(((IkReal(-13900000.0000000))*(py)*(x399)))+(((IkReal(-13900000.0000000))*(x401)))+(((IkReal(-1.00000000000000))*(x398)*(x404)))+(((x398)*(x405)))+(((IkReal(-1.00000000000000))*(px)*(x394)*(x395)))+(((x395)*(x397)*(x398)))+(((px)*(x398)*(x403)))+(((IkReal(-1.00000000000000))*(x395)*(x396)*(x398)))+(((IkReal(-1.00000000000000))*(x398)*(x399)*(x400)))+(((IkReal(-1.00000000000000))*(py)*(x394)*(x399))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(px)*(x395)*(x398)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(px)*(x394)*(x403)))+(((IkReal(13900000.0000000))*(x395)*(x396)))+(((IkReal(-1.00000000000000))*(x394)*(x405)))+(((IkReal(13900000.0000000))*(x404)))+(((IkReal(-1.00000000000000))*(x402)*(x403)))+(((IkReal(-13900000.0000000))*(x405)))+(((IkReal(-1.00000000000000))*(x394)*(x395)*(x397)))+(((IkReal(-1.00000000000000))*(x398)*(x401)))+(((IkReal(13900000.0000000))*(x399)*(x400)))+(((x394)*(x404)))+(((x394)*(x399)*(x400)))+(((x394)*(x395)*(x396)))+(((IkReal(-13900000.0000000))*(x395)*(x397)))+(((IkReal(-1.00000000000000))*(py)*(x398)*(x399)))))), ((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x394)*(x401)))+(((IkReal(-1.00000000000000))*(x395)*(x402)))+(((IkReal(-13900000.0000000))*(py)*(x399)))+(((IkReal(-13900000.0000000))*(x401)))+(((IkReal(-1.00000000000000))*(x398)*(x404)))+(((x398)*(x405)))+(((IkReal(-1.00000000000000))*(px)*(x394)*(x395)))+(((x395)*(x397)*(x398)))+(((px)*(x398)*(x403)))+(((IkReal(-1.00000000000000))*(x395)*(x396)*(x398)))+(((IkReal(-1.00000000000000))*(x398)*(x399)*(x400)))+(((IkReal(-1.00000000000000))*(py)*(x394)*(x399)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x406=IKsin(j4);
IkReal x407=IKcos(j4);
IkReal x408=((pz)*(r01));
IkReal x409=((cj3)*(py));
IkReal x410=((cj2)*(r02));
IkReal x411=((px)*(sj3));
IkReal x412=((IkReal(1.00000000000000))*(r00));
IkReal x413=((sj2)*(sj3));
IkReal x414=((IkReal(1.00000000000000))*(sj2));
IkReal x415=((cj3)*(px));
IkReal x416=((cj3)*(pz));
IkReal x417=((r00)*(sj2));
IkReal x418=((py)*(sj3));
IkReal x419=((IkReal(0.139000000000000))*(x406));
IkReal x420=((IkReal(0.139000000000000))*(x407));
IkReal x421=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x422=((IkReal(0.262300000000000))*(x406));
IkReal x423=((IkReal(0.262300000000000))*(x407));
IkReal x424=((sj5)*(x423));
IkReal x425=((cj5)*(x422));
IkReal x426=((sj5)*(x422));
IkReal x427=((cj5)*(x423));
IkReal x428=((x419)+(x425));
IkReal x429=((x427)+(x426)+(x420));
evalcond[0]=((((py)*(x413)))+(((IkReal(-1.00000000000000))*(x424)))+(x428)+(((cj2)*(x411)))+(((IkReal(-1.00000000000000))*(x416))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x415)))+(x429)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(x409)*(x414))));
evalcond[2]=((((x416)*(x417)))+(((IkReal(-1.00000000000000))*(x412)*(x418)))+(((IkReal(-1.00000000000000))*(x428)))+(((x409)*(x410)))+(((r01)*(x411)))+(x424)+(((IkReal(-1.00000000000000))*(x408)*(x421)))+(((IkReal(-1.00000000000000))*(r02)*(x414)*(x415))));
evalcond[3]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(pz)*(x412)*(x413)))+(((IkReal(-1.00000000000000))*(x410)*(x418)))+(((r02)*(sj2)*(x411)))+(((r01)*(x415)))+(x429)+(((cj2)*(sj3)*(x408)))+(((IkReal(0.190000000000000))*(x417)))+(((IkReal(-1.00000000000000))*(x409)*(x412))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x430=((IkReal(26230000.0000000))*(cj5));
IkReal x431=((py)*(sj2));
IkReal x432=((cj2)*(px));
IkReal x433=((pz)*(sj3));
IkReal x434=((IkReal(26230000.0000000))*(sj5));
IkReal x435=((IkReal(13900000.0000000))*(cj3));
IkReal x436=((cj3)*(pz));
IkReal x437=((IkReal(13900000.0000000))*(sj3));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x430)*(x436)))+(((IkReal(-1.00000000000000))*(x433)*(x434)))+(((IkReal(4983700.00000000))*(sj5)))+(((sj3)*(x430)*(x431)))+(((sj3)*(x430)*(x432)))+(((IkReal(-1.00000000000000))*(pz)*(x435)))+(((x431)*(x437)))+(((IkReal(-1.00000000000000))*(cj3)*(x432)*(x434)))+(((x432)*(x437)))+(((IkReal(-1.00000000000000))*(cj3)*(x431)*(x434))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x430)*(x433)))+(((IkReal(-1.00000000000000))*(cj3)*(x430)*(x431)))+(((IkReal(-1.00000000000000))*(cj3)*(x430)*(x432)))+(((IkReal(4983700.00000000))*(cj5)))+(((x434)*(x436)))+(((IkReal(-1.00000000000000))*(x431)*(x435)))+(((IkReal(-13900000.0000000))*(x433)))+(((IkReal(-1.00000000000000))*(x432)*(x435)))+(((IkReal(-1.00000000000000))*(sj3)*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(sj3)*(x432)*(x434))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(x430)*(x436)))+(((IkReal(-1.00000000000000))*(x433)*(x434)))+(((IkReal(4983700.00000000))*(sj5)))+(((sj3)*(x430)*(x431)))+(((sj3)*(x430)*(x432)))+(((IkReal(-1.00000000000000))*(pz)*(x435)))+(((x431)*(x437)))+(((IkReal(-1.00000000000000))*(cj3)*(x432)*(x434)))+(((x432)*(x437)))+(((IkReal(-1.00000000000000))*(cj3)*(x431)*(x434)))))), ((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(x430)*(x433)))+(((IkReal(-1.00000000000000))*(cj3)*(x430)*(x431)))+(((IkReal(-1.00000000000000))*(cj3)*(x430)*(x432)))+(((IkReal(4983700.00000000))*(cj5)))+(((x434)*(x436)))+(((IkReal(-1.00000000000000))*(x431)*(x435)))+(((IkReal(-13900000.0000000))*(x433)))+(((IkReal(-1.00000000000000))*(x432)*(x435)))+(((IkReal(-1.00000000000000))*(sj3)*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(sj3)*(x432)*(x434)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x438=IKsin(j4);
IkReal x439=IKcos(j4);
IkReal x440=((pz)*(r01));
IkReal x441=((cj3)*(py));
IkReal x442=((cj2)*(r02));
IkReal x443=((px)*(sj3));
IkReal x444=((IkReal(1.00000000000000))*(r00));
IkReal x445=((sj2)*(sj3));
IkReal x446=((IkReal(1.00000000000000))*(sj2));
IkReal x447=((cj3)*(px));
IkReal x448=((cj3)*(pz));
IkReal x449=((r00)*(sj2));
IkReal x450=((py)*(sj3));
IkReal x451=((IkReal(0.139000000000000))*(x438));
IkReal x452=((IkReal(0.139000000000000))*(x439));
IkReal x453=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x454=((IkReal(0.262300000000000))*(x438));
IkReal x455=((IkReal(0.262300000000000))*(x439));
IkReal x456=((sj5)*(x455));
IkReal x457=((cj5)*(x454));
IkReal x458=((sj5)*(x454));
IkReal x459=((cj5)*(x455));
IkReal x460=((x457)+(x451));
IkReal x461=((x458)+(x459)+(x452));
evalcond[0]=((((IkReal(-1.00000000000000))*(x448)))+(((py)*(x445)))+(((IkReal(-1.00000000000000))*(x456)))+(x460)+(((cj2)*(x443))));
evalcond[1]=((IkReal(0.190000000000000))+(x461)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x447)))+(((IkReal(-1.00000000000000))*(x441)*(x446))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x440)*(x453)))+(((IkReal(-1.00000000000000))*(r02)*(x446)*(x447)))+(((IkReal(-1.00000000000000))*(x460)))+(((x441)*(x442)))+(x456)+(((r01)*(x443)))+(((x448)*(x449)))+(((IkReal(-1.00000000000000))*(x444)*(x450))));
evalcond[3]=((((cj2)*(sj3)*(x440)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x442)*(x450)))+(((IkReal(0.190000000000000))*(x449)))+(x461)+(((r02)*(sj2)*(x443)))+(((r01)*(x447)))+(((IkReal(-1.00000000000000))*(pz)*(x444)*(x445)))+(((IkReal(-1.00000000000000))*(x441)*(x444))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x462=((cj3)*(sj5));
IkReal x463=((IkReal(2623.00000000000))*(r02));
IkReal x464=((IkReal(10000.0000000000))*(cj6));
IkReal x465=((IkReal(2623.00000000000))*(r00));
IkReal x466=((sj2)*(sj3));
IkReal x467=((IkReal(2623.00000000000))*(r01));
IkReal x468=((cj2)*(sj3));
IkReal x469=((cj3)*(cj5));
IkReal x470=((sj5)*(x468));
if( IKabs(((gconst2)*(((((pz)*(x464)*(x469)))+(((IkReal(-1.00000000000000))*(cj5)*(px)*(x464)*(x468)))+(((IkReal(-1.00000000000000))*(sj5)*(x466)*(x467)))+(((IkReal(-1.00000000000000))*(cj5)*(py)*(x464)*(x466)))+(((x462)*(x463)))+(((IkReal(-1.00000000000000))*(x465)*(x470))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1390.00000000000))*(r00)*(x468)))+(((IkReal(-1.00000000000000))*(cj5)*(x466)*(x467)))+(((IkReal(-1.00000000000000))*(cj5)*(x465)*(x468)))+(((x463)*(x469)))+(((IkReal(-1390.00000000000))*(r01)*(x466)))+(((IkReal(-1.00000000000000))*(pz)*(x462)*(x464)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((py)*(sj5)*(x464)*(x466)))+(((px)*(x464)*(x470))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((pz)*(x464)*(x469)))+(((IkReal(-1.00000000000000))*(cj5)*(px)*(x464)*(x468)))+(((IkReal(-1.00000000000000))*(sj5)*(x466)*(x467)))+(((IkReal(-1.00000000000000))*(cj5)*(py)*(x464)*(x466)))+(((x462)*(x463)))+(((IkReal(-1.00000000000000))*(x465)*(x470)))))), ((gconst2)*(((((IkReal(-1390.00000000000))*(r00)*(x468)))+(((IkReal(-1.00000000000000))*(cj5)*(x466)*(x467)))+(((IkReal(-1.00000000000000))*(cj5)*(x465)*(x468)))+(((x463)*(x469)))+(((IkReal(-1390.00000000000))*(r01)*(x466)))+(((IkReal(-1.00000000000000))*(pz)*(x462)*(x464)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((py)*(sj5)*(x464)*(x466)))+(((px)*(x464)*(x470)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x471=IKsin(j4);
IkReal x472=IKcos(j4);
IkReal x473=(pz)*(pz);
IkReal x474=(px)*(px);
IkReal x475=(py)*(py);
IkReal x476=((IkReal(2.00000000000000))*(py));
IkReal x477=((cj2)*(px));
IkReal x478=((r01)*(sj3));
IkReal x479=((cj3)*(sj2));
IkReal x480=((pz)*(r02));
IkReal x481=((r02)*(sj3));
IkReal x482=((IkReal(1.00000000000000))*(pp));
IkReal x483=((IkReal(1.00000000000000))*(cj3));
IkReal x484=((r00)*(sj3));
IkReal x485=((IkReal(1.00000000000000))*(py));
IkReal x486=((px)*(sj2));
IkReal x487=((IkReal(0.0494802900000000))*(sj5));
IkReal x488=((cj2)*(pz));
IkReal x489=((cj3)*(r01));
IkReal x490=((py)*(sj2));
IkReal x491=((cj3)*(r02));
IkReal x492=((pz)*(sj2));
IkReal x493=((IkReal(0.380000000000000))*(r02));
IkReal x494=((IkReal(0.380000000000000))*(r00));
IkReal x495=((IkReal(0.380000000000000))*(r01));
IkReal x496=((IkReal(0.0881222900000000))*(cj5));
IkReal x497=((cj2)*(cj3)*(r00));
IkReal x498=((IkReal(2.00000000000000))*(x473));
IkReal x499=((cj6)*(x472));
IkReal x500=((IkReal(2.00000000000000))*(px)*(pz));
IkReal x501=((cj6)*(x471));
IkReal x502=((IkReal(2.00000000000000))*(x474));
IkReal x503=((IkReal(0.262300000000000))*(x472));
IkReal x504=((IkReal(0.139000000000000))*(x471));
IkReal x505=((IkReal(2.00000000000000))*(x475));
IkReal x506=((IkReal(0.139000000000000))*(x472));
IkReal x507=((IkReal(0.262300000000000))*(cj5)*(x471));
IkReal x508=((IkReal(0.262300000000000))*(sj5)*(x471));
evalcond[0]=((((sj5)*(x501)))+(((cj2)*(x484)))+(((cj5)*(x499)))+(((sj2)*(x478)))+(((IkReal(-1.00000000000000))*(r02)*(x483))));
evalcond[1]=((((IkReal(-1.00000000000000))*(pz)*(x483)))+(x504)+(x507)+(((sj3)*(x490)))+(((IkReal(-1.00000000000000))*(sj5)*(x503)))+(((sj3)*(x477))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x481)))+(((IkReal(-1.00000000000000))*(cj5)*(x501)))+(((IkReal(-1.00000000000000))*(r01)*(x479)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x483)))+(((sj5)*(x499))));
evalcond[3]=((IkReal(0.190000000000000))+(((cj5)*(x503)))+(x508)+(x506)+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((IkReal(-1.00000000000000))*(x479)*(x485)))+(((IkReal(-1.00000000000000))*(x477)*(x483))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x484)*(x485)))+(((pz)*(r00)*(x479)))+(((sj6)*(x507)))+(((sj6)*(x504)))+(((IkReal(-1.00000000000000))*(px)*(r02)*(x479)))+(((IkReal(-1.00000000000000))*(sj5)*(sj6)*(x503)))+(((IkReal(-1.00000000000000))*(r01)*(x483)*(x488)))+(((px)*(x478)))+(((cj2)*(py)*(x491))));
evalcond[5]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(py)*(r00)*(x483)))+(((IkReal(-1.00000000000000))*(cj5)*(sj6)*(x503)))+(((IkReal(-1.00000000000000))*(cj2)*(x481)*(x485)))+(((px)*(x489)))+(((x481)*(x486)))+(((x478)*(x488)))+(((IkReal(-1.00000000000000))*(x484)*(x492)))+(((IkReal(0.190000000000000))*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(sj6)*(x506)))+(((IkReal(-1.00000000000000))*(sj6)*(x508))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x482)*(x497)))+(((pz)*(x476)*(x478)))+(((IkReal(-0.380000000000000))*(x480)))+(((IkReal(-0.0729194000000000))*(x501)))+(((x497)*(x502)))+(((IkReal(0.0361000000000000))*(r01)*(x479)))+(((IkReal(-1.00000000000000))*(x496)*(x501)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(-1.00000000000000))*(px)*(x494)))+(((x484)*(x500)))+(((r01)*(x479)*(x505)))+(((IkReal(-1.00000000000000))*(r01)*(x479)*(x482)))+(((x476)*(x479)*(x480)))+(((x481)*(x498)))+(((IkReal(0.0361000000000000))*(x481)))+(((IkReal(2.00000000000000))*(cj3)*(x477)*(x480)))+(((px)*(r00)*(x476)*(x479)))+(((x476)*(x477)*(x489)))+(((IkReal(0.0361000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(py)*(x495)))+(((x487)*(x499))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x482)*(x491)))+(((IkReal(-1.00000000000000))*(x488)*(x494)))+(((IkReal(-0.0361000000000000))*(x491)))+(((x491)*(x498)))+(((IkReal(-1.00000000000000))*(cj2)*(x484)*(x502)))+(((x496)*(x499)))+(((cj3)*(r00)*(x500)))+(((x490)*(x493)))+(((IkReal(0.0729194000000000))*(x499)))+(((x487)*(x501)))+(((IkReal(-2.00000000000000))*(sj3)*(x477)*(x480)))+(((IkReal(0.0361000000000000))*(sj2)*(x478)))+(((pp)*(sj2)*(x478)))+(((IkReal(0.0361000000000000))*(cj2)*(x484)))+(((cj2)*(pp)*(x484)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x476)*(x480)))+(((x477)*(x493)))+(((pz)*(x476)*(x489)))+(((IkReal(-1.00000000000000))*(x476)*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(sj2)*(x478)*(x505)))+(((IkReal(-1.00000000000000))*(x476)*(x477)*(x478)))+(((IkReal(-1.00000000000000))*(x492)*(x495))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x509=((cj3)*(sj5));
IkReal x510=((cj2)*(r00));
IkReal x511=((cj3)*(cj5));
IkReal x512=((r01)*(sj2));
IkReal x513=((IkReal(1.00000000000000))*(sj3)*(sj5));
IkReal x514=((IkReal(1.00000000000000))*(cj5)*(sj3));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x510)*(x511)))+(((IkReal(-1.00000000000000))*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(r02)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x513)))+(((r02)*(x509)))+(((IkReal(-1.00000000000000))*(x511)*(x512))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r02)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(x512)*(x514)))+(((r02)*(x511)))+(((IkReal(-1.00000000000000))*(x510)*(x514)))+(((x509)*(x512)))+(((x509)*(x510))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x510)*(x511)))+(((IkReal(-1.00000000000000))*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(r02)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x513)))+(((r02)*(x509)))+(((IkReal(-1.00000000000000))*(x511)*(x512)))))), ((gconst1)*(((((r02)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(x512)*(x514)))+(((r02)*(x511)))+(((IkReal(-1.00000000000000))*(x510)*(x514)))+(((x509)*(x512)))+(((x509)*(x510)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x515=IKsin(j4);
IkReal x516=IKcos(j4);
IkReal x517=(pz)*(pz);
IkReal x518=(px)*(px);
IkReal x519=(py)*(py);
IkReal x520=((IkReal(2.00000000000000))*(py));
IkReal x521=((cj2)*(px));
IkReal x522=((r01)*(sj3));
IkReal x523=((cj3)*(sj2));
IkReal x524=((pz)*(r02));
IkReal x525=((r02)*(sj3));
IkReal x526=((IkReal(1.00000000000000))*(pp));
IkReal x527=((IkReal(1.00000000000000))*(cj3));
IkReal x528=((r00)*(sj3));
IkReal x529=((IkReal(1.00000000000000))*(py));
IkReal x530=((px)*(sj2));
IkReal x531=((IkReal(0.0494802900000000))*(sj5));
IkReal x532=((cj2)*(pz));
IkReal x533=((cj3)*(r01));
IkReal x534=((py)*(sj2));
IkReal x535=((cj3)*(r02));
IkReal x536=((pz)*(sj2));
IkReal x537=((IkReal(0.380000000000000))*(r02));
IkReal x538=((IkReal(0.380000000000000))*(r00));
IkReal x539=((IkReal(0.380000000000000))*(r01));
IkReal x540=((IkReal(0.0881222900000000))*(cj5));
IkReal x541=((cj2)*(cj3)*(r00));
IkReal x542=((IkReal(2.00000000000000))*(x517));
IkReal x543=((cj6)*(x516));
IkReal x544=((IkReal(2.00000000000000))*(px)*(pz));
IkReal x545=((cj6)*(x515));
IkReal x546=((IkReal(2.00000000000000))*(x518));
IkReal x547=((IkReal(0.262300000000000))*(x516));
IkReal x548=((IkReal(0.139000000000000))*(x515));
IkReal x549=((IkReal(2.00000000000000))*(x519));
IkReal x550=((IkReal(0.139000000000000))*(x516));
IkReal x551=((IkReal(0.262300000000000))*(cj5)*(x515));
IkReal x552=((IkReal(0.262300000000000))*(sj5)*(x515));
evalcond[0]=((((cj5)*(x543)))+(((sj2)*(x522)))+(((sj5)*(x545)))+(((IkReal(-1.00000000000000))*(r02)*(x527)))+(((cj2)*(x528))));
evalcond[1]=((((sj3)*(x521)))+(((sj3)*(x534)))+(((IkReal(-1.00000000000000))*(sj5)*(x547)))+(x551)+(x548)+(((IkReal(-1.00000000000000))*(pz)*(x527))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x525)))+(((sj5)*(x543)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x527)))+(((IkReal(-1.00000000000000))*(r01)*(x523)))+(((IkReal(-1.00000000000000))*(cj5)*(x545))));
evalcond[3]=((IkReal(0.190000000000000))+(((cj5)*(x547)))+(((IkReal(-1.00000000000000))*(x523)*(x529)))+(((IkReal(-1.00000000000000))*(x521)*(x527)))+(x552)+(x550)+(((IkReal(-1.00000000000000))*(pz)*(sj3))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj5)*(sj6)*(x547)))+(((pz)*(r00)*(x523)))+(((IkReal(-1.00000000000000))*(x528)*(x529)))+(((px)*(x522)))+(((sj6)*(x548)))+(((IkReal(-1.00000000000000))*(px)*(r02)*(x523)))+(((sj6)*(x551)))+(((cj2)*(py)*(x535)))+(((IkReal(-1.00000000000000))*(r01)*(x527)*(x532))));
evalcond[5]=((((x522)*(x532)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x528)*(x536)))+(((IkReal(-1.00000000000000))*(py)*(r00)*(x527)))+(((IkReal(-1.00000000000000))*(cj2)*(x525)*(x529)))+(((IkReal(-1.00000000000000))*(sj6)*(x550)))+(((IkReal(-1.00000000000000))*(sj6)*(x552)))+(((IkReal(-1.00000000000000))*(cj5)*(sj6)*(x547)))+(((px)*(x533)))+(((x525)*(x530)))+(((IkReal(0.190000000000000))*(r00)*(sj2))));
evalcond[6]=((((IkReal(0.0361000000000000))*(r01)*(x523)))+(((IkReal(-1.00000000000000))*(x526)*(x541)))+(((r01)*(x523)*(x549)))+(((IkReal(-1.00000000000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(r01)*(x523)*(x526)))+(((x541)*(x546)))+(((px)*(r00)*(x520)*(x523)))+(((IkReal(-1.00000000000000))*(x540)*(x545)))+(((IkReal(-1.00000000000000))*(px)*(x538)))+(((x520)*(x521)*(x533)))+(((pz)*(x520)*(x522)))+(((x531)*(x543)))+(((IkReal(-0.0729194000000000))*(x545)))+(((x525)*(x542)))+(((IkReal(-1.00000000000000))*(py)*(x539)))+(((x520)*(x523)*(x524)))+(((IkReal(0.0361000000000000))*(x541)))+(((IkReal(2.00000000000000))*(cj3)*(x521)*(x524)))+(((IkReal(0.0361000000000000))*(x525)))+(((x528)*(x544)))+(((IkReal(-0.380000000000000))*(x524))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x532)*(x538)))+(((IkReal(-2.00000000000000))*(sj3)*(x521)*(x524)))+(((IkReal(-1.00000000000000))*(x526)*(x535)))+(((IkReal(-1.00000000000000))*(sj2)*(x522)*(x549)))+(((IkReal(-1.00000000000000))*(cj2)*(x528)*(x546)))+(((IkReal(-1.00000000000000))*(x520)*(x528)*(x530)))+(((IkReal(0.0729194000000000))*(x543)))+(((x540)*(x543)))+(((pz)*(x520)*(x533)))+(((x531)*(x545)))+(((cj2)*(pp)*(x528)))+(((cj3)*(r00)*(x544)))+(((IkReal(-1.00000000000000))*(x520)*(x521)*(x522)))+(((x521)*(x537)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x520)*(x524)))+(((x534)*(x537)))+(((x535)*(x542)))+(((IkReal(0.0361000000000000))*(sj2)*(x522)))+(((IkReal(-0.0361000000000000))*(x535)))+(((pp)*(sj2)*(x522)))+(((IkReal(-1.00000000000000))*(x536)*(x539)))+(((IkReal(0.0361000000000000))*(cj2)*(x528))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x553=((IkReal(1000.00000000000))*(pz));
IkReal x554=((cj2)*(r00));
IkReal x555=((IkReal(1000.00000000000))*(px));
IkReal x556=((IkReal(190.000000000000))*(cj3));
IkReal x557=((IkReal(1000.00000000000))*(py));
IkReal x558=((IkReal(190.000000000000))*(sj3));
IkReal x559=((r01)*(sj2));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x556)*(x559)))+(((IkReal(-1.00000000000000))*(x554)*(x556)))+(((r02)*(x553)))+(((IkReal(-1.00000000000000))*(r02)*(x558)))+(((r01)*(x557)))+(((r00)*(x555))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r02)*(sj2)*(x557)))+(((IkReal(-1.00000000000000))*(r02)*(x556)))+(((IkReal(-262.300000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x553)*(x559)))+(((IkReal(-1.00000000000000))*(x553)*(x554)))+(((x554)*(x558)))+(((x558)*(x559)))+(((cj2)*(r02)*(x555))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(x556)*(x559)))+(((IkReal(-1.00000000000000))*(x554)*(x556)))+(((r02)*(x553)))+(((IkReal(-1.00000000000000))*(r02)*(x558)))+(((r01)*(x557)))+(((r00)*(x555)))))), ((gconst0)*(((((r02)*(sj2)*(x557)))+(((IkReal(-1.00000000000000))*(r02)*(x556)))+(((IkReal(-262.300000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x553)*(x559)))+(((IkReal(-1.00000000000000))*(x553)*(x554)))+(((x554)*(x558)))+(((x558)*(x559)))+(((cj2)*(r02)*(x555)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x560=IKcos(j5);
IkReal x561=((cj2)*(r00));
IkReal x562=((IkReal(0.190000000000000))*(sj3));
IkReal x563=((IkReal(2.00000000000000))*(py));
IkReal x564=((r00)*(sj2));
IkReal x565=((IkReal(0.380000000000000))*(py));
IkReal x566=((r02)*(sj3));
IkReal x567=((r01)*(sj2));
IkReal x568=((r02)*(sj2));
IkReal x569=((IkReal(0.380000000000000))*(px));
IkReal x570=((IkReal(0.139000000000000))*(cj6));
IkReal x571=((cj2)*(pz));
IkReal x572=((IkReal(1.00000000000000))*(pp));
IkReal x573=((cj2)*(r01));
IkReal x574=((IkReal(0.380000000000000))*(sj3));
IkReal x575=((IkReal(0.190000000000000))*(cj3));
IkReal x576=((IkReal(1.00000000000000))*(pz));
IkReal x577=((IkReal(0.0729194000000000))*(x560));
evalcond[0]=((IkReal(0.0520222900000000))+(((cj2)*(cj3)*(x569)))+(((pz)*(x574)))+(((cj3)*(sj2)*(x565)))+(((IkReal(-1.00000000000000))*(x572)))+(x577));
evalcond[1]=((((x561)*(x575)))+(((x567)*(x575)))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((IkReal(-1.00000000000000))*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r02)*(x576)))+(((x570)*(IKsin(j5))))+(((r02)*(x562))));
evalcond[2]=((((IkReal(-0.262300000000000))*(cj6)))+(((cj2)*(px)*(r02)))+(((x562)*(x567)))+(((IkReal(-1.00000000000000))*(x561)*(x576)))+(((x561)*(x562)))+(((IkReal(-1.00000000000000))*(x560)*(x570)))+(((IkReal(-1.00000000000000))*(x567)*(x576)))+(((py)*(x568)))+(((IkReal(-1.00000000000000))*(r02)*(x575))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x571)*(x574)))+(((IkReal(-1.00000000000000))*(sj2)*(x566)*(x569)))+(((IkReal(0.0361000000000000))*(x573)))+(((IkReal(-1.00000000000000))*(py)*(x563)*(x573)))+(((pz)*(x564)*(x574)))+(((IkReal(-1.00000000000000))*(sj6)*(x577)))+(((IkReal(-1.00000000000000))*(px)*(x561)*(x563)))+(((cj3)*(r00)*(x565)))+(((IkReal(2.00000000000000))*(px)*(pz)*(x568)))+(((IkReal(-0.0361000000000000))*(x564)))+(((IkReal(-1.00000000000000))*(r02)*(x563)*(x571)))+(((IkReal(-1.00000000000000))*(x564)*(x572)))+(((px)*(x563)*(x567)))+(((IkReal(-0.0881222900000000))*(sj6)))+(((IkReal(2.00000000000000))*(x564)*((px)*(px))))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(x569)))+(((cj2)*(x565)*(x566)))+(((pp)*(x573))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x578=((IkReal(2623.00000000000))*(cj6));
gconst2=IKsign(((((x578)*((sj5)*(sj5))))+(((x578)*((cj5)*(cj5))))+(((IkReal(1390.00000000000))*(cj5)*(cj6)))));
IkReal x579=((IkReal(1.88705035971223))*(cj6));
dummyeval[0]=((((x579)*((sj5)*(sj5))))+(((x579)*((cj5)*(cj5))))+(((cj5)*(cj6))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x580=((IkReal(0.0729194000000000))*(cj5));
IkReal x581=(px)*(px);
IkReal x582=(py)*(py);
IkReal x583=(pz)*(pz);
IkReal x584=((cj2)*(r00));
IkReal x585=((IkReal(0.190000000000000))*(sj3));
IkReal x586=((IkReal(0.380000000000000))*(py));
IkReal x587=((pp)*(sj3));
IkReal x588=((r01)*(sj2));
IkReal x589=((IkReal(2.00000000000000))*(r02));
IkReal x590=((cj3)*(sj2));
IkReal x591=((py)*(pz));
IkReal x592=((IkReal(0.0361000000000000))*(cj3));
IkReal x593=((IkReal(1.00000000000000))*(r02));
IkReal x594=((IkReal(0.380000000000000))*(pz));
IkReal x595=((r00)*(sj2));
IkReal x596=((IkReal(0.0361000000000000))*(sj3));
IkReal x597=((IkReal(1.00000000000000))*(cj3));
IkReal x598=((IkReal(1.00000000000000))*(pp));
IkReal x599=((r02)*(sj2));
IkReal x600=((cj2)*(r01));
IkReal x601=((IkReal(0.380000000000000))*(px));
IkReal x602=((IkReal(2.00000000000000))*(r01));
IkReal x603=((px)*(sj2));
IkReal x604=((cj2)*(r02));
IkReal x605=((IkReal(0.190000000000000))*(cj3));
IkReal x606=((IkReal(1.00000000000000))*(pz));
IkReal x607=((IkReal(2.00000000000000))*(px)*(py));
IkReal x608=((cj3)*(x601));
IkReal x609=((IkReal(2.00000000000000))*(x581));
IkReal x610=((IkReal(2.00000000000000))*(x582));
IkReal x611=((cj2)*(px)*(pz));
IkReal x612=((IkReal(2.00000000000000))*(px)*(pz)*(r00));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x603)))+(((cj2)*(py))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x595)))+(x600));
evalcond[3]=((IkReal(0.0520222900000000))+(((cj2)*(x608)))+(((IkReal(-1.00000000000000))*(x598)))+(x580)+(((sj3)*(x594)))+(((x586)*(x590))));
evalcond[4]=((((sj3)*(x584)))+(((sj3)*(x588)))+(((IkReal(-1.00000000000000))*(cj3)*(x593))));
evalcond[5]=((((x584)*(x605)))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((r02)*(x585)))+(((IkReal(-1.00000000000000))*(pz)*(x593)))+(((x588)*(x605)))+(((IkReal(-1.00000000000000))*(py)*(r01))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x588)*(x597)))+(((IkReal(-1.00000000000000))*(sj3)*(x593)))+(((IkReal(-1.00000000000000))*(x584)*(x597))));
evalcond[7]=((((x584)*(x585)))+(((py)*(x599)))+(((px)*(x604)))+(((IkReal(-1.00000000000000))*(x588)*(x606)))+(((x585)*(x588)))+(((IkReal(-1.00000000000000))*(r02)*(x605)))+(((IkReal(-1.00000000000000))*(x584)*(x606))));
evalcond[8]=((IkReal(-0.0881222900000000))+(((pp)*(x600)))+(((IkReal(-1.00000000000000))*(r01)*(x608)))+(((IkReal(-1.00000000000000))*(cj2)*(x589)*(x591)))+(((sj3)*(x594)*(x595)))+(((cj3)*(r00)*(x586)))+(((x595)*(x609)))+(((IkReal(-0.0361000000000000))*(x595)))+(((sj3)*(x586)*(x604)))+(((pz)*(x589)*(x603)))+(((x588)*(x607)))+(((IkReal(-1.00000000000000))*(x595)*(x598)))+(((IkReal(-1.00000000000000))*(sj3)*(x594)*(x600)))+(((IkReal(-1.00000000000000))*(x600)*(x610)))+(((IkReal(-1.00000000000000))*(sj3)*(x599)*(x601)))+(((IkReal(-1.00000000000000))*(x580)))+(((IkReal(-1.00000000000000))*(x584)*(x607)))+(((IkReal(0.0361000000000000))*(x600))));
evalcond[9]=((((sj3)*(x583)*(x589)))+(((IkReal(-1.00000000000000))*(pp)*(x588)*(x597)))+(((cj3)*(x589)*(x611)))+(((sj3)*(x591)*(x602)))+(((IkReal(-1.00000000000000))*(r00)*(x601)))+(((r00)*(x590)*(x607)))+(((IkReal(-1.00000000000000))*(x587)*(x593)))+(((cj3)*(x600)*(x607)))+(((x589)*(x590)*(x591)))+(((IkReal(-1.00000000000000))*(pp)*(x584)*(x597)))+(((r02)*(x596)))+(((x584)*(x592)))+(((IkReal(-1.00000000000000))*(r02)*(x594)))+(((cj3)*(x588)*(x610)))+(((sj3)*(x612)))+(((IkReal(-1.00000000000000))*(r01)*(x586)))+(((cj3)*(x584)*(x609)))+(((x588)*(x592))));
evalcond[10]=((((x584)*(x587)))+(((IkReal(-1.00000000000000))*(sj3)*(x595)*(x607)))+(((IkReal(-1.00000000000000))*(x588)*(x594)))+(((x601)*(x604)))+(((cj3)*(x612)))+(((cj3)*(x591)*(x602)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x593)))+(((cj3)*(x583)*(x589)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(sj3)*(x588)*(x610)))+(((IkReal(-1.00000000000000))*(x584)*(x594)))+(((x584)*(x596)))+(((IkReal(-1.00000000000000))*(r02)*(x592)))+(((IkReal(-1.00000000000000))*(sj3)*(x584)*(x609)))+(((IkReal(-1.00000000000000))*(sj3)*(x589)*(x611)))+(((x588)*(x596)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x589)*(x591)))+(((x586)*(x599)))+(((IkReal(-1.00000000000000))*(sj3)*(x600)*(x607))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x613=((IkReal(26230000.0000000))*(cj5));
IkReal x614=((cj2)*(cj3));
IkReal x615=((pz)*(r01));
IkReal x616=((py)*(r02));
IkReal x617=((IkReal(26230000.0000000))*(sj5));
IkReal x618=((pz)*(sj3));
IkReal x619=((cj3)*(sj2));
IkReal x620=((px)*(r02));
IkReal x621=((IkReal(13900000.0000000))*(px));
IkReal x622=((r01)*(sj3));
IkReal x623=((py)*(r00)*(sj3));
IkReal x624=((pz)*(r00)*(x619));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x613)*(x619)*(x620)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x623)))+(((IkReal(-13900000.0000000))*(x619)*(x620)))+(((IkReal(13900000.0000000))*(x614)*(x616)))+(((x613)*(x624)))+(((x613)*(x614)*(x616)))+(((IkReal(-1.00000000000000))*(py)*(x617)*(x619)))+(((IkReal(-13900000.0000000))*(x614)*(x615)))+(((IkReal(-1.00000000000000))*(x617)*(x618)))+(((IkReal(-1.00000000000000))*(x613)*(x614)*(x615)))+(((px)*(x613)*(x622)))+(((x621)*(x622)))+(((IkReal(-1.00000000000000))*(px)*(x614)*(x617)))+(((IkReal(-1.00000000000000))*(x613)*(x623)))+(((IkReal(13900000.0000000))*(x624))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((x617)*(x623)))+(((IkReal(-13900000.0000000))*(py)*(x619)))+(((x617)*(x619)*(x620)))+(((x614)*(x615)*(x617)))+(((IkReal(-1.00000000000000))*(x614)*(x616)*(x617)))+(((IkReal(-1.00000000000000))*(x617)*(x624)))+(((IkReal(-13900000.0000000))*(x618)))+(((IkReal(-1.00000000000000))*(py)*(x613)*(x619)))+(((IkReal(-1.00000000000000))*(x614)*(x621)))+(((IkReal(-1.00000000000000))*(x613)*(x618)))+(((IkReal(-1.00000000000000))*(px)*(x613)*(x614)))+(((IkReal(-1.00000000000000))*(px)*(x617)*(x622))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x613)*(x619)*(x620)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-13900000.0000000))*(x623)))+(((IkReal(-13900000.0000000))*(x619)*(x620)))+(((IkReal(13900000.0000000))*(x614)*(x616)))+(((x613)*(x624)))+(((x613)*(x614)*(x616)))+(((IkReal(-1.00000000000000))*(py)*(x617)*(x619)))+(((IkReal(-13900000.0000000))*(x614)*(x615)))+(((IkReal(-1.00000000000000))*(x617)*(x618)))+(((IkReal(-1.00000000000000))*(x613)*(x614)*(x615)))+(((px)*(x613)*(x622)))+(((x621)*(x622)))+(((IkReal(-1.00000000000000))*(px)*(x614)*(x617)))+(((IkReal(-1.00000000000000))*(x613)*(x623)))+(((IkReal(13900000.0000000))*(x624)))))), ((gconst4)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((x617)*(x623)))+(((IkReal(-13900000.0000000))*(py)*(x619)))+(((x617)*(x619)*(x620)))+(((x614)*(x615)*(x617)))+(((IkReal(-1.00000000000000))*(x614)*(x616)*(x617)))+(((IkReal(-1.00000000000000))*(x617)*(x624)))+(((IkReal(-13900000.0000000))*(x618)))+(((IkReal(-1.00000000000000))*(py)*(x613)*(x619)))+(((IkReal(-1.00000000000000))*(x614)*(x621)))+(((IkReal(-1.00000000000000))*(x613)*(x618)))+(((IkReal(-1.00000000000000))*(px)*(x613)*(x614)))+(((IkReal(-1.00000000000000))*(px)*(x617)*(x622)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x625=IKsin(j4);
IkReal x626=IKcos(j4);
IkReal x627=((pz)*(r01));
IkReal x628=((cj3)*(py));
IkReal x629=((cj2)*(r02));
IkReal x630=((px)*(sj3));
IkReal x631=((IkReal(1.00000000000000))*(r00));
IkReal x632=((sj2)*(sj3));
IkReal x633=((IkReal(1.00000000000000))*(sj2));
IkReal x634=((cj3)*(px));
IkReal x635=((cj3)*(pz));
IkReal x636=((r00)*(sj2));
IkReal x637=((py)*(sj3));
IkReal x638=((IkReal(0.139000000000000))*(x625));
IkReal x639=((IkReal(0.139000000000000))*(x626));
IkReal x640=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x641=((IkReal(0.262300000000000))*(x625));
IkReal x642=((IkReal(0.262300000000000))*(x626));
IkReal x643=((cj5)*(x641));
IkReal x644=((sj5)*(x642));
IkReal x645=((sj5)*(x641));
IkReal x646=((cj5)*(x642));
IkReal x647=((x643)+(x638));
IkReal x648=((x646)+(x645)+(x639));
evalcond[0]=((((py)*(x632)))+(((IkReal(-1.00000000000000))*(x644)))+(x647)+(((IkReal(-1.00000000000000))*(x635)))+(((cj2)*(x630))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x634)))+(((IkReal(-1.00000000000000))*(x628)*(x633)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(x648));
evalcond[2]=((((IkReal(-1.00000000000000))*(x631)*(x637)))+(((IkReal(-1.00000000000000))*(x627)*(x640)))+(((x628)*(x629)))+(((x635)*(x636)))+(((IkReal(-1.00000000000000))*(r02)*(x633)*(x634)))+(((IkReal(-1.00000000000000))*(x644)))+(((r01)*(x630)))+(x647));
evalcond[3]=((((cj2)*(sj3)*(x627)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x628)*(x631)))+(((IkReal(-1.00000000000000))*(x629)*(x637)))+(((IkReal(-1.00000000000000))*(pz)*(x631)*(x632)))+(((IkReal(0.190000000000000))*(x636)))+(((IkReal(-1.00000000000000))*(x648)))+(((r01)*(x634)))+(((r02)*(sj2)*(x630))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x649=((IkReal(26230000.0000000))*(cj5));
IkReal x650=((py)*(sj2));
IkReal x651=((cj2)*(px));
IkReal x652=((pz)*(sj3));
IkReal x653=((IkReal(26230000.0000000))*(sj5));
IkReal x654=((IkReal(13900000.0000000))*(cj3));
IkReal x655=((cj3)*(pz));
IkReal x656=((IkReal(13900000.0000000))*(sj3));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj3)*(x651)*(x653)))+(((IkReal(4983700.00000000))*(sj5)))+(((sj3)*(x649)*(x651)))+(((sj3)*(x649)*(x650)))+(((IkReal(-1.00000000000000))*(cj3)*(x650)*(x653)))+(((x651)*(x656)))+(((IkReal(-1.00000000000000))*(pz)*(x654)))+(((IkReal(-1.00000000000000))*(x649)*(x655)))+(((x650)*(x656)))+(((IkReal(-1.00000000000000))*(x652)*(x653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x651)*(x654)))+(((IkReal(-1.00000000000000))*(sj3)*(x651)*(x653)))+(((IkReal(-1.00000000000000))*(cj3)*(x649)*(x650)))+(((IkReal(-1.00000000000000))*(cj3)*(x649)*(x651)))+(((x653)*(x655)))+(((IkReal(-1.00000000000000))*(x650)*(x654)))+(((IkReal(-1.00000000000000))*(x649)*(x652)))+(((IkReal(-1.00000000000000))*(sj3)*(x650)*(x653)))+(((IkReal(-13900000.0000000))*(x652))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(cj3)*(x651)*(x653)))+(((IkReal(4983700.00000000))*(sj5)))+(((sj3)*(x649)*(x651)))+(((sj3)*(x649)*(x650)))+(((IkReal(-1.00000000000000))*(cj3)*(x650)*(x653)))+(((x651)*(x656)))+(((IkReal(-1.00000000000000))*(pz)*(x654)))+(((IkReal(-1.00000000000000))*(x649)*(x655)))+(((x650)*(x656)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))))), ((gconst3)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x651)*(x654)))+(((IkReal(-1.00000000000000))*(sj3)*(x651)*(x653)))+(((IkReal(-1.00000000000000))*(cj3)*(x649)*(x650)))+(((IkReal(-1.00000000000000))*(cj3)*(x649)*(x651)))+(((x653)*(x655)))+(((IkReal(-1.00000000000000))*(x650)*(x654)))+(((IkReal(-1.00000000000000))*(x649)*(x652)))+(((IkReal(-1.00000000000000))*(sj3)*(x650)*(x653)))+(((IkReal(-13900000.0000000))*(x652)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x657=IKsin(j4);
IkReal x658=IKcos(j4);
IkReal x659=((pz)*(r01));
IkReal x660=((cj3)*(py));
IkReal x661=((cj2)*(r02));
IkReal x662=((px)*(sj3));
IkReal x663=((IkReal(1.00000000000000))*(r00));
IkReal x664=((sj2)*(sj3));
IkReal x665=((IkReal(1.00000000000000))*(sj2));
IkReal x666=((cj3)*(px));
IkReal x667=((cj3)*(pz));
IkReal x668=((r00)*(sj2));
IkReal x669=((py)*(sj3));
IkReal x670=((IkReal(0.139000000000000))*(x657));
IkReal x671=((IkReal(0.139000000000000))*(x658));
IkReal x672=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x673=((IkReal(0.262300000000000))*(x657));
IkReal x674=((IkReal(0.262300000000000))*(x658));
IkReal x675=((cj5)*(x673));
IkReal x676=((sj5)*(x674));
IkReal x677=((sj5)*(x673));
IkReal x678=((cj5)*(x674));
IkReal x679=((x670)+(x675));
IkReal x680=((x678)+(x671)+(x677));
evalcond[0]=((((cj2)*(x662)))+(((IkReal(-1.00000000000000))*(x667)))+(((py)*(x664)))+(x679)+(((IkReal(-1.00000000000000))*(x676))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x660)*(x665)))+(((IkReal(-1.00000000000000))*(cj2)*(x666)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(x680));
evalcond[2]=((((r01)*(x662)))+(((x667)*(x668)))+(((IkReal(-1.00000000000000))*(x663)*(x669)))+(((IkReal(-1.00000000000000))*(x659)*(x672)))+(((IkReal(-1.00000000000000))*(r02)*(x665)*(x666)))+(((x660)*(x661)))+(x679)+(((IkReal(-1.00000000000000))*(x676))));
evalcond[3]=((((r01)*(x666)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x680)))+(((cj2)*(sj3)*(x659)))+(((IkReal(-1.00000000000000))*(x660)*(x663)))+(((IkReal(0.190000000000000))*(x668)))+(((IkReal(-1.00000000000000))*(x661)*(x669)))+(((IkReal(-1.00000000000000))*(pz)*(x663)*(x664)))+(((r02)*(sj2)*(x662))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x681=((IkReal(0.0729194000000000))*(cj5));
IkReal x682=(px)*(px);
IkReal x683=(py)*(py);
IkReal x684=(pz)*(pz);
IkReal x685=((cj2)*(r00));
IkReal x686=((IkReal(0.190000000000000))*(sj3));
IkReal x687=((IkReal(0.380000000000000))*(py));
IkReal x688=((pp)*(sj3));
IkReal x689=((r01)*(sj2));
IkReal x690=((IkReal(2.00000000000000))*(r02));
IkReal x691=((cj3)*(sj2));
IkReal x692=((py)*(pz));
IkReal x693=((IkReal(0.0361000000000000))*(cj3));
IkReal x694=((IkReal(1.00000000000000))*(r02));
IkReal x695=((IkReal(0.380000000000000))*(pz));
IkReal x696=((r00)*(sj2));
IkReal x697=((IkReal(0.0361000000000000))*(sj3));
IkReal x698=((IkReal(1.00000000000000))*(cj3));
IkReal x699=((IkReal(1.00000000000000))*(pp));
IkReal x700=((r02)*(sj2));
IkReal x701=((cj2)*(r01));
IkReal x702=((IkReal(0.380000000000000))*(px));
IkReal x703=((IkReal(2.00000000000000))*(r01));
IkReal x704=((px)*(sj2));
IkReal x705=((cj2)*(r02));
IkReal x706=((IkReal(0.190000000000000))*(cj3));
IkReal x707=((IkReal(1.00000000000000))*(pz));
IkReal x708=((IkReal(2.00000000000000))*(px)*(py));
IkReal x709=((cj3)*(x702));
IkReal x710=((IkReal(2.00000000000000))*(x682));
IkReal x711=((IkReal(2.00000000000000))*(x683));
IkReal x712=((cj2)*(px)*(pz));
IkReal x713=((IkReal(2.00000000000000))*(px)*(pz)*(r00));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x704)))+(((cj2)*(py))));
evalcond[2]=((IkReal(1.00000000000000))+(x701)+(((IkReal(-1.00000000000000))*(x696))));
evalcond[3]=((IkReal(0.0520222900000000))+(((x687)*(x691)))+(x681)+(((IkReal(-1.00000000000000))*(x699)))+(((sj3)*(x695)))+(((cj2)*(x709))));
evalcond[4]=((((sj3)*(x689)))+(((sj3)*(x685)))+(((IkReal(-1.00000000000000))*(cj3)*(x694))));
evalcond[5]=((((x685)*(x706)))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((x689)*(x706)))+(((IkReal(-1.00000000000000))*(pz)*(x694)))+(((IkReal(-1.00000000000000))*(py)*(r01)))+(((r02)*(x686))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x694)))+(((IkReal(-1.00000000000000))*(x685)*(x698)))+(((IkReal(-1.00000000000000))*(x689)*(x698))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x689)*(x707)))+(((IkReal(-1.00000000000000))*(r02)*(x706)))+(((x686)*(x689)))+(((x685)*(x686)))+(((IkReal(-1.00000000000000))*(x685)*(x707)))+(((px)*(x705)))+(((py)*(x700))));
evalcond[8]=((IkReal(0.0881222900000000))+(((cj3)*(r00)*(x687)))+(((IkReal(-1.00000000000000))*(x696)*(x699)))+(((x689)*(x708)))+(((IkReal(-0.0361000000000000))*(x696)))+(((IkReal(-1.00000000000000))*(x685)*(x708)))+(((pp)*(x701)))+(((x696)*(x710)))+(((IkReal(-1.00000000000000))*(sj3)*(x700)*(x702)))+(x681)+(((sj3)*(x687)*(x705)))+(((IkReal(-1.00000000000000))*(cj2)*(x690)*(x692)))+(((IkReal(-1.00000000000000))*(r01)*(x709)))+(((sj3)*(x695)*(x696)))+(((IkReal(-1.00000000000000))*(sj3)*(x695)*(x701)))+(((IkReal(-1.00000000000000))*(x701)*(x711)))+(((pz)*(x690)*(x704)))+(((IkReal(0.0361000000000000))*(x701))));
evalcond[9]=((((cj3)*(x689)*(x711)))+(((IkReal(-1.00000000000000))*(pp)*(x689)*(x698)))+(((sj3)*(x684)*(x690)))+(((cj3)*(x690)*(x712)))+(((x689)*(x693)))+(((r02)*(x697)))+(((IkReal(-1.00000000000000))*(r01)*(x687)))+(((r00)*(x691)*(x708)))+(((sj3)*(x692)*(x703)))+(((IkReal(-1.00000000000000))*(x688)*(x694)))+(((sj3)*(x713)))+(((IkReal(-1.00000000000000))*(r02)*(x695)))+(((x690)*(x691)*(x692)))+(((cj3)*(x701)*(x708)))+(((x685)*(x693)))+(((IkReal(-1.00000000000000))*(r00)*(x702)))+(((cj3)*(x685)*(x710)))+(((IkReal(-1.00000000000000))*(pp)*(x685)*(x698))));
evalcond[10]=((((x688)*(x689)))+(((x702)*(x705)))+(((x685)*(x688)))+(((cj3)*(x692)*(x703)))+(((x689)*(x697)))+(((IkReal(-1.00000000000000))*(sj3)*(x701)*(x708)))+(((IkReal(-1.00000000000000))*(sj3)*(x685)*(x710)))+(((IkReal(-1.00000000000000))*(sj3)*(x690)*(x712)))+(((IkReal(-1.00000000000000))*(x685)*(x695)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x690)*(x692)))+(((IkReal(-1.00000000000000))*(sj3)*(x696)*(x708)))+(((IkReal(-1.00000000000000))*(cj3)*(pp)*(x694)))+(((IkReal(-1.00000000000000))*(r02)*(x693)))+(((IkReal(-1.00000000000000))*(x689)*(x695)))+(((cj3)*(x713)))+(((x687)*(x700)))+(((x685)*(x697)))+(((cj3)*(x684)*(x690)))+(((IkReal(-1.00000000000000))*(sj3)*(x689)*(x711))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(-1932100.00000000))+(((IkReal(-6880129.00000000))*((cj5)*(cj5))))+(((IkReal(-6880129.00000000))*((sj5)*(sj5))))+(((IkReal(-7291940.00000000))*(cj5)))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-3.77410071942446))*(cj5)))+(((IkReal(-3.56095906009006))*((sj5)*(sj5))))+(((IkReal(-3.56095906009006))*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x714=((IkReal(26230000.0000000))*(cj5));
IkReal x715=((cj2)*(cj3));
IkReal x716=((pz)*(r01));
IkReal x717=((py)*(r02));
IkReal x718=((IkReal(26230000.0000000))*(sj5));
IkReal x719=((cj3)*(sj2));
IkReal x720=((px)*(r02));
IkReal x721=((pz)*(sj3));
IkReal x722=((IkReal(13900000.0000000))*(px));
IkReal x723=((r01)*(sj3));
IkReal x724=((py)*(r00)*(sj3));
IkReal x725=((pz)*(r00)*(x719));
if( IKabs(((gconst6)*(((((IkReal(-13900000.0000000))*(x715)*(x717)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(13900000.0000000))*(x715)*(x716)))+(((IkReal(-1.00000000000000))*(x714)*(x715)*(x717)))+(((IkReal(-13900000.0000000))*(x725)))+(((IkReal(-1.00000000000000))*(x722)*(x723)))+(((IkReal(13900000.0000000))*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(px)*(x715)*(x718)))+(((x714)*(x715)*(x716)))+(((IkReal(13900000.0000000))*(x724)))+(((IkReal(-1.00000000000000))*(py)*(x718)*(x719)))+(((IkReal(-1.00000000000000))*(x714)*(x725)))+(((IkReal(-1.00000000000000))*(px)*(x714)*(x723)))+(((IkReal(-1.00000000000000))*(x718)*(x721)))+(((x714)*(x719)*(x720)))+(((x714)*(x724))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(py)*(x714)*(x719)))+(((IkReal(4983700.00000000))*(cj5)))+(((px)*(x718)*(x723)))+(((IkReal(-1.00000000000000))*(x718)*(x719)*(x720)))+(((IkReal(-13900000.0000000))*(x721)))+(((IkReal(-1.00000000000000))*(px)*(x714)*(x715)))+(((IkReal(-1.00000000000000))*(x715)*(x716)*(x718)))+(((IkReal(-13900000.0000000))*(py)*(x719)))+(((x718)*(x725)))+(((IkReal(-1.00000000000000))*(x714)*(x721)))+(((IkReal(-1.00000000000000))*(x715)*(x722)))+(((IkReal(-1.00000000000000))*(x718)*(x724)))+(((x715)*(x717)*(x718))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((IkReal(-13900000.0000000))*(x715)*(x717)))+(((IkReal(4983700.00000000))*(sj5)))+(((IkReal(13900000.0000000))*(x715)*(x716)))+(((IkReal(-1.00000000000000))*(x714)*(x715)*(x717)))+(((IkReal(-13900000.0000000))*(x725)))+(((IkReal(-1.00000000000000))*(x722)*(x723)))+(((IkReal(13900000.0000000))*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(px)*(x715)*(x718)))+(((x714)*(x715)*(x716)))+(((IkReal(13900000.0000000))*(x724)))+(((IkReal(-1.00000000000000))*(py)*(x718)*(x719)))+(((IkReal(-1.00000000000000))*(x714)*(x725)))+(((IkReal(-1.00000000000000))*(px)*(x714)*(x723)))+(((IkReal(-1.00000000000000))*(x718)*(x721)))+(((x714)*(x719)*(x720)))+(((x714)*(x724)))))), ((gconst6)*(((IkReal(2641000.00000000))+(((IkReal(-1.00000000000000))*(py)*(x714)*(x719)))+(((IkReal(4983700.00000000))*(cj5)))+(((px)*(x718)*(x723)))+(((IkReal(-1.00000000000000))*(x718)*(x719)*(x720)))+(((IkReal(-13900000.0000000))*(x721)))+(((IkReal(-1.00000000000000))*(px)*(x714)*(x715)))+(((IkReal(-1.00000000000000))*(x715)*(x716)*(x718)))+(((IkReal(-13900000.0000000))*(py)*(x719)))+(((x718)*(x725)))+(((IkReal(-1.00000000000000))*(x714)*(x721)))+(((IkReal(-1.00000000000000))*(x715)*(x722)))+(((IkReal(-1.00000000000000))*(x718)*(x724)))+(((x715)*(x717)*(x718)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x726=IKsin(j4);
IkReal x727=IKcos(j4);
IkReal x728=((pz)*(r01));
IkReal x729=((cj3)*(py));
IkReal x730=((cj2)*(r02));
IkReal x731=((px)*(sj3));
IkReal x732=((IkReal(1.00000000000000))*(r00));
IkReal x733=((sj2)*(sj3));
IkReal x734=((IkReal(1.00000000000000))*(sj2));
IkReal x735=((cj3)*(px));
IkReal x736=((cj3)*(pz));
IkReal x737=((r00)*(sj2));
IkReal x738=((py)*(sj3));
IkReal x739=((IkReal(0.139000000000000))*(x726));
IkReal x740=((IkReal(0.139000000000000))*(x727));
IkReal x741=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x742=((IkReal(0.262300000000000))*(x726));
IkReal x743=((IkReal(0.262300000000000))*(x727));
IkReal x744=((sj5)*(x743));
IkReal x745=((cj5)*(x742));
IkReal x746=((sj5)*(x742));
IkReal x747=((cj5)*(x743));
IkReal x748=((x739)+(x745));
IkReal x749=((x746)+(x747)+(x740));
evalcond[0]=((((IkReal(-1.00000000000000))*(x736)))+(((cj2)*(x731)))+(((py)*(x733)))+(x748)+(((IkReal(-1.00000000000000))*(x744))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x735)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(x749)+(((IkReal(-1.00000000000000))*(x729)*(x734))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x732)*(x738)))+(((IkReal(-1.00000000000000))*(x728)*(x741)))+(((x736)*(x737)))+(((x729)*(x730)))+(((IkReal(-1.00000000000000))*(r02)*(x734)*(x735)))+(((r01)*(x731)))+(x744)+(((IkReal(-1.00000000000000))*(x748))));
evalcond[3]=((((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(x730)*(x738)))+(((IkReal(-1.00000000000000))*(pz)*(x732)*(x733)))+(((IkReal(0.190000000000000))*(x737)))+(((r02)*(sj2)*(x731)))+(((r01)*(x735)))+(((cj2)*(sj3)*(x728)))+(x749)+(((IkReal(-1.00000000000000))*(x729)*(x732))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x750=((IkReal(26230000.0000000))*(cj5));
IkReal x751=((py)*(sj2));
IkReal x752=((cj2)*(px));
IkReal x753=((pz)*(sj3));
IkReal x754=((IkReal(26230000.0000000))*(sj5));
IkReal x755=((IkReal(13900000.0000000))*(cj3));
IkReal x756=((cj3)*(pz));
IkReal x757=((IkReal(13900000.0000000))*(sj3));
if( IKabs(((gconst5)*(((((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x750)*(x756)))+(((x752)*(x757)))+(((x751)*(x757)))+(((IkReal(-1.00000000000000))*(x753)*(x754)))+(((sj3)*(x750)*(x751)))+(((sj3)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(cj3)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(pz)*(x755)))+(((IkReal(-1.00000000000000))*(cj3)*(x751)*(x754))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x750)*(x753)))+(((IkReal(-13900000.0000000))*(x753)))+(((IkReal(-1.00000000000000))*(cj3)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(cj3)*(x750)*(x751)))+(((IkReal(-1.00000000000000))*(sj3)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(sj3)*(x751)*(x754)))+(((IkReal(-1.00000000000000))*(x751)*(x755)))+(((IkReal(-1.00000000000000))*(x752)*(x755)))+(((x754)*(x756))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(4983700.00000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x750)*(x756)))+(((x752)*(x757)))+(((x751)*(x757)))+(((IkReal(-1.00000000000000))*(x753)*(x754)))+(((sj3)*(x750)*(x751)))+(((sj3)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(cj3)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(pz)*(x755)))+(((IkReal(-1.00000000000000))*(cj3)*(x751)*(x754)))))), ((gconst5)*(((IkReal(2641000.00000000))+(((IkReal(4983700.00000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x750)*(x753)))+(((IkReal(-13900000.0000000))*(x753)))+(((IkReal(-1.00000000000000))*(cj3)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(cj3)*(x750)*(x751)))+(((IkReal(-1.00000000000000))*(sj3)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(sj3)*(x751)*(x754)))+(((IkReal(-1.00000000000000))*(x751)*(x755)))+(((IkReal(-1.00000000000000))*(x752)*(x755)))+(((x754)*(x756)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x758=IKsin(j4);
IkReal x759=IKcos(j4);
IkReal x760=((pz)*(r01));
IkReal x761=((cj3)*(py));
IkReal x762=((cj2)*(r02));
IkReal x763=((px)*(sj3));
IkReal x764=((IkReal(1.00000000000000))*(r00));
IkReal x765=((sj2)*(sj3));
IkReal x766=((IkReal(1.00000000000000))*(sj2));
IkReal x767=((cj3)*(px));
IkReal x768=((cj3)*(pz));
IkReal x769=((r00)*(sj2));
IkReal x770=((py)*(sj3));
IkReal x771=((IkReal(0.139000000000000))*(x758));
IkReal x772=((IkReal(0.139000000000000))*(x759));
IkReal x773=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x774=((IkReal(0.262300000000000))*(x758));
IkReal x775=((IkReal(0.262300000000000))*(x759));
IkReal x776=((sj5)*(x775));
IkReal x777=((cj5)*(x774));
IkReal x778=((sj5)*(x774));
IkReal x779=((cj5)*(x775));
IkReal x780=((x771)+(x777));
IkReal x781=((x772)+(x779)+(x778));
evalcond[0]=((((cj2)*(x763)))+(((IkReal(-1.00000000000000))*(x768)))+(((py)*(x765)))+(x780)+(((IkReal(-1.00000000000000))*(x776))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(x781)+(((IkReal(-1.00000000000000))*(cj2)*(x767)))+(((IkReal(-1.00000000000000))*(x761)*(x766))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x766)*(x767)))+(((IkReal(-1.00000000000000))*(x780)))+(((x768)*(x769)))+(((IkReal(-1.00000000000000))*(x764)*(x770)))+(((x761)*(x762)))+(x776)+(((IkReal(-1.00000000000000))*(x760)*(x773)))+(((r01)*(x763))));
evalcond[3]=((((r02)*(sj2)*(x763)))+(((IkReal(0.190000000000000))*(x769)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(pz)*(x764)*(x765)))+(((IkReal(-1.00000000000000))*(x762)*(x770)))+(x781)+(((cj2)*(sj3)*(x760)))+(((IkReal(-1.00000000000000))*(x761)*(x764)))+(((r01)*(x767))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x782=((cj3)*(sj5));
IkReal x783=((IkReal(2623.00000000000))*(r02));
IkReal x784=((IkReal(10000.0000000000))*(cj6));
IkReal x785=((IkReal(2623.00000000000))*(r00));
IkReal x786=((sj2)*(sj3));
IkReal x787=((IkReal(2623.00000000000))*(r01));
IkReal x788=((cj2)*(sj3));
IkReal x789=((cj3)*(cj5));
IkReal x790=((sj5)*(x788));
if( IKabs(((gconst2)*(((((x782)*(x783)))+(((pz)*(x784)*(x789)))+(((IkReal(-1.00000000000000))*(cj5)*(px)*(x784)*(x788)))+(((IkReal(-1.00000000000000))*(cj5)*(py)*(x784)*(x786)))+(((IkReal(-1.00000000000000))*(x785)*(x790)))+(((IkReal(-1.00000000000000))*(sj5)*(x786)*(x787))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((py)*(sj5)*(x784)*(x786)))+(((IkReal(-1390.00000000000))*(r00)*(x788)))+(((IkReal(-1.00000000000000))*(cj5)*(x786)*(x787)))+(((IkReal(-1.00000000000000))*(cj5)*(x785)*(x788)))+(((x783)*(x789)))+(((px)*(x784)*(x790)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((IkReal(-1.00000000000000))*(pz)*(x782)*(x784)))+(((IkReal(-1390.00000000000))*(r01)*(x786))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((x782)*(x783)))+(((pz)*(x784)*(x789)))+(((IkReal(-1.00000000000000))*(cj5)*(px)*(x784)*(x788)))+(((IkReal(-1.00000000000000))*(cj5)*(py)*(x784)*(x786)))+(((IkReal(-1.00000000000000))*(x785)*(x790)))+(((IkReal(-1.00000000000000))*(sj5)*(x786)*(x787)))))), ((gconst2)*(((((py)*(sj5)*(x784)*(x786)))+(((IkReal(-1390.00000000000))*(r00)*(x788)))+(((IkReal(-1.00000000000000))*(cj5)*(x786)*(x787)))+(((IkReal(-1.00000000000000))*(cj5)*(x785)*(x788)))+(((x783)*(x789)))+(((px)*(x784)*(x790)))+(((IkReal(1390.00000000000))*(cj3)*(r02)))+(((IkReal(-1.00000000000000))*(pz)*(x782)*(x784)))+(((IkReal(-1390.00000000000))*(r01)*(x786)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x791=IKsin(j4);
IkReal x792=IKcos(j4);
IkReal x793=(pz)*(pz);
IkReal x794=(px)*(px);
IkReal x795=(py)*(py);
IkReal x796=((IkReal(2.00000000000000))*(py));
IkReal x797=((cj2)*(px));
IkReal x798=((r01)*(sj3));
IkReal x799=((cj3)*(sj2));
IkReal x800=((pz)*(r02));
IkReal x801=((r02)*(sj3));
IkReal x802=((IkReal(1.00000000000000))*(pp));
IkReal x803=((IkReal(1.00000000000000))*(cj3));
IkReal x804=((r00)*(sj3));
IkReal x805=((IkReal(1.00000000000000))*(py));
IkReal x806=((px)*(sj2));
IkReal x807=((IkReal(0.0494802900000000))*(sj5));
IkReal x808=((cj2)*(pz));
IkReal x809=((cj3)*(r01));
IkReal x810=((py)*(sj2));
IkReal x811=((cj3)*(r02));
IkReal x812=((pz)*(sj2));
IkReal x813=((IkReal(0.380000000000000))*(r02));
IkReal x814=((IkReal(0.380000000000000))*(r00));
IkReal x815=((IkReal(0.380000000000000))*(r01));
IkReal x816=((IkReal(0.0881222900000000))*(cj5));
IkReal x817=((cj2)*(cj3)*(r00));
IkReal x818=((IkReal(2.00000000000000))*(x793));
IkReal x819=((cj6)*(x792));
IkReal x820=((IkReal(2.00000000000000))*(px)*(pz));
IkReal x821=((cj6)*(x791));
IkReal x822=((IkReal(2.00000000000000))*(x794));
IkReal x823=((IkReal(0.262300000000000))*(x792));
IkReal x824=((IkReal(0.139000000000000))*(x791));
IkReal x825=((IkReal(2.00000000000000))*(x795));
IkReal x826=((IkReal(0.139000000000000))*(x792));
IkReal x827=((IkReal(0.262300000000000))*(cj5)*(x791));
IkReal x828=((IkReal(0.262300000000000))*(sj5)*(x791));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x803)))+(((cj2)*(x804)))+(((sj5)*(x821)))+(((cj5)*(x819)))+(((sj2)*(x798))));
evalcond[1]=((((sj3)*(x810)))+(x827)+(x824)+(((IkReal(-1.00000000000000))*(sj5)*(x823)))+(((sj3)*(x797)))+(((IkReal(-1.00000000000000))*(pz)*(x803))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x801)))+(((IkReal(-1.00000000000000))*(r01)*(x799)))+(((sj5)*(x819)))+(((IkReal(-1.00000000000000))*(cj5)*(x821)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x803))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x799)*(x805)))+(((IkReal(-1.00000000000000))*(x797)*(x803)))+(((cj5)*(x823)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(x828)+(x826));
evalcond[4]=((((IkReal(-1.00000000000000))*(x804)*(x805)))+(((px)*(x798)))+(((IkReal(-1.00000000000000))*(px)*(r02)*(x799)))+(((IkReal(-1.00000000000000))*(sj5)*(sj6)*(x823)))+(((IkReal(-1.00000000000000))*(r01)*(x803)*(x808)))+(((sj6)*(x824)))+(((sj6)*(x827)))+(((cj2)*(py)*(x811)))+(((pz)*(r00)*(x799))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x804)*(x812)))+(((IkReal(-1.00000000000000))*(cj2)*(x801)*(x805)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((x798)*(x808)))+(((IkReal(-1.00000000000000))*(cj5)*(sj6)*(x823)))+(((x801)*(x806)))+(((IkReal(-1.00000000000000))*(py)*(r00)*(x803)))+(((px)*(x809)))+(((IkReal(0.190000000000000))*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(sj6)*(x826)))+(((IkReal(-1.00000000000000))*(sj6)*(x828))));
evalcond[6]=((((IkReal(0.0361000000000000))*(r01)*(x799)))+(((IkReal(-1.00000000000000))*(x816)*(x821)))+(((r01)*(x799)*(x825)))+(((x796)*(x799)*(x800)))+(((px)*(r00)*(x796)*(x799)))+(((x801)*(x818)))+(((x796)*(x797)*(x809)))+(((IkReal(0.0361000000000000))*(x817)))+(((IkReal(-1.00000000000000))*(x802)*(x817)))+(((IkReal(-1.00000000000000))*(py)*(x815)))+(((x817)*(x822)))+(((IkReal(-0.0729194000000000))*(x821)))+(((x807)*(x819)))+(((IkReal(-1.00000000000000))*(r01)*(x799)*(x802)))+(((IkReal(2.00000000000000))*(cj3)*(x797)*(x800)))+(((x804)*(x820)))+(((IkReal(-1.00000000000000))*(px)*(x814)))+(((IkReal(-0.380000000000000))*(x800)))+(((IkReal(-1.00000000000000))*(x801)*(x802)))+(((pz)*(x796)*(x798)))+(((IkReal(0.0361000000000000))*(x801))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x812)*(x815)))+(((x797)*(x813)))+(((pp)*(sj2)*(x798)))+(((IkReal(-1.00000000000000))*(x808)*(x814)))+(((x816)*(x819)))+(((IkReal(-1.00000000000000))*(x802)*(x811)))+(((IkReal(0.0729194000000000))*(x819)))+(((x810)*(x813)))+(((pz)*(x796)*(x809)))+(((IkReal(-1.00000000000000))*(cj2)*(x804)*(x822)))+(((IkReal(0.0361000000000000))*(sj2)*(x798)))+(((IkReal(-1.00000000000000))*(x796)*(x797)*(x798)))+(((IkReal(-0.0361000000000000))*(x811)))+(((cj3)*(r00)*(x820)))+(((IkReal(-2.00000000000000))*(sj3)*(x797)*(x800)))+(((x811)*(x818)))+(((IkReal(0.0361000000000000))*(cj2)*(x804)))+(((x807)*(x821)))+(((IkReal(-1.00000000000000))*(x796)*(x804)*(x806)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x796)*(x800)))+(((cj2)*(pp)*(x804)))+(((IkReal(-1.00000000000000))*(sj2)*(x798)*(x825))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x829=((cj3)*(sj5));
IkReal x830=((cj2)*(r00));
IkReal x831=((cj3)*(cj5));
IkReal x832=((r01)*(sj2));
IkReal x833=((IkReal(1.00000000000000))*(sj3)*(sj5));
IkReal x834=((IkReal(1.00000000000000))*(cj5)*(sj3));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x832)*(x833)))+(((IkReal(-1.00000000000000))*(r02)*(x834)))+(((IkReal(-1.00000000000000))*(x830)*(x833)))+(((IkReal(-1.00000000000000))*(x830)*(x831)))+(((r02)*(x829)))+(((IkReal(-1.00000000000000))*(x831)*(x832))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x832)*(x834)))+(((r02)*(x831)))+(((r02)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(x830)*(x834)))+(((x829)*(x830)))+(((x829)*(x832))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x832)*(x833)))+(((IkReal(-1.00000000000000))*(r02)*(x834)))+(((IkReal(-1.00000000000000))*(x830)*(x833)))+(((IkReal(-1.00000000000000))*(x830)*(x831)))+(((r02)*(x829)))+(((IkReal(-1.00000000000000))*(x831)*(x832)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(x832)*(x834)))+(((r02)*(x831)))+(((r02)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(x830)*(x834)))+(((x829)*(x830)))+(((x829)*(x832)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[8];
IkReal x835=IKsin(j4);
IkReal x836=IKcos(j4);
IkReal x837=(pz)*(pz);
IkReal x838=(px)*(px);
IkReal x839=(py)*(py);
IkReal x840=((IkReal(2.00000000000000))*(py));
IkReal x841=((cj2)*(px));
IkReal x842=((r01)*(sj3));
IkReal x843=((cj3)*(sj2));
IkReal x844=((pz)*(r02));
IkReal x845=((r02)*(sj3));
IkReal x846=((IkReal(1.00000000000000))*(pp));
IkReal x847=((IkReal(1.00000000000000))*(cj3));
IkReal x848=((r00)*(sj3));
IkReal x849=((IkReal(1.00000000000000))*(py));
IkReal x850=((px)*(sj2));
IkReal x851=((IkReal(0.0494802900000000))*(sj5));
IkReal x852=((cj2)*(pz));
IkReal x853=((cj3)*(r01));
IkReal x854=((py)*(sj2));
IkReal x855=((cj3)*(r02));
IkReal x856=((pz)*(sj2));
IkReal x857=((IkReal(0.380000000000000))*(r02));
IkReal x858=((IkReal(0.380000000000000))*(r00));
IkReal x859=((IkReal(0.380000000000000))*(r01));
IkReal x860=((IkReal(0.0881222900000000))*(cj5));
IkReal x861=((cj2)*(cj3)*(r00));
IkReal x862=((IkReal(2.00000000000000))*(x837));
IkReal x863=((cj6)*(x836));
IkReal x864=((IkReal(2.00000000000000))*(px)*(pz));
IkReal x865=((cj6)*(x835));
IkReal x866=((IkReal(2.00000000000000))*(x838));
IkReal x867=((IkReal(0.262300000000000))*(x836));
IkReal x868=((IkReal(0.139000000000000))*(x835));
IkReal x869=((IkReal(2.00000000000000))*(x839));
IkReal x870=((IkReal(0.139000000000000))*(x836));
IkReal x871=((IkReal(0.262300000000000))*(cj5)*(x835));
IkReal x872=((IkReal(0.262300000000000))*(sj5)*(x835));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x847)))+(((sj5)*(x865)))+(((cj5)*(x863)))+(((sj2)*(x842)))+(((cj2)*(x848))));
evalcond[1]=((((IkReal(-1.00000000000000))*(pz)*(x847)))+(((sj3)*(x854)))+(((IkReal(-1.00000000000000))*(sj5)*(x867)))+(x868)+(x871)+(((sj3)*(x841))));
evalcond[2]=((((sj5)*(x863)))+(((IkReal(-1.00000000000000))*(r01)*(x843)))+(((IkReal(-1.00000000000000))*(cj5)*(x865)))+(((IkReal(-1.00000000000000))*(cj2)*(r00)*(x847)))+(((IkReal(-1.00000000000000))*(x845))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x841)*(x847)))+(((IkReal(-1.00000000000000))*(x843)*(x849)))+(((IkReal(-1.00000000000000))*(pz)*(sj3)))+(((cj5)*(x867)))+(x870)+(x872));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x847)*(x852)))+(((sj6)*(x871)))+(((pz)*(r00)*(x843)))+(((sj6)*(x868)))+(((IkReal(-1.00000000000000))*(sj5)*(sj6)*(x867)))+(((cj2)*(py)*(x855)))+(((IkReal(-1.00000000000000))*(x848)*(x849)))+(((px)*(x842)))+(((IkReal(-1.00000000000000))*(px)*(r02)*(x843))));
evalcond[5]=((((x842)*(x852)))+(((IkReal(-0.190000000000000))*(cj2)*(r01)))+(((IkReal(-1.00000000000000))*(sj6)*(x872)))+(((IkReal(-1.00000000000000))*(sj6)*(x870)))+(((IkReal(-1.00000000000000))*(cj5)*(sj6)*(x867)))+(((x845)*(x850)))+(((IkReal(-1.00000000000000))*(py)*(r00)*(x847)))+(((px)*(x853)))+(((IkReal(-1.00000000000000))*(cj2)*(x845)*(x849)))+(((IkReal(0.190000000000000))*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(x848)*(x856))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x846)*(x861)))+(((IkReal(0.0361000000000000))*(x861)))+(((r01)*(x843)*(x869)))+(((x840)*(x843)*(x844)))+(((IkReal(-0.0729194000000000))*(x865)))+(((px)*(r00)*(x840)*(x843)))+(((x845)*(x862)))+(((x848)*(x864)))+(((IkReal(-1.00000000000000))*(x860)*(x865)))+(((x851)*(x863)))+(((IkReal(0.0361000000000000))*(r01)*(x843)))+(((pz)*(x840)*(x842)))+(((IkReal(-1.00000000000000))*(py)*(x859)))+(((IkReal(0.0361000000000000))*(x845)))+(((x861)*(x866)))+(((x840)*(x841)*(x853)))+(((IkReal(-1.00000000000000))*(x845)*(x846)))+(((IkReal(2.00000000000000))*(cj3)*(x841)*(x844)))+(((IkReal(-1.00000000000000))*(r01)*(x843)*(x846)))+(((IkReal(-0.380000000000000))*(x844)))+(((IkReal(-1.00000000000000))*(px)*(x858))));
evalcond[7]=((((pz)*(x840)*(x853)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(x840)*(x844)))+(((IkReal(-1.00000000000000))*(sj2)*(x842)*(x869)))+(((IkReal(-1.00000000000000))*(x846)*(x855)))+(((IkReal(-1.00000000000000))*(cj2)*(x848)*(x866)))+(((IkReal(-1.00000000000000))*(x840)*(x848)*(x850)))+(((cj2)*(pp)*(x848)))+(((IkReal(-1.00000000000000))*(x852)*(x858)))+(((cj3)*(r00)*(x864)))+(((IkReal(-0.0361000000000000))*(x855)))+(((x855)*(x862)))+(((x851)*(x865)))+(((pp)*(sj2)*(x842)))+(((x841)*(x857)))+(((IkReal(0.0729194000000000))*(x863)))+(((x854)*(x857)))+(((IkReal(-2.00000000000000))*(sj3)*(x841)*(x844)))+(((x860)*(x863)))+(((IkReal(-1.00000000000000))*(x856)*(x859)))+(((IkReal(0.0361000000000000))*(sj2)*(x842)))+(((IkReal(-1.00000000000000))*(x840)*(x841)*(x842)))+(((IkReal(0.0361000000000000))*(cj2)*(x848))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
}
}
return solutions.GetNumSolutions()>0;
}
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int& numroots)
{
    using std::complex;
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[4];
    const int maxsteps = 110;
    for(int i = 0; i < 4; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[4];
    IkReal err[4];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 4; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 4; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 4; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 4; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[4] = {false};
    for(int i = 0; i < 4; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 4; ++j) {
                if( abs(roots[i]-roots[j]) < 8*tolsqrt ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - kurtana (3df14a13762b5374a5c039c7ed5a6f16)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
