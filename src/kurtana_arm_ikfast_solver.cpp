/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-06-06 12:06:17.975262
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=((IkReal(0.184600000000000))*(x0));
x11=((IkReal(0.139000000000000))*(x0));
x12=((IkReal(1.00000000000000))*(x5));
x13=((IkReal(0.184600000000000))*(x4));
x14=((IkReal(0.139000000000000))*(x6));
x15=((IkReal(1.00000000000000))*(x7));
x16=((IkReal(1.00000000000000))*(x6));
x17=((IkReal(1.00000000000000))*(x0));
x18=((IkReal(0.184600000000000))*(x6));
x19=((x1)*(x2));
x20=((x1)*(x6));
x21=((x2)*(x3));
x22=((x3)*(x4));
x23=((x1)*(x4));
IkReal x24=((IkReal(1.00000000000000))*(x22));
eetrans[0]=((((IkReal(0.190000000000000))*(x0)*(x1)))+(((x7)*(((((x10)*(x23)))+(((x10)*(x21)))))))+(((x5)*(((((IkReal(-1.00000000000000))*(x10)*(x24)))+(((x10)*(x19)))))))+(((x11)*(x19)))+(((IkReal(-1.00000000000000))*(x11)*(x24))));
eetrans[1]=((((x7)*(((((x18)*(x21)))+(((x13)*(x20)))))))+(((IkReal(0.190000000000000))*(x20)))+(((x14)*(x19)))+(((IkReal(-1.00000000000000))*(x14)*(x22)))+(((x5)*(((((x18)*(x19)))+(((IkReal(-1.00000000000000))*(x13)*(x3)*(x6))))))));
eetrans[2]=((IkReal(0.201500000000000))+(((x5)*(((((x1)*(x13)))+(((IkReal(0.184600000000000))*(x21)))))))+(((IkReal(0.190000000000000))*(x3)))+(((x7)*(((((IkReal(-0.184600000000000))*(x19)))+(((x13)*(x3)))))))+(((IkReal(0.139000000000000))*(x23)))+(((IkReal(0.139000000000000))*(x21))));
eerot[0]=((((IkReal(-1.00000000000000))*(x8)*(((((x12)*(((((x0)*(x21)))+(((x0)*(x23)))))))+(((x15)*(((((IkReal(-1.00000000000000))*(x17)*(x19)))+(((x17)*(x22)))))))))))+(((IkReal(-1.00000000000000))*(x16)*(x9))));
eerot[1]=((((x0)*(x9)))+(((IkReal(-1.00000000000000))*(x8)*(((((x12)*(((((x21)*(x6)))+(((x20)*(x4)))))))+(((x15)*(((((IkReal(-1.00000000000000))*(x16)*(x19)))+(((x16)*(x22))))))))))));
eerot[2]=((IkReal(-1.00000000000000))*(x8)*(((((x12)*(((((IkReal(-1.00000000000000))*(x19)))+(x22)))))+(((x15)*(((((IkReal(-1.00000000000000))*(x21)))+(((IkReal(-1.00000000000000))*(x23))))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 5; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j6,cj6,sj6,htj6,j7,cj7,sj7,htj7,j8,cj8,sj8,htj8,j9,cj9,sj9,htj9,j10,cj10,sj10,htj10,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij6[2], _nj6,_ij7[2], _nj7,_ij8[2], _nj8,_ij9[2], _nj9,_ij10[2], _nj10;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; j8=numeric_limits<IkReal>::quiet_NaN(); _ij8[0] = -1; _ij8[1] = -1; _nj8 = -1; j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.201500000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
if( IKabs(((IkReal(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH && IKabs(px) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x25=IKatan2(((IkReal(-1.00000000000000))*(py)), px);
j6array[0]=((IkReal(-1.00000000000000))*(x25));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x25))));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];

IkReal op[4+1], zeror[4];
int numroots;
op[0]=((((IkReal(16.0000000000000))*(cj6)*(py)*(pz)*(r00)*(r02)*(sj6)*((px)*(px))))+(((IkReal(-0.101712320000000))*(pp)*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(0.0590246400000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.203424640000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)))+(((IkReal(8.00000000000000))*(py)*(r00)*(r01)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(-0.0131466016000000))*(py)*(sj6)*((r02)*(r02))))+(((IkReal(0.288800000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(8.00000000000000))*(py)*(pz)*(r01)*(r02)*((cj6)*(cj6))*((px)*(px))))+(((IkReal(0.0671160000000000))*((py)*(py))*((r02)*(r02))*((sj6)*(sj6))))+((((pp)*(pp))*((r02)*(r02))))+(((IkReal(1.52000000000000))*(cj6)*(pz)*(r00)*(r02)*((px)*(px))))+(((IkReal(1.52000000000000))*(cj6)*(px)*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.203424640000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(1.52000000000000))*(pz)*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(-0.760000000000000))*(pp)*(px)*(r00)*(r01)*(sj6)))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(cj6)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(1.52000000000000))*(cj6)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(-0.0131466016000000))*(cj6)*(px)*((r02)*(r02))))+(((IkReal(-0.760000000000000))*(cj6)*(pp)*(py)*(r00)*(r01)))+(((IkReal(8.00000000000000))*(cj6)*(px)*(sj6)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(1.52000000000000))*(py)*(sj6)*((pz)*(pz))*((r01)*(r01))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(0.0691926400000000))*(py)*(pz)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(0.0517972832000000))*(cj6)*(pz)*(r00)*(r02)))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(16.0000000000000))*(cj6)*(px)*(pz)*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(px)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(8.00000000000000))*(cj6)*(px)*(py)*(sj6)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(-4.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(0.203424640000000))*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(0.0386506816000000))*(px)*(r00)*(r01)*(sj6)))+(((IkReal(-0.101712320000000))*(pp)*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(cj6)*(px)*((pz)*(pz))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(px)*(r00)*(r01)*(sj6)*((pz)*(pz))))+((((pp)*(pp))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(px)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(px)*(py)*(sj6)*((r00)*(r00))))+(((IkReal(4.00000000000000))*((cj6)*(cj6))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(1.52000000000000))*(cj6)*(px)*((py)*(py))*((r01)*(r01))))+(((IkReal(0.00258634900994560))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(sj6)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(-1.52000000000000))*(cj6)*(pp)*(pz)*(r00)*(r02)))+(((IkReal(0.00517269801989120))*(cj6)*(r00)*(r01)*(sj6)))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(py)*(sj6)*((px)*(px))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(1.52000000000000))*(px)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(0.0691926400000000))*(cj6)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(8.00000000000000))*(pz)*(r00)*(r02)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(-0.760000000000000))*(cj6)*(pp)*(px)*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(8.00000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj6)*(sj6))))+(((IkReal(0.0671160000000000))*((pz)*(pz))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(cj6)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((cj6)*(cj6))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.0517972832000000))*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(0.0426876800000000))*(pp)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(0.0386506816000000))*(cj6)*(px)*((r00)*(r00))))+(((IkReal(-0.00233439289405440))*((r02)*(r02))))+(((IkReal(0.203424640000000))*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.203424640000000))*(px)*(py)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(0.203424640000000))*(px)*(py)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(-0.760000000000000))*(pp)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(0.134232000000000))*(cj6)*(r00)*(r01)*(sj6)*((pz)*(pz))))+(((IkReal(0.144400000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(16.0000000000000))*(cj6)*(r00)*(r01)*(sj6)*((px)*(px))*((py)*(py))))+(((IkReal(0.00258634900994560))*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(0.203424640000000))*(cj6)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(0.203424640000000))*(cj6)*(px)*(py)*(sj6)*((r00)*(r00))))+(((IkReal(0.203424640000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(8.00000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(0.0691926400000000))*(px)*(pz)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(8.00000000000000))*(cj6)*(py)*(sj6)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(3.04000000000000))*(px)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(0.760000000000000))*(pp)*(py)*(sj6)*((r02)*(r02))))+(((IkReal(1.52000000000000))*(r01)*(r02)*(sj6)*((pz)*(pz)*(pz))))+(((IkReal(4.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj6)*(sj6))))+(((IkReal(-4.00000000000000))*(pp)*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((cj6)*(cj6))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(0.203424640000000))*(cj6)*(px)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(0.0386506816000000))*(cj6)*(py)*(r00)*(r01)))+(((IkReal(0.760000000000000))*(cj6)*(pp)*(px)*((r02)*(r02))))+(((IkReal(3.04000000000000))*(cj6)*(py)*(r00)*(r01)*((px)*(px))))+(((IkReal(4.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((cj6)*(cj6))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.0691926400000000))*(cj6)*(px)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(4.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(0.203424640000000))*(cj6)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(4.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.134232000000000))*(cj6)*(px)*(py)*(sj6)*((r02)*(r02))))+(((IkReal(8.00000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(0.0386506816000000))*(py)*(sj6)*((r01)*(r01))))+(((IkReal(4.00000000000000))*((cj6)*(cj6))*((px)*(px))*((py)*(py))*((r01)*(r01))))+((((cj6)*(cj6))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(2.00000000000000))*(cj6)*(r00)*(r01)*(sj6)*((pp)*(pp))))+(((IkReal(0.144400000000000))*((py)*(py))*((r01)*(r01)))));
op[1]=((((IkReal(-6.08000000000000))*(px)*(py)*(pz)*(r00)*(r01)))+(((IkReal(-0.0262932032000000))*(cj6)*(py)*(r00)*(r02)*(sj6)))+(((IkReal(-0.577600000000000))*(cj6)*(py)*(pz)*(r00)*(r01)))+(((IkReal(-3.04000000000000))*(pz)*((cj6)*(cj6))*((px)*(px))*((r02)*(r02))))+(((IkReal(-0.577600000000000))*(cj6)*(r00)*(r02)*((px)*(px))))+(((IkReal(3.04000000000000))*(cj6)*(px)*(r01)*(r02)*(sj6)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(r01)*(r02)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(-0.577600000000000))*(cj6)*(px)*(py)*(r01)*(r02)))+(((IkReal(3.04000000000000))*(py)*(r01)*(r02)*((pz)*(pz))*((sj6)*(sj6))))+(((IkReal(-3.04000000000000))*((pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(-0.0262932032000000))*(cj6)*(px)*(r01)*(r02)*(sj6)))+(((IkReal(3.04000000000000))*(cj6)*(px)*(py)*(pz)*(sj6)*((r00)*(r00))))+(((IkReal(0.0262932032000000))*(pz)*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(3.04000000000000))*(cj6)*(px)*(py)*(pz)*(sj6)*((r01)*(r01))))+(((IkReal(0.0262932032000000))*(pz)*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-0.577600000000000))*(py)*(pz)*(sj6)*((r01)*(r01))))+(((IkReal(-0.0262932032000000))*(py)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(cj6)*(pp)*(py)*(r00)*(r02)*(sj6)))+(((IkReal(-3.04000000000000))*(r00)*(r02)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(-0.0196829676160000))*(cj6)*(r00)*(r02)))+(((IkReal(3.04000000000000))*(cj6)*(pz)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(-3.04000000000000))*(cj6)*(pp)*(pz)*(r00)*(r01)*(sj6)))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))))+(((IkReal(-0.577600000000000))*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(-6.08000000000000))*(cj6)*(px)*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(3.04000000000000))*(pz)*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r02)*((py)*(py))*((sj6)*(sj6))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(-0.577600000000000))*(px)*(py)*(r00)*(r02)*(sj6)))+(((IkReal(-0.577600000000000))*(cj6)*(px)*(pz)*((r02)*(r02))))+(((IkReal(-6.08000000000000))*(px)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj6)*(pz)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(-0.577600000000000))*(cj6)*(px)*(pz)*((r00)*(r00))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)))+(((IkReal(3.04000000000000))*(px)*(r00)*(r02)*((cj6)*(cj6))*((pz)*(pz))))+(((IkReal(-0.577600000000000))*(r01)*(r02)*(sj6)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r02)*(r02))*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(cj6)*(pp)*(px)*(r01)*(r02)*(sj6)))+(((IkReal(0.577600000000000))*(pp)*(r01)*(r02)*(sj6)))+(((IkReal(-3.04000000000000))*(py)*(r01)*(r02)*((cj6)*(cj6))*((px)*(px))))+(((IkReal(-6.08000000000000))*(cj6)*(py)*(r00)*(r02)*(sj6)*((px)*(px))))+(((IkReal(-0.0773013632000000))*(py)*(r01)*(r02)))+(((IkReal(-0.0262932032000000))*(px)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(1.52000000000000))*(pp)*(pz)*((r02)*(r02))))+(((IkReal(-0.577600000000000))*(cj6)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(0.0525864064000000))*(cj6)*(pz)*(r00)*(r01)*(sj6)))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-6.08000000000000))*(py)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(-0.577600000000000))*(py)*(pz)*(sj6)*((r02)*(r02))))+(((IkReal(-0.0773013632000000))*(pz)*((r02)*(r02))))+(((IkReal(-0.577600000000000))*(px)*(pz)*(r00)*(r01)*(sj6)))+(((IkReal(-0.0196829676160000))*(r01)*(r02)*(sj6)))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(3.04000000000000))*(cj6)*(py)*(r00)*(r02)*(sj6)*((pz)*(pz))))+(((IkReal(0.577600000000000))*(cj6)*(pp)*(r00)*(r02)))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)))+(((IkReal(-6.08000000000000))*(cj6)*(px)*(py)*(pz)*(sj6)*((r02)*(r02))))+(((IkReal(-0.0773013632000000))*(px)*(r00)*(r02)))+(((IkReal(-3.04000000000000))*(pz)*((px)*(px))*((r00)*(r00)))));
op[2]=((((IkReal(0.134232000000000))*((pz)*(pz))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(32.0000000000000))*(cj6)*(px)*(pz)*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(32.0000000000000))*(cj6)*(r00)*(r01)*(sj6)*((px)*(px))*((py)*(py))))+(((IkReal(0.288800000000000))*((py)*(py))*((r01)*(r01))))+(((IkReal(0.748350720000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)))+(((IkReal(-0.748350720000000))*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(0.374175360000000))*(pp)*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(16.0000000000000))*(pz)*(r00)*(r02)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(0.268464000000000))*(cj6)*(px)*(py)*(sj6)*((r02)*(r02))))+(((IkReal(0.134232000000000))*((py)*(py))*((r02)*(r02))*((sj6)*(sj6))))+(((IkReal(16.0000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-8.00000000000000))*(cj6)*(pp)*(px)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(-0.748350720000000))*(cj6)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(2.00000000000000))*((pp)*(pp))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-8.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(0.268464000000000))*(cj6)*(r00)*(r01)*(sj6)*((pz)*(pz))))+(((IkReal(4.00000000000000))*(cj6)*(r00)*(r01)*(sj6)*((pp)*(pp))))+(((IkReal(8.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(16.0000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(-0.492224640000000))*(pp)*((r02)*(r02))))+(((IkReal(0.0150141818278912))*((r02)*(r02))))+(((IkReal(8.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(32.0000000000000))*(cj6)*(py)*(pz)*(r00)*(r02)*(sj6)*((px)*(px))))+(((IkReal(0.577600000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(0.134232000000000))*((cj6)*(cj6))*((px)*(px))*((r02)*(r02))))+(((IkReal(16.0000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj6)*(sj6))))+(((IkReal(-1.01681472000000))*(cj6)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(-8.00000000000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(8.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(-8.00000000000000))*(pp)*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(16.0000000000000))*(cj6)*(px)*(py)*(sj6)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.748350720000000))*(cj6)*(px)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(-1.01681472000000))*(cj6)*(px)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(-8.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(8.00000000000000))*((cj6)*(cj6))*((px)*(px))*((py)*(py))*((r01)*(r01))))+(((IkReal(16.0000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(1.56204928000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(-0.0145102695961088))*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(8.00000000000000))*((cj6)*(cj6))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(-0.0290205391922176))*(cj6)*(r00)*(r01)*(sj6)))+(((IkReal(2.00000000000000))*((pp)*(pp))*((r02)*(r02))))+(((IkReal(-0.748350720000000))*(px)*(py)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(8.00000000000000))*((cj6)*(cj6))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(-8.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(2.00000000000000))*((cj6)*(cj6))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(0.374175360000000))*(pp)*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(8.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj6)*(sj6))))+(((IkReal(-0.748350720000000))*(cj6)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(0.288800000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(16.0000000000000))*(py)*(r00)*(r01)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(16.0000000000000))*(py)*(pz)*(r01)*(r02)*((cj6)*(cj6))*((px)*(px))))+(((IkReal(-8.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(16.0000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(8.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.0145102695961088))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-8.00000000000000))*(cj6)*(pp)*(px)*(py)*(sj6)*((r00)*(r00))))+(((IkReal(8.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj6)*(sj6))))+(((IkReal(-0.748350720000000))*(px)*(py)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(-8.00000000000000))*(cj6)*(pp)*(px)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(-0.748350720000000))*(cj6)*(px)*(py)*(sj6)*((r00)*(r00))))+(((IkReal(1.27324928000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.134232000000000))*((cj6)*(cj6))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(-1.01681472000000))*(px)*(pz)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(16.0000000000000))*(cj6)*(px)*(sj6)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(-0.748350720000000))*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(-8.00000000000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(-8.00000000000000))*(cj6)*(pp)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(16.0000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(1.56204928000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(16.0000000000000))*(cj6)*(py)*(sj6)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-1.01681472000000))*(py)*(pz)*(r01)*(r02)*((sj6)*(sj6)))));
op[3]=((((IkReal(-6.08000000000000))*(px)*(py)*(pz)*(r00)*(r01)))+(((IkReal(-0.0262932032000000))*(cj6)*(py)*(r00)*(r02)*(sj6)))+(((IkReal(-3.04000000000000))*(pz)*((cj6)*(cj6))*((px)*(px))*((r02)*(r02))))+(((IkReal(3.04000000000000))*(cj6)*(px)*(r01)*(r02)*(sj6)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(r01)*(r02)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(0.577600000000000))*(cj6)*(px)*(py)*(r01)*(r02)))+(((IkReal(3.04000000000000))*(py)*(r01)*(r02)*((pz)*(pz))*((sj6)*(sj6))))+(((IkReal(0.577600000000000))*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(-3.04000000000000))*((pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(0.0196829676160000))*(r01)*(r02)*(sj6)))+(((IkReal(0.577600000000000))*(py)*(pz)*(sj6)*((r01)*(r01))))+(((IkReal(-0.0262932032000000))*(cj6)*(px)*(r01)*(r02)*(sj6)))+(((IkReal(3.04000000000000))*(cj6)*(px)*(py)*(pz)*(sj6)*((r00)*(r00))))+(((IkReal(0.0262932032000000))*(pz)*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(3.04000000000000))*(cj6)*(px)*(py)*(pz)*(sj6)*((r01)*(r01))))+(((IkReal(0.577600000000000))*(cj6)*(px)*(pz)*((r02)*(r02))))+(((IkReal(0.0262932032000000))*(pz)*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-0.0262932032000000))*(py)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(0.577600000000000))*(r01)*(r02)*(sj6)*((pz)*(pz))))+(((IkReal(1.52000000000000))*(cj6)*(pp)*(py)*(r00)*(r02)*(sj6)))+(((IkReal(-3.04000000000000))*(r00)*(r02)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(3.04000000000000))*(cj6)*(pz)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(-3.04000000000000))*(cj6)*(pp)*(pz)*(r00)*(r01)*(sj6)))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))))+(((IkReal(-6.08000000000000))*(cj6)*(px)*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(3.04000000000000))*(pz)*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.577600000000000))*(cj6)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r02)*((py)*(py))*((sj6)*(sj6))))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(-0.577600000000000))*(cj6)*(pp)*(r00)*(r02)))+(((IkReal(-6.08000000000000))*(px)*(r00)*(r02)*((pz)*(pz))))+(((IkReal(3.04000000000000))*(cj6)*(pz)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(0.577600000000000))*(cj6)*(r00)*(r02)*((px)*(px))))+(((IkReal(1.52000000000000))*(pp)*(py)*(r01)*(r02)))+(((IkReal(3.04000000000000))*(px)*(r00)*(r02)*((cj6)*(cj6))*((pz)*(pz))))+(((IkReal(3.04000000000000))*(pz)*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-3.04000000000000))*(pz)*((py)*(py))*((r02)*(r02))*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(cj6)*(pp)*(px)*(r01)*(r02)*(sj6)))+(((IkReal(0.0196829676160000))*(cj6)*(r00)*(r02)))+(((IkReal(-3.04000000000000))*(py)*(r01)*(r02)*((cj6)*(cj6))*((px)*(px))))+(((IkReal(-6.08000000000000))*(cj6)*(py)*(r00)*(r02)*(sj6)*((px)*(px))))+(((IkReal(-0.0773013632000000))*(py)*(r01)*(r02)))+(((IkReal(0.577600000000000))*(cj6)*(px)*(pz)*((r00)*(r00))))+(((IkReal(-0.0262932032000000))*(px)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(1.52000000000000))*(pp)*(pz)*((r02)*(r02))))+(((IkReal(0.577600000000000))*(cj6)*(py)*(pz)*(r00)*(r01)))+(((IkReal(0.0525864064000000))*(cj6)*(pz)*(r00)*(r01)*(sj6)))+(((IkReal(-1.52000000000000))*(pp)*(pz)*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-6.08000000000000))*(py)*(r01)*(r02)*((pz)*(pz))))+(((IkReal(-0.0773013632000000))*(pz)*((r02)*(r02))))+(((IkReal(3.04000000000000))*(px)*(py)*(pz)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(-0.577600000000000))*(pp)*(r01)*(r02)*(sj6)))+(((IkReal(0.577600000000000))*(px)*(py)*(r00)*(r02)*(sj6)))+(((IkReal(3.04000000000000))*(cj6)*(py)*(r00)*(r02)*(sj6)*((pz)*(pz))))+(((IkReal(1.52000000000000))*(pp)*(px)*(r00)*(r02)))+(((IkReal(-6.08000000000000))*(cj6)*(px)*(py)*(pz)*(sj6)*((r02)*(r02))))+(((IkReal(-0.0773013632000000))*(px)*(r00)*(r02)))+(((IkReal(-3.04000000000000))*(pz)*((px)*(px))*((r00)*(r00))))+(((IkReal(0.577600000000000))*(px)*(pz)*(r00)*(r01)*(sj6)))+(((IkReal(0.577600000000000))*(py)*(pz)*(sj6)*((r02)*(r02)))));
op[4]=((((IkReal(16.0000000000000))*(cj6)*(py)*(pz)*(r00)*(r02)*(sj6)*((px)*(px))))+(((IkReal(-0.101712320000000))*(pp)*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(0.0590246400000000))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-0.203424640000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)))+(((IkReal(8.00000000000000))*(py)*(r00)*(r01)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(-1.52000000000000))*(cj6)*(px)*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.760000000000000))*(cj6)*(pp)*(py)*(r00)*(r01)))+(((IkReal(0.288800000000000))*(px)*(py)*(r00)*(r01)))+(((IkReal(8.00000000000000))*(py)*(pz)*(r01)*(r02)*((cj6)*(cj6))*((px)*(px))))+(((IkReal(0.0671160000000000))*((py)*(py))*((r02)*(r02))*((sj6)*(sj6))))+(((IkReal(-0.0386506816000000))*(cj6)*(py)*(r00)*(r01)))+((((pp)*(pp))*((r02)*(r02))))+(((IkReal(0.203424640000000))*(py)*(pz)*(r01)*(r02)))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r02)*(r02))*((sj6)*(sj6))))+(((IkReal(-0.0386506816000000))*(py)*(sj6)*((r01)*(r01))))+(((IkReal(-1.52000000000000))*(cj6)*(pz)*(r00)*(r02)*((px)*(px))))+(((IkReal(-0.0386506816000000))*(cj6)*(px)*((r00)*(r00))))+(((IkReal(0.760000000000000))*(pp)*(px)*(r00)*(r01)*(sj6)))+(((IkReal(8.00000000000000))*(cj6)*(px)*(sj6)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(-1.52000000000000))*(px)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(-1.52000000000000))*(pz)*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(0.0691926400000000))*(py)*(pz)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)*((sj6)*(sj6))))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)))+(((IkReal(-1.52000000000000))*(py)*(sj6)*((px)*(px))*((r00)*(r00))))+(((IkReal(-3.04000000000000))*(cj6)*(py)*(r00)*(r01)*((px)*(px))))+(((IkReal(16.0000000000000))*(cj6)*(px)*(pz)*(r01)*(r02)*(sj6)*((py)*(py))))+(((IkReal(-1.52000000000000))*(cj6)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(px)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(8.00000000000000))*(cj6)*(px)*(py)*(sj6)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(-1.52000000000000))*(cj6)*(px)*((py)*(py))*((r01)*(r01))))+(((IkReal(8.00000000000000))*(px)*(r00)*(r01)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(-4.00000000000000))*(pp)*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(0.203424640000000))*((py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-1.52000000000000))*(cj6)*(py)*(r00)*(r01)*((pz)*(pz))))+(((IkReal(-0.101712320000000))*(pp)*((r01)*(r01))*((sj6)*(sj6))))+((((pp)*(pp))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-0.760000000000000))*(pp)*(py)*(sj6)*((r02)*(r02))))+(((IkReal(-1.52000000000000))*(px)*(r00)*(r01)*(sj6)*((pz)*(pz))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(px)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(px)*(py)*(sj6)*((r00)*(r00))))+(((IkReal(4.00000000000000))*((cj6)*(cj6))*((px)*(px))*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.00258634900994560))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-0.760000000000000))*(cj6)*(pp)*(px)*((r02)*(r02))))+(((IkReal(0.00517269801989120))*(cj6)*(r00)*(r01)*(sj6)))+(((IkReal(-4.00000000000000))*(pp)*(px)*(py)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(-1.52000000000000))*(cj6)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(0.0691926400000000))*(cj6)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(8.00000000000000))*(pz)*(r00)*(r02)*((cj6)*(cj6))*((px)*(px)*(px))))+(((IkReal(1.52000000000000))*(cj6)*(pp)*(pz)*(r00)*(r02)))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(8.00000000000000))*(px)*(pz)*(r00)*(r02)*((py)*(py))*((sj6)*(sj6))))+(((IkReal(0.0671160000000000))*((pz)*(pz))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(-1.52000000000000))*(r01)*(r02)*(sj6)*((pz)*(pz)*(pz))))+(((IkReal(-0.0386506816000000))*(px)*(r00)*(r01)*(sj6)))+(((IkReal(0.0671160000000000))*((cj6)*(cj6))*((px)*(px))*((r02)*(r02))))+(((IkReal(0.0131466016000000))*(py)*(sj6)*((r02)*(r02))))+(((IkReal(0.0426876800000000))*(pp)*((r02)*(r02))))+(((IkReal(4.00000000000000))*((py)*(py))*((pz)*(pz))*((r01)*(r01))))+(((IkReal(-0.00233439289405440))*((r02)*(r02))))+(((IkReal(0.203424640000000))*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(0.203424640000000))*(px)*(py)*(r00)*(r01)*((sj6)*(sj6))))+(((IkReal(0.203424640000000))*(px)*(py)*(r00)*(r01)*((cj6)*(cj6))))+(((IkReal(0.0131466016000000))*(cj6)*(px)*((r02)*(r02))))+(((IkReal(-0.0517972832000000))*(cj6)*(pz)*(r00)*(r02)))+(((IkReal(0.134232000000000))*(cj6)*(r00)*(r01)*(sj6)*((pz)*(pz))))+(((IkReal(0.144400000000000))*((px)*(px))*((r00)*(r00))))+(((IkReal(16.0000000000000))*(cj6)*(r00)*(r01)*(sj6)*((px)*(px))*((py)*(py))))+(((IkReal(-0.0517972832000000))*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(0.00258634900994560))*((cj6)*(cj6))*((r00)*(r00))))+(((IkReal(0.203424640000000))*(cj6)*(r00)*(r01)*(sj6)*((px)*(px))))+(((IkReal(0.203424640000000))*(cj6)*(px)*(py)*(sj6)*((r00)*(r00))))+(((IkReal(0.203424640000000))*(px)*(pz)*(r00)*(r02)))+(((IkReal(8.00000000000000))*(px)*(r00)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(-4.00000000000000))*(pp)*(py)*(pz)*(r01)*(r02)))+(((IkReal(-4.00000000000000))*(pp)*(px)*(pz)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(0.0691926400000000))*(px)*(pz)*(r00)*(r02)*((cj6)*(cj6))))+(((IkReal(8.00000000000000))*(cj6)*(py)*(sj6)*((px)*(px)*(px))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(cj6)*(pp)*(py)*(pz)*(r00)*(r02)*(sj6)))+(((IkReal(-1.52000000000000))*(sj6)*((py)*(py)*(py))*((r01)*(r01))))+(((IkReal(4.00000000000000))*((px)*(px))*((py)*(py))*((r00)*(r00))*((sj6)*(sj6))))+(((IkReal(-4.00000000000000))*(pp)*((cj6)*(cj6))*((px)*(px))*((r00)*(r00))))+(((IkReal(4.00000000000000))*((cj6)*(cj6))*((px)*(px)*(px)*(px))*((r00)*(r00))))+(((IkReal(0.203424640000000))*(cj6)*(px)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(-1.52000000000000))*(cj6)*(px)*(py)*(pz)*(r01)*(r02)))+(((IkReal(4.00000000000000))*((px)*(px))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(0.0671160000000000))*((cj6)*(cj6))*((pz)*(pz))*((r00)*(r00))))+(((IkReal(-4.00000000000000))*(pp)*((pz)*(pz))*((r02)*(r02))))+(((IkReal(0.0691926400000000))*(cj6)*(px)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(0.760000000000000))*(pp)*(py)*(sj6)*((r01)*(r01))))+(((IkReal(4.00000000000000))*((py)*(py)*(py)*(py))*((r01)*(r01))*((sj6)*(sj6))))+(((IkReal(1.52000000000000))*(pp)*(pz)*(r01)*(r02)*(sj6)))+(((IkReal(-3.04000000000000))*(px)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(0.203424640000000))*(cj6)*(r00)*(r01)*(sj6)*((py)*(py))))+(((IkReal(4.00000000000000))*((pz)*(pz)*(pz)*(pz))*((r02)*(r02))))+(((IkReal(8.00000000000000))*(py)*(r01)*(r02)*((pz)*(pz)*(pz))))+(((IkReal(0.134232000000000))*(cj6)*(px)*(py)*(sj6)*((r02)*(r02))))+(((IkReal(8.00000000000000))*(pz)*(r01)*(r02)*((py)*(py)*(py))*((sj6)*(sj6))))+(((IkReal(4.00000000000000))*((cj6)*(cj6))*((px)*(px))*((py)*(py))*((r01)*(r01))))+((((cj6)*(cj6))*((pp)*(pp))*((r00)*(r00))))+(((IkReal(-1.52000000000000))*(py)*(sj6)*((pz)*(pz))*((r01)*(r01))))+(((IkReal(2.00000000000000))*(cj6)*(r00)*(r01)*(sj6)*((pp)*(pp))))+(((IkReal(0.760000000000000))*(cj6)*(pp)*(px)*((r00)*(r00))))+(((IkReal(0.144400000000000))*((py)*(py))*((r01)*(r01)))));
polyroots4(op,zeror,numroots);
IkReal j7array[4], cj7array[4], sj7array[4], tempj7array[1];
int numsolutions = 0;
for(int ij7 = 0; ij7 < numroots; ++ij7)
{
IkReal htj7 = zeror[ij7];
tempj7array[0]=((IkReal(2.00000000000000))*(atan(htj7)));
for(int kj7 = 0; kj7 < 1; ++kj7)
{
j7array[numsolutions] = tempj7array[kj7];
if( j7array[numsolutions] > IKPI )
{
    j7array[numsolutions]-=IK2PI;
}
else if( j7array[numsolutions] < -IKPI )
{
    j7array[numsolutions]+=IK2PI;
}
sj7array[numsolutions] = IKsin(j7array[numsolutions]);
cj7array[numsolutions] = IKcos(j7array[numsolutions]);
numsolutions++;
}
}
bool j7valid[4]={true,true,true,true};
_nj7 = 4;
for(int ij7 = 0; ij7 < numsolutions; ++ij7)
    {
if( !j7valid[ij7] )
{
    continue;
}
    j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
htj7 = IKtan(j7/2);

_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < numsolutions; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
{
IkReal j10array[2], cj10array[2], sj10array[2];
bool j10valid[2]={false};
_nj10 = 2;
sj10array[0]=((((IkReal(-1.00000000000000))*(r00)*(sj6)))+(((cj6)*(r01))));
if( sj10array[0] >= -1-IKFAST_SINCOS_THRESH && sj10array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j10valid[0] = j10valid[1] = true;
    j10array[0] = IKasin(sj10array[0]);
    cj10array[0] = IKcos(j10array[0]);
    sj10array[1] = sj10array[0];
    j10array[1] = j10array[0] > 0 ? (IKPI-j10array[0]) : (-IKPI-j10array[0]);
    cj10array[1] = -cj10array[0];
}
else if( isnan(sj10array[0]) )
{
    // probably any value will work
    j10valid[0] = true;
    cj10array[0] = 1; sj10array[0] = 0; j10array[0] = 0;
}
for(int ij10 = 0; ij10 < 2; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 2; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj10);
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x26=(pz)*(pz);
IkReal x27=(px)*(px);
IkReal x28=(py)*(py);
IkReal x29=((IkReal(0.380000000000000))*(r02));
IkReal x30=((cj6)*(px));
IkReal x31=((py)*(sj6));
IkReal x32=((IkReal(1.00000000000000))*(sj6));
IkReal x33=((cj7)*(pp));
IkReal x34=((IkReal(1.00000000000000))*(r02));
IkReal x35=((cj7)*(pz));
IkReal x36=((pz)*(r01));
IkReal x37=((IkReal(2.00000000000000))*(cj7));
IkReal x38=((cj7)*(r01));
IkReal x39=((r02)*(sj7));
IkReal x40=((cj6)*(r00));
IkReal x41=((IkReal(2.00000000000000))*(sj7));
IkReal x42=((px)*(r00));
IkReal x43=((IkReal(2.00000000000000))*(pz));
IkReal x44=((cj7)*(r02));
IkReal x45=((IkReal(2.00000000000000))*(r02));
IkReal x46=((py)*(r01));
IkReal x47=((sj7)*(x40));
IkReal x48=((IkReal(2.00000000000000))*(x46));
IkReal x49=((r01)*(sj6)*(sj7));
IkReal x50=((IkReal(2.00000000000000))*(x28));
IkReal x51=((r02)*(x26));
IkReal x52=((cj7)*(x40));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(py)))+(((IkReal(-1.00000000000000))*(px)*(x32))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x32)))+(((cj6)*(r01))));
evalcond[3]=((x49)+(x47)+(((IkReal(-1.00000000000000))*(cj7)*(x34))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x42)))+(((IkReal(-1.00000000000000))*(x46)))+(((IkReal(-1.00000000000000))*(pz)*(x34)))+(((IkReal(0.190000000000000))*(sj6)*(x38)))+(((IkReal(0.190000000000000))*(x39)))+(((IkReal(0.190000000000000))*(x52))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x34)))+(((IkReal(-1.00000000000000))*(x32)*(x38)))+(((IkReal(-1.00000000000000))*(x52))));
evalcond[6]=((((IkReal(-0.190000000000000))*(x44)))+(((IkReal(-1.00000000000000))*(x32)*(x36)))+(((IkReal(0.190000000000000))*(x47)))+(((IkReal(0.190000000000000))*(x49)))+(((IkReal(-1.00000000000000))*(pz)*(x40)))+(((r02)*(x31)))+(((r02)*(x30))));
evalcond[7]=((((x27)*(x37)*(x40)))+(((IkReal(0.0361000000000000))*(x52)))+(((IkReal(0.0361000000000000))*(x39)))+(((r01)*(sj6)*(x28)*(x37)))+(((IkReal(0.0361000000000000))*(sj6)*(x38)))+(((IkReal(-0.380000000000000))*(x42)))+(((IkReal(-0.380000000000000))*(x46)))+(((x31)*(x35)*(x45)))+(((IkReal(-1.00000000000000))*(pz)*(x29)))+(((pz)*(x41)*(x42)))+(((IkReal(2.00000000000000))*(x26)*(x39)))+(((x31)*(x37)*(x42)))+(((IkReal(-1.00000000000000))*(r01)*(x32)*(x33)))+(((IkReal(-1.00000000000000))*(pp)*(sj7)*(x34)))+(((py)*(x36)*(x41)))+(((x30)*(x37)*(x46)))+(((IkReal(-1.00000000000000))*(x33)*(x40)))+(((x30)*(x35)*(x45))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x31)*(x41)*(x42)))+(((x29)*(x31)))+(((x29)*(x30)))+(((x35)*(x48)))+(((x37)*(x51)))+(((IkReal(-1.00000000000000))*(x31)*(x39)*(x43)))+(((IkReal(-0.380000000000000))*(pz)*(x40)))+(((IkReal(0.0361000000000000))*(x49)))+(((IkReal(0.0361000000000000))*(x47)))+(((IkReal(-1.00000000000000))*(x27)*(x40)*(x41)))+(((IkReal(-0.0361000000000000))*(x44)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x28)*(x41)))+(((IkReal(-1.00000000000000))*(x33)*(x34)))+(((IkReal(-1.00000000000000))*(x30)*(x41)*(x46)))+(((pp)*(x49)))+(((pp)*(x47)))+(((IkReal(-1.00000000000000))*(x30)*(x39)*(x43)))+(((IkReal(-0.380000000000000))*(sj6)*(x36)))+(((IkReal(2.00000000000000))*(x35)*(x42))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j9array[2], cj9array[2], sj9array[2];
bool j9valid[2]={false};
_nj9 = 2;
IkReal x53=((IkReal(7.40469379642548))*(cj7));
cj9array[0]=((IkReal(-0.337072573793619))+(((IkReal(-7.40469379642548))*(pz)*(sj7)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x53)))+(((IkReal(19.4860363063828))*(pp)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x53))));
if( cj9array[0] >= -1-IKFAST_SINCOS_THRESH && cj9array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j9valid[0] = j9valid[1] = true;
    j9array[0] = IKacos(cj9array[0]);
    sj9array[0] = IKsin(j9array[0]);
    cj9array[1] = cj9array[0];
    j9array[1] = -j9array[0];
    sj9array[1] = -sj9array[0];
}
else if( isnan(cj9array[0]) )
{
    // probably any value will work
    j9valid[0] = true;
    cj9array[0] = 1; sj9array[0] = 0; j9array[0] = 0;
}
for(int ij9 = 0; ij9 < 2; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 2; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[1];
IkReal x54=((IkReal(2.00000000000000))*(cj6));
IkReal x55=((pz)*(r02));
IkReal x56=((r00)*(sj6));
IkReal x57=((cj6)*(r01));
IkReal x58=((px)*(sj6));
IkReal x59=((py)*(r00));
IkReal x60=((IkReal(0.380000000000000))*(cj7));
IkReal x61=((IkReal(0.380000000000000))*(r02)*(sj7));
IkReal x62=((IkReal(0.380000000000000))*(pz)*(sj7));
evalcond[0]=((IkReal(-0.0533981600000000))+(((pp)*(x57)))+(((IkReal(-1.00000000000000))*(r01)*(x54)*((py)*(py))))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x60)))+(((x59)*(x60)))+(((IkReal(0.0361000000000000))*(x57)))+(((IkReal(-1.00000000000000))*(pp)*(x56)))+(((IkReal(-1.00000000000000))*(py)*(x54)*(x55)))+(((IkReal(-0.0513188000000000))*(IKcos(j9))))+(((IkReal(2.00000000000000))*(py)*(r01)*(x58)))+(((IkReal(2.00000000000000))*(x55)*(x58)))+(((IkReal(-1.00000000000000))*(px)*(x54)*(x59)))+(((IkReal(-1.00000000000000))*(x58)*(x61)))+(((x56)*(x62)))+(((IkReal(-0.0361000000000000))*(x56)))+(((cj6)*(py)*(x61)))+(((IkReal(-1.00000000000000))*(x57)*(x62)))+(((IkReal(2.00000000000000))*(x56)*((px)*(px)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x63=((r01)*(sj7));
IkReal x64=((cj6)*(cj7));
IkReal x65=((cj7)*(sj6));
IkReal x66=((IkReal(3475000.00000000))*(pz));
IkReal x67=((IkReal(4615000.00000000))*(cj9));
IkReal x68=((pz)*(r01));
IkReal x69=((px)*(r02));
IkReal x70=((py)*(r02));
IkReal x71=((IkReal(3475000.00000000))*(px));
IkReal x72=((pz)*(sj7));
IkReal x73=((r00)*(sj7));
IkReal x74=((IkReal(3475000.00000000))*(py));
IkReal x75=((pz)*(r00));
IkReal x76=((IkReal(4615000.00000000))*(sj9));
IkReal x77=((px)*(x76));
IkReal x78=((py)*(x76));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r01)*(x64)*(x66)))+(((IkReal(-1.00000000000000))*(x65)*(x67)*(x69)))+(((x64)*(x67)*(x70)))+(((IkReal(-3475000.00000000))*(x65)*(x69)))+(((x65)*(x67)*(x75)))+(((IkReal(3475000.00000000))*(x64)*(x70)))+(((px)*(x63)*(x67)))+(((IkReal(-1.00000000000000))*(py)*(x67)*(x73)))+(((x63)*(x71)))+(((IkReal(-1.00000000000000))*(x72)*(x76)))+(((IkReal(-1.00000000000000))*(x73)*(x74)))+(((r00)*(x65)*(x66)))+(((IkReal(-1.00000000000000))*(x64)*(x77)))+(((IkReal(-1.00000000000000))*(x64)*(x67)*(x68)))+(((IkReal(876850.000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(x65)*(x78))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x65)*(x75)*(x76)))+(((IkReal(-1.00000000000000))*(px)*(x64)*(x67)))+(((x64)*(x68)*(x76)))+(((IkReal(-1.00000000000000))*(sj7)*(x66)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x63)*(x77)))+(((IkReal(-1.00000000000000))*(x64)*(x70)*(x76)))+(((x65)*(x69)*(x76)))+(((IkReal(-1.00000000000000))*(py)*(x65)*(x67)))+(((IkReal(-1.00000000000000))*(x67)*(x72)))+(((x73)*(x78)))+(((IkReal(-1.00000000000000))*(x64)*(x71)))+(((IkReal(-1.00000000000000))*(x65)*(x74))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(r01)*(x64)*(x66)))+(((IkReal(-1.00000000000000))*(x65)*(x67)*(x69)))+(((x64)*(x67)*(x70)))+(((IkReal(-3475000.00000000))*(x65)*(x69)))+(((x65)*(x67)*(x75)))+(((IkReal(3475000.00000000))*(x64)*(x70)))+(((px)*(x63)*(x67)))+(((IkReal(-1.00000000000000))*(py)*(x67)*(x73)))+(((x63)*(x71)))+(((IkReal(-1.00000000000000))*(x72)*(x76)))+(((IkReal(-1.00000000000000))*(x73)*(x74)))+(((r00)*(x65)*(x66)))+(((IkReal(-1.00000000000000))*(x64)*(x77)))+(((IkReal(-1.00000000000000))*(x64)*(x67)*(x68)))+(((IkReal(876850.000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(x65)*(x78)))))), ((gconst8)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x65)*(x75)*(x76)))+(((IkReal(-1.00000000000000))*(px)*(x64)*(x67)))+(((x64)*(x68)*(x76)))+(((IkReal(-1.00000000000000))*(sj7)*(x66)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x63)*(x77)))+(((IkReal(-1.00000000000000))*(x64)*(x70)*(x76)))+(((x65)*(x69)*(x76)))+(((IkReal(-1.00000000000000))*(py)*(x65)*(x67)))+(((IkReal(-1.00000000000000))*(x67)*(x72)))+(((x73)*(x78)))+(((IkReal(-1.00000000000000))*(x64)*(x71)))+(((IkReal(-1.00000000000000))*(x65)*(x74)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x79=IKsin(j8);
IkReal x80=IKcos(j8);
IkReal x81=((IkReal(1.00000000000000))*(cj7));
IkReal x82=((px)*(sj7));
IkReal x83=((py)*(sj6));
IkReal x84=((IkReal(0.184600000000000))*(sj9));
IkReal x85=((r02)*(sj6));
IkReal x86=((IkReal(1.00000000000000))*(sj7));
IkReal x87=((IkReal(0.184600000000000))*(cj9));
IkReal x88=((py)*(r00));
IkReal x89=((IkReal(0.139000000000000))*(x79));
IkReal x90=((IkReal(0.139000000000000))*(x80));
IkReal x91=((cj6)*(pz)*(r01));
IkReal x92=((pz)*(r00)*(sj6));
IkReal x93=((cj6)*(py)*(r02));
IkReal x94=((x79)*(x87));
IkReal x95=((x80)*(x84));
IkReal x96=((x80)*(x87));
IkReal x97=((x79)*(x84));
IkReal x98=((x89)+(x94));
IkReal x99=((x90)+(x97)+(x96));
evalcond[0]=((((cj6)*(x82)))+(((sj7)*(x83)))+(x98)+(((IkReal(-1.00000000000000))*(x95)))+(((IkReal(-1.00000000000000))*(pz)*(x81))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x81)*(x83)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x81)))+(x99)+(((IkReal(-1.00000000000000))*(pz)*(x86))));
evalcond[2]=((((IkReal(-1.00000000000000))*(px)*(x81)*(x85)))+(((r01)*(x82)))+(((IkReal(-1.00000000000000))*(x86)*(x88)))+(((cj7)*(x93)))+(((cj7)*(x92)))+(x98)+(((IkReal(-1.00000000000000))*(x95)))+(((IkReal(-1.00000000000000))*(x81)*(x91))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x81)*(x88)))+(((x82)*(x85)))+(((sj7)*(x91)))+(((IkReal(-1.00000000000000))*(x86)*(x93)))+(((IkReal(-1.00000000000000))*(x86)*(x92)))+(((cj7)*(px)*(r01)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(x99))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x100=((cj7)*(sj9));
IkReal x101=((IkReal(4615000.00000000))*(cj9));
IkReal x102=((IkReal(3475000.00000000))*(cj7));
IkReal x103=((cj6)*(px));
IkReal x104=((IkReal(3475000.00000000))*(sj7));
IkReal x105=((py)*(sj6));
IkReal x106=((IkReal(4615000.00000000))*(sj9));
IkReal x107=((pz)*(sj7));
IkReal x108=((IkReal(4615000.00000000))*(x103));
IkReal x109=((sj7)*(x105));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(pz)*(x102)))+(((IkReal(-1.00000000000000))*(x100)*(x108)))+(((sj7)*(x101)*(x103)))+(((IkReal(-1.00000000000000))*(x106)*(x107)))+(((x103)*(x104)))+(((IkReal(-4615000.00000000))*(x100)*(x105)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x101)))+(((x104)*(x105)))+(((x101)*(x109)))+(((IkReal(876850.000000000))*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(pz)*(x104)))+(((IkReal(-1.00000000000000))*(x101)*(x107)))+(((IkReal(-1.00000000000000))*(cj7)*(x101)*(x105)))+(((IkReal(-1.00000000000000))*(cj7)*(x101)*(x103)))+(((IkReal(4615000.00000000))*(pz)*(x100)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x106)*(x109)))+(((IkReal(-1.00000000000000))*(x102)*(x105)))+(((IkReal(-1.00000000000000))*(x102)*(x103)))+(((IkReal(-1.00000000000000))*(sj7)*(x103)*(x106))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(pz)*(x102)))+(((IkReal(-1.00000000000000))*(x100)*(x108)))+(((sj7)*(x101)*(x103)))+(((IkReal(-1.00000000000000))*(x106)*(x107)))+(((x103)*(x104)))+(((IkReal(-4615000.00000000))*(x100)*(x105)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x101)))+(((x104)*(x105)))+(((x101)*(x109)))+(((IkReal(876850.000000000))*(sj9)))))), ((gconst7)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(pz)*(x104)))+(((IkReal(-1.00000000000000))*(x101)*(x107)))+(((IkReal(-1.00000000000000))*(cj7)*(x101)*(x105)))+(((IkReal(-1.00000000000000))*(cj7)*(x101)*(x103)))+(((IkReal(4615000.00000000))*(pz)*(x100)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x106)*(x109)))+(((IkReal(-1.00000000000000))*(x102)*(x105)))+(((IkReal(-1.00000000000000))*(x102)*(x103)))+(((IkReal(-1.00000000000000))*(sj7)*(x103)*(x106)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x110=IKsin(j8);
IkReal x111=IKcos(j8);
IkReal x112=((IkReal(1.00000000000000))*(cj7));
IkReal x113=((px)*(sj7));
IkReal x114=((py)*(sj6));
IkReal x115=((IkReal(0.184600000000000))*(sj9));
IkReal x116=((r02)*(sj6));
IkReal x117=((IkReal(1.00000000000000))*(sj7));
IkReal x118=((IkReal(0.184600000000000))*(cj9));
IkReal x119=((py)*(r00));
IkReal x120=((IkReal(0.139000000000000))*(x110));
IkReal x121=((IkReal(0.139000000000000))*(x111));
IkReal x122=((cj6)*(pz)*(r01));
IkReal x123=((pz)*(r00)*(sj6));
IkReal x124=((cj6)*(py)*(r02));
IkReal x125=((x110)*(x118));
IkReal x126=((x111)*(x115));
IkReal x127=((x111)*(x118));
IkReal x128=((x110)*(x115));
IkReal x129=((x125)+(x120));
IkReal x130=((x127)+(x121)+(x128));
evalcond[0]=((((cj6)*(x113)))+(((sj7)*(x114)))+(((IkReal(-1.00000000000000))*(x126)))+(x129)+(((IkReal(-1.00000000000000))*(pz)*(x112))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x112)*(x114)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x112)))+(x130)+(((IkReal(-1.00000000000000))*(pz)*(x117))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x117)*(x119)))+(((IkReal(-1.00000000000000))*(x112)*(x122)))+(((cj7)*(x124)))+(((cj7)*(x123)))+(((IkReal(-1.00000000000000))*(x126)))+(x129)+(((r01)*(x113)))+(((IkReal(-1.00000000000000))*(px)*(x112)*(x116))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x112)*(x119)))+(((x113)*(x116)))+(((sj7)*(x122)))+(((IkReal(-1.00000000000000))*(x117)*(x124)))+(((IkReal(-1.00000000000000))*(x117)*(x123)))+(((IkReal(-1.00000000000000))*(x130)))+(((cj7)*(px)*(r01)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x131=(pz)*(pz);
IkReal x132=(px)*(px);
IkReal x133=(py)*(py);
IkReal x134=((IkReal(0.380000000000000))*(r02));
IkReal x135=((cj6)*(px));
IkReal x136=((py)*(sj6));
IkReal x137=((IkReal(1.00000000000000))*(sj6));
IkReal x138=((cj7)*(pp));
IkReal x139=((IkReal(1.00000000000000))*(r02));
IkReal x140=((cj7)*(pz));
IkReal x141=((pz)*(r01));
IkReal x142=((IkReal(2.00000000000000))*(cj7));
IkReal x143=((cj7)*(r01));
IkReal x144=((r02)*(sj7));
IkReal x145=((cj6)*(r00));
IkReal x146=((IkReal(2.00000000000000))*(sj7));
IkReal x147=((px)*(r00));
IkReal x148=((IkReal(2.00000000000000))*(pz));
IkReal x149=((cj7)*(r02));
IkReal x150=((IkReal(2.00000000000000))*(r02));
IkReal x151=((py)*(r01));
IkReal x152=((sj7)*(x145));
IkReal x153=((IkReal(2.00000000000000))*(x151));
IkReal x154=((r01)*(sj6)*(sj7));
IkReal x155=((IkReal(2.00000000000000))*(x133));
IkReal x156=((r02)*(x131));
IkReal x157=((cj7)*(x145));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(px)*(x137)))+(((cj6)*(py))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj6)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(x137))));
evalcond[3]=((x154)+(x152)+(((IkReal(-1.00000000000000))*(cj7)*(x139))));
evalcond[4]=((((IkReal(0.190000000000000))*(x144)))+(((IkReal(-1.00000000000000))*(pz)*(x139)))+(((IkReal(0.190000000000000))*(sj6)*(x143)))+(((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x147)))+(((IkReal(0.190000000000000))*(x157))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x137)*(x143)))+(((IkReal(-1.00000000000000))*(sj7)*(x139)))+(((IkReal(-1.00000000000000))*(x157))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x137)*(x141)))+(((IkReal(-0.190000000000000))*(x149)))+(((r02)*(x136)))+(((r02)*(x135)))+(((IkReal(-1.00000000000000))*(pz)*(x145)))+(((IkReal(0.190000000000000))*(x152)))+(((IkReal(0.190000000000000))*(x154))));
evalcond[7]=((((x136)*(x140)*(x150)))+(((py)*(x141)*(x146)))+(((IkReal(-1.00000000000000))*(pz)*(x134)))+(((IkReal(2.00000000000000))*(x131)*(x144)))+(((x135)*(x140)*(x150)))+(((x135)*(x142)*(x151)))+(((IkReal(-1.00000000000000))*(pp)*(sj7)*(x139)))+(((IkReal(-0.380000000000000))*(x147)))+(((x132)*(x142)*(x145)))+(((IkReal(-1.00000000000000))*(r01)*(x137)*(x138)))+(((IkReal(0.0361000000000000))*(sj6)*(x143)))+(((IkReal(-0.380000000000000))*(x151)))+(((pz)*(x146)*(x147)))+(((x136)*(x142)*(x147)))+(((IkReal(0.0361000000000000))*(x157)))+(((r01)*(sj6)*(x133)*(x142)))+(((IkReal(0.0361000000000000))*(x144)))+(((IkReal(-1.00000000000000))*(x138)*(x145))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x132)*(x145)*(x146)))+(((x140)*(x153)))+(((IkReal(-0.0361000000000000))*(x149)))+(((x142)*(x156)))+(((IkReal(-1.00000000000000))*(x138)*(x139)))+(((IkReal(-1.00000000000000))*(x135)*(x146)*(x151)))+(((IkReal(-0.380000000000000))*(pz)*(x145)))+(((IkReal(-0.380000000000000))*(sj6)*(x141)))+(((IkReal(-1.00000000000000))*(x136)*(x146)*(x147)))+(((x134)*(x135)))+(((x134)*(x136)))+(((IkReal(-1.00000000000000))*(x136)*(x144)*(x148)))+(((IkReal(-1.00000000000000))*(x135)*(x144)*(x148)))+(((IkReal(2.00000000000000))*(x140)*(x147)))+(((pp)*(x152)))+(((pp)*(x154)))+(((IkReal(0.0361000000000000))*(x154)))+(((IkReal(0.0361000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x133)*(x146))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j9array[2], cj9array[2], sj9array[2];
bool j9valid[2]={false};
_nj9 = 2;
IkReal x158=((IkReal(7.40469379642548))*(cj7));
cj9array[0]=((IkReal(-0.337072573793619))+(((IkReal(-7.40469379642548))*(pz)*(sj7)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x158)))+(((IkReal(19.4860363063828))*(pp)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x158))));
if( cj9array[0] >= -1-IKFAST_SINCOS_THRESH && cj9array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j9valid[0] = j9valid[1] = true;
    j9array[0] = IKacos(cj9array[0]);
    sj9array[0] = IKsin(j9array[0]);
    cj9array[1] = cj9array[0];
    j9array[1] = -j9array[0];
    sj9array[1] = -sj9array[0];
}
else if( isnan(cj9array[0]) )
{
    // probably any value will work
    j9valid[0] = true;
    cj9array[0] = 1; sj9array[0] = 0; j9array[0] = 0;
}
for(int ij9 = 0; ij9 < 2; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 2; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[1];
IkReal x159=((IkReal(2.00000000000000))*(cj6));
IkReal x160=((pz)*(r02));
IkReal x161=((r00)*(sj6));
IkReal x162=((cj6)*(r01));
IkReal x163=((px)*(sj6));
IkReal x164=((py)*(r00));
IkReal x165=((IkReal(0.380000000000000))*(cj7));
IkReal x166=((IkReal(0.380000000000000))*(r02)*(sj7));
IkReal x167=((IkReal(0.380000000000000))*(pz)*(sj7));
evalcond[0]=((IkReal(0.0533981600000000))+(((IkReal(-1.00000000000000))*(r01)*(x159)*((py)*(py))))+(((x161)*(x167)))+(((IkReal(2.00000000000000))*(x161)*((px)*(px))))+(((IkReal(2.00000000000000))*(x160)*(x163)))+(((IkReal(-1.00000000000000))*(py)*(x159)*(x160)))+(((IkReal(-1.00000000000000))*(x163)*(x166)))+(((IkReal(-1.00000000000000))*(pp)*(x161)))+(((x164)*(x165)))+(((IkReal(-1.00000000000000))*(x162)*(x167)))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x165)))+(((IkReal(0.0513188000000000))*(IKcos(j9))))+(((pp)*(x162)))+(((cj6)*(py)*(x166)))+(((IkReal(0.0361000000000000))*(x162)))+(((IkReal(2.00000000000000))*(py)*(r01)*(x163)))+(((IkReal(-0.0361000000000000))*(x161)))+(((IkReal(-1.00000000000000))*(px)*(x159)*(x164))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x168=((r01)*(sj7));
IkReal x169=((cj6)*(cj7));
IkReal x170=((cj7)*(sj6));
IkReal x171=((IkReal(3475000.00000000))*(pz));
IkReal x172=((IkReal(4615000.00000000))*(cj9));
IkReal x173=((pz)*(r01));
IkReal x174=((px)*(r02));
IkReal x175=((py)*(r02));
IkReal x176=((IkReal(3475000.00000000))*(px));
IkReal x177=((pz)*(sj7));
IkReal x178=((r00)*(sj7));
IkReal x179=((IkReal(3475000.00000000))*(py));
IkReal x180=((pz)*(r00));
IkReal x181=((IkReal(4615000.00000000))*(sj9));
IkReal x182=((px)*(x181));
IkReal x183=((py)*(x181));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r00)*(x170)*(x171)))+(((r01)*(x169)*(x171)))+(((x178)*(x179)))+(((py)*(x172)*(x178)))+(((IkReal(-1.00000000000000))*(x170)*(x183)))+(((x170)*(x172)*(x174)))+(((IkReal(-1.00000000000000))*(px)*(x168)*(x172)))+(((IkReal(3475000.00000000))*(x170)*(x174)))+(((IkReal(-1.00000000000000))*(x177)*(x181)))+(((x169)*(x172)*(x173)))+(((IkReal(-1.00000000000000))*(x169)*(x182)))+(((IkReal(-3475000.00000000))*(x169)*(x175)))+(((IkReal(-1.00000000000000))*(x168)*(x176)))+(((IkReal(-1.00000000000000))*(x169)*(x172)*(x175)))+(((IkReal(-1.00000000000000))*(x170)*(x172)*(x180)))+(((IkReal(876850.000000000))*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x178)*(x183)))+(((x168)*(x182)))+(((x169)*(x175)*(x181)))+(((IkReal(-1.00000000000000))*(py)*(x170)*(x172)))+(((x170)*(x180)*(x181)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x170)*(x179)))+(((IkReal(-1.00000000000000))*(px)*(x169)*(x172)))+(((IkReal(-1.00000000000000))*(sj7)*(x171)))+(((IkReal(-1.00000000000000))*(x169)*(x173)*(x181)))+(((IkReal(-1.00000000000000))*(x170)*(x174)*(x181)))+(((IkReal(-1.00000000000000))*(x169)*(x176)))+(((IkReal(-1.00000000000000))*(x172)*(x177))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r00)*(x170)*(x171)))+(((r01)*(x169)*(x171)))+(((x178)*(x179)))+(((py)*(x172)*(x178)))+(((IkReal(-1.00000000000000))*(x170)*(x183)))+(((x170)*(x172)*(x174)))+(((IkReal(-1.00000000000000))*(px)*(x168)*(x172)))+(((IkReal(3475000.00000000))*(x170)*(x174)))+(((IkReal(-1.00000000000000))*(x177)*(x181)))+(((x169)*(x172)*(x173)))+(((IkReal(-1.00000000000000))*(x169)*(x182)))+(((IkReal(-3475000.00000000))*(x169)*(x175)))+(((IkReal(-1.00000000000000))*(x168)*(x176)))+(((IkReal(-1.00000000000000))*(x169)*(x172)*(x175)))+(((IkReal(-1.00000000000000))*(x170)*(x172)*(x180)))+(((IkReal(876850.000000000))*(sj9)))))), ((gconst10)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x178)*(x183)))+(((x168)*(x182)))+(((x169)*(x175)*(x181)))+(((IkReal(-1.00000000000000))*(py)*(x170)*(x172)))+(((x170)*(x180)*(x181)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x170)*(x179)))+(((IkReal(-1.00000000000000))*(px)*(x169)*(x172)))+(((IkReal(-1.00000000000000))*(sj7)*(x171)))+(((IkReal(-1.00000000000000))*(x169)*(x173)*(x181)))+(((IkReal(-1.00000000000000))*(x170)*(x174)*(x181)))+(((IkReal(-1.00000000000000))*(x169)*(x176)))+(((IkReal(-1.00000000000000))*(x172)*(x177)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x184=IKsin(j8);
IkReal x185=IKcos(j8);
IkReal x186=((IkReal(1.00000000000000))*(cj7));
IkReal x187=((px)*(sj7));
IkReal x188=((py)*(sj6));
IkReal x189=((IkReal(0.184600000000000))*(sj9));
IkReal x190=((r02)*(sj6));
IkReal x191=((IkReal(1.00000000000000))*(sj7));
IkReal x192=((IkReal(0.184600000000000))*(cj9));
IkReal x193=((py)*(r00));
IkReal x194=((IkReal(0.139000000000000))*(x184));
IkReal x195=((IkReal(0.139000000000000))*(x185));
IkReal x196=((cj6)*(pz)*(r01));
IkReal x197=((pz)*(r00)*(sj6));
IkReal x198=((cj6)*(py)*(r02));
IkReal x199=((x185)*(x189));
IkReal x200=((x184)*(x192));
IkReal x201=((x185)*(x192));
IkReal x202=((x184)*(x189));
IkReal x203=((x194)+(x200));
IkReal x204=((x195)+(x202)+(x201));
evalcond[0]=((((IkReal(-1.00000000000000))*(pz)*(x186)))+(((IkReal(-1.00000000000000))*(x199)))+(((cj6)*(x187)))+(x203)+(((sj7)*(x188))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x191)))+(((IkReal(-1.00000000000000))*(x186)*(x188)))+(x204)+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x186))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x191)*(x193)))+(((r01)*(x187)))+(((IkReal(-1.00000000000000))*(x186)*(x196)))+(((cj7)*(x198)))+(((cj7)*(x197)))+(x199)+(((IkReal(-1.00000000000000))*(x203)))+(((IkReal(-1.00000000000000))*(px)*(x186)*(x190))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x191)*(x198)))+(((IkReal(-1.00000000000000))*(x191)*(x197)))+(((x187)*(x190)))+(((IkReal(-1.00000000000000))*(x186)*(x193)))+(((sj7)*(x196)))+(x204)+(((cj7)*(px)*(r01)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x205=((cj7)*(sj9));
IkReal x206=((IkReal(4615000.00000000))*(cj9));
IkReal x207=((IkReal(3475000.00000000))*(cj7));
IkReal x208=((cj6)*(px));
IkReal x209=((IkReal(3475000.00000000))*(sj7));
IkReal x210=((py)*(sj6));
IkReal x211=((IkReal(4615000.00000000))*(sj9));
IkReal x212=((pz)*(sj7));
IkReal x213=((IkReal(4615000.00000000))*(x208));
IkReal x214=((sj7)*(x210));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj7)*(pz)*(x206)))+(((IkReal(-4615000.00000000))*(x205)*(x210)))+(((x206)*(x214)))+(((IkReal(-1.00000000000000))*(pz)*(x207)))+(((IkReal(-1.00000000000000))*(x205)*(x213)))+(((x209)*(x210)))+(((IkReal(-1.00000000000000))*(x211)*(x212)))+(((sj7)*(x206)*(x208)))+(((x208)*(x209)))+(((IkReal(876850.000000000))*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x206)*(x208)))+(((IkReal(-1.00000000000000))*(sj7)*(x208)*(x211)))+(((IkReal(-1.00000000000000))*(x206)*(x212)))+(((IkReal(4615000.00000000))*(pz)*(x205)))+(((IkReal(-1.00000000000000))*(pz)*(x209)))+(((IkReal(-1.00000000000000))*(x207)*(x210)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x207)*(x208)))+(((IkReal(-1.00000000000000))*(x211)*(x214)))+(((IkReal(-1.00000000000000))*(cj7)*(x206)*(x210))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(cj7)*(pz)*(x206)))+(((IkReal(-4615000.00000000))*(x205)*(x210)))+(((x206)*(x214)))+(((IkReal(-1.00000000000000))*(pz)*(x207)))+(((IkReal(-1.00000000000000))*(x205)*(x213)))+(((x209)*(x210)))+(((IkReal(-1.00000000000000))*(x211)*(x212)))+(((sj7)*(x206)*(x208)))+(((x208)*(x209)))+(((IkReal(876850.000000000))*(sj9)))))), ((gconst9)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x206)*(x208)))+(((IkReal(-1.00000000000000))*(sj7)*(x208)*(x211)))+(((IkReal(-1.00000000000000))*(x206)*(x212)))+(((IkReal(4615000.00000000))*(pz)*(x205)))+(((IkReal(-1.00000000000000))*(pz)*(x209)))+(((IkReal(-1.00000000000000))*(x207)*(x210)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x207)*(x208)))+(((IkReal(-1.00000000000000))*(x211)*(x214)))+(((IkReal(-1.00000000000000))*(cj7)*(x206)*(x210)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x215=IKsin(j8);
IkReal x216=IKcos(j8);
IkReal x217=((IkReal(1.00000000000000))*(cj7));
IkReal x218=((px)*(sj7));
IkReal x219=((py)*(sj6));
IkReal x220=((IkReal(0.184600000000000))*(sj9));
IkReal x221=((r02)*(sj6));
IkReal x222=((IkReal(1.00000000000000))*(sj7));
IkReal x223=((IkReal(0.184600000000000))*(cj9));
IkReal x224=((py)*(r00));
IkReal x225=((IkReal(0.139000000000000))*(x215));
IkReal x226=((IkReal(0.139000000000000))*(x216));
IkReal x227=((cj6)*(pz)*(r01));
IkReal x228=((pz)*(r00)*(sj6));
IkReal x229=((cj6)*(py)*(r02));
IkReal x230=((x216)*(x220));
IkReal x231=((x215)*(x223));
IkReal x232=((x216)*(x223));
IkReal x233=((x215)*(x220));
IkReal x234=((x225)+(x231));
IkReal x235=((x226)+(x232)+(x233));
evalcond[0]=((((IkReal(-1.00000000000000))*(pz)*(x217)))+(((cj6)*(x218)))+(((IkReal(-1.00000000000000))*(x230)))+(x234)+(((sj7)*(x219))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x217)))+(x235)+(((IkReal(-1.00000000000000))*(x217)*(x219)))+(((IkReal(-1.00000000000000))*(pz)*(x222))));
evalcond[2]=((((cj7)*(x228)))+(((cj7)*(x229)))+(((IkReal(-1.00000000000000))*(x222)*(x224)))+(((IkReal(-1.00000000000000))*(x234)))+(x230)+(((IkReal(-1.00000000000000))*(x217)*(x227)))+(((r01)*(x218)))+(((IkReal(-1.00000000000000))*(px)*(x217)*(x221))));
evalcond[3]=((((sj7)*(x227)))+(((IkReal(-1.00000000000000))*(x222)*(x229)))+(((IkReal(-1.00000000000000))*(x222)*(x228)))+(x235)+(((cj7)*(px)*(r01)))+(((x218)*(x221)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(x217)*(x224))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x236=((cj6)*(cj7));
IkReal x237=((cj7)*(sj6));
if( IKabs(((IkReal(0.00719424460431655))*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x237)))+(((IkReal(-190.000000000000))*(r02)*(sj7)))+(((IkReal(-190.000000000000))*(r00)*(x236)))+(((IkReal(1000.00000000000))*(px)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.337072573793619))+(((IkReal(-7.40469379642548))*(pz)*(sj7)))+(((IkReal(-7.40469379642548))*(px)*(x236)))+(((IkReal(-7.40469379642548))*(py)*(x237)))+(((IkReal(19.4860363063828))*(pp))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00719424460431655))*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x237)))+(((IkReal(-190.000000000000))*(r02)*(sj7)))+(((IkReal(-190.000000000000))*(r00)*(x236)))+(((IkReal(1000.00000000000))*(px)*(r00)))))))+IKsqr(((IkReal(-0.337072573793619))+(((IkReal(-7.40469379642548))*(pz)*(sj7)))+(((IkReal(-7.40469379642548))*(px)*(x236)))+(((IkReal(-7.40469379642548))*(py)*(x237)))+(((IkReal(19.4860363063828))*(pp)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j9array[0]=IKatan2(((IkReal(0.00719424460431655))*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(1000.00000000000))*(pz)*(r02)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-190.000000000000))*(r01)*(x237)))+(((IkReal(-190.000000000000))*(r02)*(sj7)))+(((IkReal(-190.000000000000))*(r00)*(x236)))+(((IkReal(1000.00000000000))*(px)*(r00)))))), ((IkReal(-0.337072573793619))+(((IkReal(-7.40469379642548))*(pz)*(sj7)))+(((IkReal(-7.40469379642548))*(px)*(x236)))+(((IkReal(-7.40469379642548))*(py)*(x237)))+(((IkReal(19.4860363063828))*(pp)))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x238=IKcos(j9);
IkReal x239=((cj6)*(r01));
IkReal x240=((IkReal(0.139000000000000))*(cj10));
IkReal x241=((r00)*(sj6));
IkReal x242=((cj6)*(px));
IkReal x243=((r01)*(sj6));
IkReal x244=((IkReal(0.190000000000000))*(sj7));
IkReal x245=((IkReal(1.00000000000000))*(pz));
IkReal x246=((IkReal(1.00000000000000))*(pp));
IkReal x247=((py)*(sj6));
IkReal x248=((cj6)*(r00));
IkReal x249=((IkReal(2.00000000000000))*(py));
IkReal x250=((IkReal(0.380000000000000))*(cj7));
IkReal x251=((IkReal(0.380000000000000))*(sj7));
IkReal x252=((IkReal(0.190000000000000))*(cj7));
IkReal x253=((cj6)*(r02));
IkReal x254=((IkReal(0.0513188000000000))*(x238));
IkReal x255=((px)*(r02)*(sj6));
evalcond[0]=((IkReal(0.0172981600000000))+(((x242)*(x250)))+(((pz)*(x251)))+(x254)+(((IkReal(-1.00000000000000))*(x246)))+(((x247)*(x250))));
evalcond[1]=((((x248)*(x252)))+(((r02)*(x244)))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((x243)*(x252)))+(((IkReal(-1.00000000000000))*(r02)*(x245)))+(((x240)*(IKsin(j9))))+(((IkReal(-1.00000000000000))*(py)*(r01))));
evalcond[2]=((((IkReal(-0.184600000000000))*(cj10)))+(((r02)*(x242)))+(((r02)*(x247)))+(((IkReal(-1.00000000000000))*(r02)*(x252)))+(((IkReal(-1.00000000000000))*(x243)*(x245)))+(((x244)*(x248)))+(((IkReal(-1.00000000000000))*(x238)*(x240)))+(((IkReal(-1.00000000000000))*(x245)*(x248)))+(((x243)*(x244))));
evalcond[3]=((((pp)*(x239)))+(((IkReal(-1.00000000000000))*(sj10)*(x254)))+(((py)*(x251)*(x253)))+(((IkReal(-1.00000000000000))*(r00)*(x242)*(x249)))+(((IkReal(-1.00000000000000))*(pz)*(x239)*(x251)))+(((IkReal(-1.00000000000000))*(py)*(x239)*(x249)))+(((IkReal(-1.00000000000000))*(x251)*(x255)))+(((IkReal(-1.00000000000000))*(pz)*(x249)*(x253)))+(((pz)*(x241)*(x251)))+(((IkReal(2.00000000000000))*(x241)*((px)*(px))))+(((IkReal(0.0361000000000000))*(x239)))+(((IkReal(-1.00000000000000))*(x241)*(x246)))+(((py)*(r00)*(x250)))+(((IkReal(-0.0361000000000000))*(x241)))+(((IkReal(-0.0533981600000000))*(sj10)))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x250)))+(((px)*(x243)*(x249)))+(((IkReal(2.00000000000000))*(pz)*(x255))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((((cj10)*((sj9)*(sj9))))+(((cj10)*((cj9)*(cj9))))));
dummyeval[0]=((((cj10)*((sj9)*(sj9))))+(((cj10)*((cj9)*(cj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x256=((IkReal(923.000000000000))*(cj10));
gconst2=IKsign(((((x256)*((cj9)*(cj9))))+(((IkReal(695.000000000000))*(cj10)*(cj9)))+(((x256)*((sj9)*(sj9))))));
IkReal x257=((IkReal(1.32805755395683))*(cj10));
dummyeval[0]=((((x257)*((cj9)*(cj9))))+(((cj10)*(cj9)))+(((x257)*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x258=((IkReal(0.0513188000000000))*(cj9));
IkReal x259=(px)*(px);
IkReal x260=(py)*(py);
IkReal x261=(pz)*(pz);
IkReal x262=((IkReal(0.380000000000000))*(r02));
IkReal x263=((cj6)*(px));
IkReal x264=((py)*(sj6));
IkReal x265=((pp)*(r01));
IkReal x266=((IkReal(1.00000000000000))*(sj6));
IkReal x267=((IkReal(2.00000000000000))*(sj7));
IkReal x268=((px)*(r00));
IkReal x269=((IkReal(0.0361000000000000))*(r00));
IkReal x270=((IkReal(1.00000000000000))*(r02));
IkReal x271=((py)*(r01));
IkReal x272=((cj7)*(pp));
IkReal x273=((IkReal(2.00000000000000))*(pz));
IkReal x274=((pp)*(r00));
IkReal x275=((cj6)*(sj7));
IkReal x276=((cj6)*(py));
IkReal x277=((r01)*(sj6));
IkReal x278=((IkReal(0.190000000000000))*(sj7));
IkReal x279=((pz)*(r01));
IkReal x280=((IkReal(2.00000000000000))*(cj7));
IkReal x281=((cj7)*(r01));
IkReal x282=((cj6)*(cj7));
IkReal x283=((IkReal(0.190000000000000))*(r00));
IkReal x284=((IkReal(1.00000000000000))*(r00));
IkReal x285=((IkReal(2.00000000000000))*(r00));
IkReal x286=((IkReal(2.00000000000000))*(r01));
IkReal x287=((cj7)*(r02));
IkReal x288=((px)*(sj6));
IkReal x289=((IkReal(0.0361000000000000))*(sj7));
IkReal x290=((pz)*(r02));
IkReal x291=((cj6)*(r01));
IkReal x292=((IkReal(0.380000000000000))*(cj7));
IkReal x293=((cj6)*(pz));
IkReal x294=((r02)*(x261));
IkReal x295=((IkReal(0.380000000000000))*(pz)*(sj7));
IkReal x296=((cj6)*(r00)*(x259));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x276)+(((IkReal(-1.00000000000000))*(px)*(x266))));
evalcond[2]=((IkReal(-1.00000000000000))+(x291)+(((IkReal(-1.00000000000000))*(r00)*(x266))));
evalcond[3]=((IkReal(0.0172981600000000))+(((x263)*(x292)))+(((IkReal(-1.00000000000000))*(pp)))+(x258)+(x295)+(((x264)*(x292))));
evalcond[4]=((((sj7)*(x277)))+(((IkReal(-1.00000000000000))*(cj7)*(x270)))+(((r00)*(x275))));
evalcond[5]=((((IkReal(-1.00000000000000))*(pz)*(x270)))+(((IkReal(-1.00000000000000))*(x268)))+(((IkReal(-1.00000000000000))*(x271)))+(((r02)*(x278)))+(((IkReal(0.190000000000000))*(cj7)*(x277)))+(((x282)*(x283))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj7)*(x270)))+(((IkReal(-1.00000000000000))*(x266)*(x281)))+(((IkReal(-1.00000000000000))*(x282)*(x284))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x284)*(x293)))+(((r02)*(x264)))+(((r02)*(x263)))+(((x275)*(x283)))+(((x277)*(x278)))+(((IkReal(-1.00000000000000))*(x266)*(x279)))+(((IkReal(-0.190000000000000))*(x287))));
evalcond[8]=((IkReal(-0.0533981600000000))+(((sj6)*(x259)*(x285)))+(((IkReal(-1.00000000000000))*(py)*(x263)*(x285)))+(((IkReal(-1.00000000000000))*(sj6)*(x269)))+(((IkReal(-1.00000000000000))*(cj6)*(x260)*(x286)))+(((IkReal(-1.00000000000000))*(r02)*(x273)*(x276)))+(((IkReal(0.0361000000000000))*(x291)))+(((px)*(x264)*(x286)))+(((cj6)*(x265)))+(((IkReal(-0.380000000000000))*(x275)*(x279)))+(((IkReal(-1.00000000000000))*(x266)*(x274)))+(((py)*(x262)*(x275)))+(((IkReal(-0.380000000000000))*(px)*(x281)))+(((r02)*(x273)*(x288)))+(((r00)*(sj6)*(x295)))+(((IkReal(-1.00000000000000))*(sj7)*(x262)*(x288)))+(((py)*(r00)*(x292)))+(((IkReal(-1.00000000000000))*(x258))));
evalcond[9]=((((x263)*(x273)*(x287)))+(((IkReal(0.0361000000000000))*(cj7)*(x277)))+(((x269)*(x282)))+(((x264)*(x268)*(x280)))+(((x280)*(x296)))+(((x263)*(x271)*(x280)))+(((x267)*(x294)))+(((r02)*(x289)))+(((IkReal(-0.380000000000000))*(x271)))+(((pz)*(x267)*(x268)))+(((pz)*(x267)*(x271)))+(((IkReal(-0.380000000000000))*(x268)))+(((IkReal(-1.00000000000000))*(pp)*(sj7)*(x270)))+(((x264)*(x273)*(x287)))+(((IkReal(-1.00000000000000))*(cj7)*(x265)*(x266)))+(((x260)*(x277)*(x280)))+(((IkReal(-1.00000000000000))*(pz)*(x262)))+(((IkReal(-1.00000000000000))*(cj6)*(x272)*(x284))));
evalcond[10]=((((IkReal(-0.380000000000000))*(pz)*(x277)))+(((sj6)*(sj7)*(x265)))+(((x280)*(x294)))+(((x262)*(x264)))+(((x262)*(x263)))+(((x274)*(x275)))+(((IkReal(-1.00000000000000))*(x263)*(x267)*(x290)))+(((IkReal(-1.00000000000000))*(x263)*(x267)*(x271)))+(((IkReal(-1.00000000000000))*(x264)*(x267)*(x290)))+(((cj7)*(x268)*(x273)))+(((IkReal(-1.00000000000000))*(x270)*(x272)))+(((IkReal(-1.00000000000000))*(x264)*(x267)*(x268)))+(((x269)*(x275)))+(((cj7)*(x271)*(x273)))+(((IkReal(-1.00000000000000))*(x260)*(x267)*(x277)))+(((x277)*(x289)))+(((IkReal(-0.380000000000000))*(r00)*(x293)))+(((IkReal(-1.00000000000000))*(x267)*(x296)))+(((IkReal(-0.0361000000000000))*(x287))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x297=((r01)*(sj7));
IkReal x298=((cj6)*(cj7));
IkReal x299=((cj7)*(sj6));
IkReal x300=((IkReal(3475000.00000000))*(pz));
IkReal x301=((IkReal(4615000.00000000))*(cj9));
IkReal x302=((pz)*(r01));
IkReal x303=((px)*(r02));
IkReal x304=((py)*(r02));
IkReal x305=((IkReal(3475000.00000000))*(px));
IkReal x306=((pz)*(sj7));
IkReal x307=((r00)*(sj7));
IkReal x308=((IkReal(3475000.00000000))*(py));
IkReal x309=((pz)*(r00));
IkReal x310=((IkReal(4615000.00000000))*(sj9));
IkReal x311=((px)*(x310));
IkReal x312=((py)*(x310));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x299)*(x301)*(x303)))+(((IkReal(3475000.00000000))*(x298)*(x304)))+(((IkReal(-1.00000000000000))*(r01)*(x298)*(x300)))+(((px)*(x297)*(x301)))+(((x298)*(x301)*(x304)))+(((x299)*(x301)*(x309)))+(((IkReal(-1.00000000000000))*(x306)*(x310)))+(((x297)*(x305)))+(((IkReal(-1.00000000000000))*(x299)*(x312)))+(((IkReal(-1.00000000000000))*(x298)*(x301)*(x302)))+(((IkReal(-3475000.00000000))*(x299)*(x303)))+(((IkReal(-1.00000000000000))*(x307)*(x308)))+(((r00)*(x299)*(x300)))+(((IkReal(-1.00000000000000))*(x298)*(x311)))+(((IkReal(-1.00000000000000))*(py)*(x301)*(x307)))+(((IkReal(876850.000000000))*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(660250.000000000))+(((x299)*(x303)*(x310)))+(((IkReal(-1.00000000000000))*(x298)*(x305)))+(((IkReal(-1.00000000000000))*(x301)*(x306)))+(((IkReal(-1.00000000000000))*(x299)*(x309)*(x310)))+(((IkReal(-1.00000000000000))*(x297)*(x311)))+(((IkReal(-1.00000000000000))*(sj7)*(x300)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(px)*(x298)*(x301)))+(((x307)*(x312)))+(((IkReal(-1.00000000000000))*(x298)*(x304)*(x310)))+(((IkReal(-1.00000000000000))*(py)*(x299)*(x301)))+(((x298)*(x302)*(x310)))+(((IkReal(-1.00000000000000))*(x299)*(x308))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x299)*(x301)*(x303)))+(((IkReal(3475000.00000000))*(x298)*(x304)))+(((IkReal(-1.00000000000000))*(r01)*(x298)*(x300)))+(((px)*(x297)*(x301)))+(((x298)*(x301)*(x304)))+(((x299)*(x301)*(x309)))+(((IkReal(-1.00000000000000))*(x306)*(x310)))+(((x297)*(x305)))+(((IkReal(-1.00000000000000))*(x299)*(x312)))+(((IkReal(-1.00000000000000))*(x298)*(x301)*(x302)))+(((IkReal(-3475000.00000000))*(x299)*(x303)))+(((IkReal(-1.00000000000000))*(x307)*(x308)))+(((r00)*(x299)*(x300)))+(((IkReal(-1.00000000000000))*(x298)*(x311)))+(((IkReal(-1.00000000000000))*(py)*(x301)*(x307)))+(((IkReal(876850.000000000))*(sj9)))))), ((gconst4)*(((IkReal(660250.000000000))+(((x299)*(x303)*(x310)))+(((IkReal(-1.00000000000000))*(x298)*(x305)))+(((IkReal(-1.00000000000000))*(x301)*(x306)))+(((IkReal(-1.00000000000000))*(x299)*(x309)*(x310)))+(((IkReal(-1.00000000000000))*(x297)*(x311)))+(((IkReal(-1.00000000000000))*(sj7)*(x300)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(px)*(x298)*(x301)))+(((x307)*(x312)))+(((IkReal(-1.00000000000000))*(x298)*(x304)*(x310)))+(((IkReal(-1.00000000000000))*(py)*(x299)*(x301)))+(((x298)*(x302)*(x310)))+(((IkReal(-1.00000000000000))*(x299)*(x308)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x313=IKsin(j8);
IkReal x314=IKcos(j8);
IkReal x315=((IkReal(1.00000000000000))*(cj7));
IkReal x316=((px)*(sj7));
IkReal x317=((py)*(sj6));
IkReal x318=((IkReal(0.184600000000000))*(sj9));
IkReal x319=((r02)*(sj6));
IkReal x320=((IkReal(1.00000000000000))*(sj7));
IkReal x321=((IkReal(0.184600000000000))*(cj9));
IkReal x322=((py)*(r00));
IkReal x323=((IkReal(0.139000000000000))*(x313));
IkReal x324=((IkReal(0.139000000000000))*(x314));
IkReal x325=((cj6)*(pz)*(r01));
IkReal x326=((pz)*(r00)*(sj6));
IkReal x327=((cj6)*(py)*(r02));
IkReal x328=((x313)*(x321));
IkReal x329=((x314)*(x318));
IkReal x330=((x314)*(x321));
IkReal x331=((x313)*(x318));
IkReal x332=((x323)+(x328));
IkReal x333=((x331)+(x330)+(x324));
evalcond[0]=((((IkReal(-1.00000000000000))*(x329)))+(((sj7)*(x317)))+(x332)+(((cj6)*(x316)))+(((IkReal(-1.00000000000000))*(pz)*(x315))));
evalcond[1]=((IkReal(0.190000000000000))+(x333)+(((IkReal(-1.00000000000000))*(x315)*(x317)))+(((IkReal(-1.00000000000000))*(pz)*(x320)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x315))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x329)))+(((IkReal(-1.00000000000000))*(x315)*(x325)))+(((IkReal(-1.00000000000000))*(px)*(x315)*(x319)))+(((IkReal(-1.00000000000000))*(x320)*(x322)))+(x332)+(((r01)*(x316)))+(((cj7)*(x326)))+(((cj7)*(x327))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x315)*(x322)))+(((IkReal(-1.00000000000000))*(x320)*(x327)))+(((IkReal(-1.00000000000000))*(x320)*(x326)))+(((cj7)*(px)*(r01)))+(((sj7)*(x325)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(x333)))+(((x316)*(x319))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x334=((cj7)*(sj9));
IkReal x335=((IkReal(4615000.00000000))*(cj9));
IkReal x336=((IkReal(3475000.00000000))*(cj7));
IkReal x337=((cj6)*(px));
IkReal x338=((IkReal(3475000.00000000))*(sj7));
IkReal x339=((py)*(sj6));
IkReal x340=((IkReal(4615000.00000000))*(sj9));
IkReal x341=((pz)*(sj7));
IkReal x342=((IkReal(4615000.00000000))*(x337));
IkReal x343=((sj7)*(x339));
if( IKabs(((gconst3)*(((((x335)*(x343)))+(((IkReal(-1.00000000000000))*(x334)*(x342)))+(((x337)*(x338)))+(((x338)*(x339)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x336)))+(((IkReal(-4615000.00000000))*(x334)*(x339)))+(((IkReal(-1.00000000000000))*(x340)*(x341)))+(((IkReal(876850.000000000))*(sj9)))+(((sj7)*(x335)*(x337))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x335)*(x341)))+(((IkReal(-1.00000000000000))*(cj7)*(x335)*(x339)))+(((IkReal(-1.00000000000000))*(cj7)*(x335)*(x337)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(pz)*(x338)))+(((IkReal(-1.00000000000000))*(x340)*(x343)))+(((IkReal(-1.00000000000000))*(sj7)*(x337)*(x340)))+(((IkReal(4615000.00000000))*(pz)*(x334)))+(((IkReal(-1.00000000000000))*(x336)*(x337)))+(((IkReal(-1.00000000000000))*(x336)*(x339))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst3)*(((((x335)*(x343)))+(((IkReal(-1.00000000000000))*(x334)*(x342)))+(((x337)*(x338)))+(((x338)*(x339)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x335)))+(((IkReal(-1.00000000000000))*(pz)*(x336)))+(((IkReal(-4615000.00000000))*(x334)*(x339)))+(((IkReal(-1.00000000000000))*(x340)*(x341)))+(((IkReal(876850.000000000))*(sj9)))+(((sj7)*(x335)*(x337)))))), ((gconst3)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x335)*(x341)))+(((IkReal(-1.00000000000000))*(cj7)*(x335)*(x339)))+(((IkReal(-1.00000000000000))*(cj7)*(x335)*(x337)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(pz)*(x338)))+(((IkReal(-1.00000000000000))*(x340)*(x343)))+(((IkReal(-1.00000000000000))*(sj7)*(x337)*(x340)))+(((IkReal(4615000.00000000))*(pz)*(x334)))+(((IkReal(-1.00000000000000))*(x336)*(x337)))+(((IkReal(-1.00000000000000))*(x336)*(x339)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x344=IKsin(j8);
IkReal x345=IKcos(j8);
IkReal x346=((IkReal(1.00000000000000))*(cj7));
IkReal x347=((px)*(sj7));
IkReal x348=((py)*(sj6));
IkReal x349=((IkReal(0.184600000000000))*(sj9));
IkReal x350=((r02)*(sj6));
IkReal x351=((IkReal(1.00000000000000))*(sj7));
IkReal x352=((IkReal(0.184600000000000))*(cj9));
IkReal x353=((py)*(r00));
IkReal x354=((IkReal(0.139000000000000))*(x344));
IkReal x355=((IkReal(0.139000000000000))*(x345));
IkReal x356=((cj6)*(pz)*(r01));
IkReal x357=((pz)*(r00)*(sj6));
IkReal x358=((cj6)*(py)*(r02));
IkReal x359=((x344)*(x352));
IkReal x360=((x345)*(x349));
IkReal x361=((x345)*(x352));
IkReal x362=((x344)*(x349));
IkReal x363=((x354)+(x359));
IkReal x364=((x355)+(x361)+(x362));
evalcond[0]=((((cj6)*(x347)))+(((IkReal(-1.00000000000000))*(x360)))+(x363)+(((sj7)*(x348)))+(((IkReal(-1.00000000000000))*(pz)*(x346))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x346)))+(x364)+(((IkReal(-1.00000000000000))*(x346)*(x348)))+(((IkReal(-1.00000000000000))*(pz)*(x351))));
evalcond[2]=((((r01)*(x347)))+(((IkReal(-1.00000000000000))*(x360)))+(((IkReal(-1.00000000000000))*(px)*(x346)*(x350)))+(((IkReal(-1.00000000000000))*(x346)*(x356)))+(x363)+(((cj7)*(x357)))+(((cj7)*(x358)))+(((IkReal(-1.00000000000000))*(x351)*(x353))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x364)))+(((IkReal(-1.00000000000000))*(x346)*(x353)))+(((x347)*(x350)))+(((cj7)*(px)*(r01)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((sj7)*(x356)))+(((IkReal(-1.00000000000000))*(x351)*(x358)))+(((IkReal(-1.00000000000000))*(x351)*(x357))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x365=((IkReal(0.0513188000000000))*(cj9));
IkReal x366=(px)*(px);
IkReal x367=(py)*(py);
IkReal x368=(pz)*(pz);
IkReal x369=((IkReal(0.380000000000000))*(r02));
IkReal x370=((cj6)*(px));
IkReal x371=((py)*(sj6));
IkReal x372=((pp)*(r01));
IkReal x373=((IkReal(1.00000000000000))*(sj6));
IkReal x374=((IkReal(2.00000000000000))*(sj7));
IkReal x375=((px)*(r00));
IkReal x376=((IkReal(0.0361000000000000))*(r00));
IkReal x377=((IkReal(1.00000000000000))*(r02));
IkReal x378=((py)*(r01));
IkReal x379=((cj7)*(pp));
IkReal x380=((IkReal(2.00000000000000))*(pz));
IkReal x381=((pp)*(r00));
IkReal x382=((cj6)*(sj7));
IkReal x383=((cj6)*(py));
IkReal x384=((r01)*(sj6));
IkReal x385=((IkReal(0.190000000000000))*(sj7));
IkReal x386=((pz)*(r01));
IkReal x387=((IkReal(2.00000000000000))*(cj7));
IkReal x388=((cj7)*(r01));
IkReal x389=((cj6)*(cj7));
IkReal x390=((IkReal(0.190000000000000))*(r00));
IkReal x391=((IkReal(1.00000000000000))*(r00));
IkReal x392=((IkReal(2.00000000000000))*(r00));
IkReal x393=((IkReal(2.00000000000000))*(r01));
IkReal x394=((cj7)*(r02));
IkReal x395=((px)*(sj6));
IkReal x396=((IkReal(0.0361000000000000))*(sj7));
IkReal x397=((pz)*(r02));
IkReal x398=((cj6)*(r01));
IkReal x399=((IkReal(0.380000000000000))*(cj7));
IkReal x400=((cj6)*(pz));
IkReal x401=((r02)*(x368));
IkReal x402=((IkReal(0.380000000000000))*(pz)*(sj7));
IkReal x403=((cj6)*(r00)*(x366));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x383)+(((IkReal(-1.00000000000000))*(px)*(x373))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x373)))+(x398));
evalcond[3]=((IkReal(0.0172981600000000))+(((x371)*(x399)))+(x365)+(((IkReal(-1.00000000000000))*(pp)))+(x402)+(((x370)*(x399))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x377)))+(((r00)*(x382)))+(((sj7)*(x384))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x378)))+(((IkReal(-1.00000000000000))*(x375)))+(((r02)*(x385)))+(((IkReal(0.190000000000000))*(cj7)*(x384)))+(((IkReal(-1.00000000000000))*(pz)*(x377)))+(((x389)*(x390))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x373)*(x388)))+(((IkReal(-1.00000000000000))*(x389)*(x391)))+(((IkReal(-1.00000000000000))*(sj7)*(x377))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x373)*(x386)))+(((r02)*(x371)))+(((r02)*(x370)))+(((x382)*(x390)))+(((x384)*(x385)))+(((IkReal(-0.190000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x391)*(x400))));
evalcond[8]=((IkReal(0.0533981600000000))+(((r00)*(sj6)*(x402)))+(((IkReal(-1.00000000000000))*(x373)*(x381)))+(((IkReal(0.0361000000000000))*(x398)))+(((IkReal(-1.00000000000000))*(py)*(x370)*(x392)))+(((py)*(r00)*(x399)))+(((IkReal(-0.380000000000000))*(px)*(x388)))+(x365)+(((cj6)*(x372)))+(((r02)*(x380)*(x395)))+(((IkReal(-1.00000000000000))*(sj6)*(x376)))+(((IkReal(-1.00000000000000))*(cj6)*(x367)*(x393)))+(((px)*(x371)*(x393)))+(((IkReal(-0.380000000000000))*(x382)*(x386)))+(((sj6)*(x366)*(x392)))+(((py)*(x369)*(x382)))+(((IkReal(-1.00000000000000))*(sj7)*(x369)*(x395)))+(((IkReal(-1.00000000000000))*(r02)*(x380)*(x383))));
evalcond[9]=((((x376)*(x389)))+(((x371)*(x380)*(x394)))+(((pz)*(x374)*(x375)))+(((pz)*(x374)*(x378)))+(((x370)*(x378)*(x387)))+(((x367)*(x384)*(x387)))+(((IkReal(-1.00000000000000))*(pp)*(sj7)*(x377)))+(((IkReal(-1.00000000000000))*(cj7)*(x372)*(x373)))+(((x387)*(x403)))+(((x374)*(x401)))+(((x370)*(x380)*(x394)))+(((IkReal(-0.380000000000000))*(x375)))+(((IkReal(-0.380000000000000))*(x378)))+(((x371)*(x375)*(x387)))+(((IkReal(-1.00000000000000))*(pz)*(x369)))+(((r02)*(x396)))+(((IkReal(-1.00000000000000))*(cj6)*(x379)*(x391)))+(((IkReal(0.0361000000000000))*(cj7)*(x384))));
evalcond[10]=((((IkReal(-1.00000000000000))*(x370)*(x374)*(x378)))+(((IkReal(-1.00000000000000))*(x367)*(x374)*(x384)))+(((x376)*(x382)))+(((IkReal(-0.380000000000000))*(r00)*(x400)))+(((IkReal(-1.00000000000000))*(x371)*(x374)*(x397)))+(((x369)*(x370)))+(((x369)*(x371)))+(((IkReal(-1.00000000000000))*(x374)*(x403)))+(((IkReal(-0.380000000000000))*(pz)*(x384)))+(((x387)*(x401)))+(((IkReal(-1.00000000000000))*(x371)*(x374)*(x375)))+(((IkReal(-1.00000000000000))*(x377)*(x379)))+(((cj7)*(x375)*(x380)))+(((cj7)*(x378)*(x380)))+(((IkReal(-0.0361000000000000))*(x394)))+(((sj6)*(sj7)*(x372)))+(((x384)*(x396)))+(((IkReal(-1.00000000000000))*(x370)*(x374)*(x397)))+(((x381)*(x382))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x404=((r01)*(sj7));
IkReal x405=((cj6)*(cj7));
IkReal x406=((cj7)*(sj6));
IkReal x407=((IkReal(3475000.00000000))*(pz));
IkReal x408=((IkReal(3475000.00000000))*(px));
IkReal x409=((IkReal(4615000.00000000))*(cj9));
IkReal x410=((pz)*(r01));
IkReal x411=((py)*(r02));
IkReal x412=((r00)*(sj7));
IkReal x413=((pz)*(sj7));
IkReal x414=((IkReal(3475000.00000000))*(py));
IkReal x415=((pz)*(r00));
IkReal x416=((IkReal(4615000.00000000))*(sj9));
IkReal x417=((px)*(x416));
IkReal x418=((py)*(x416));
if( IKabs(((gconst6)*(((((py)*(x409)*(x412)))+(((IkReal(-1.00000000000000))*(x405)*(x409)*(x411)))+(((IkReal(-1.00000000000000))*(x406)*(x418)))+(((px)*(r02)*(x406)*(x409)))+(((r01)*(x405)*(x407)))+(((IkReal(-3475000.00000000))*(x405)*(x411)))+(((x405)*(x409)*(x410)))+(((IkReal(-1.00000000000000))*(px)*(x404)*(x409)))+(((IkReal(-1.00000000000000))*(x404)*(x408)))+(((IkReal(-1.00000000000000))*(x406)*(x409)*(x415)))+(((IkReal(-1.00000000000000))*(x405)*(x417)))+(((r02)*(x406)*(x408)))+(((x412)*(x414)))+(((IkReal(-1.00000000000000))*(x413)*(x416)))+(((IkReal(876850.000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(x406)*(x407))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((IkReal(660250.000000000))+(((x406)*(x415)*(x416)))+(((IkReal(-1.00000000000000))*(x406)*(x414)))+(((IkReal(-1.00000000000000))*(py)*(x406)*(x409)))+(((x404)*(x417)))+(((IkReal(-1.00000000000000))*(sj7)*(x407)))+(((IkReal(-1.00000000000000))*(x412)*(x418)))+(((x405)*(x411)*(x416)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(r02)*(x406)*(x417)))+(((IkReal(-1.00000000000000))*(px)*(x405)*(x409)))+(((IkReal(-1.00000000000000))*(x405)*(x410)*(x416)))+(((IkReal(-1.00000000000000))*(x405)*(x408)))+(((IkReal(-1.00000000000000))*(x409)*(x413))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst6)*(((((py)*(x409)*(x412)))+(((IkReal(-1.00000000000000))*(x405)*(x409)*(x411)))+(((IkReal(-1.00000000000000))*(x406)*(x418)))+(((px)*(r02)*(x406)*(x409)))+(((r01)*(x405)*(x407)))+(((IkReal(-3475000.00000000))*(x405)*(x411)))+(((x405)*(x409)*(x410)))+(((IkReal(-1.00000000000000))*(px)*(x404)*(x409)))+(((IkReal(-1.00000000000000))*(x404)*(x408)))+(((IkReal(-1.00000000000000))*(x406)*(x409)*(x415)))+(((IkReal(-1.00000000000000))*(x405)*(x417)))+(((r02)*(x406)*(x408)))+(((x412)*(x414)))+(((IkReal(-1.00000000000000))*(x413)*(x416)))+(((IkReal(876850.000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(x406)*(x407)))))), ((gconst6)*(((IkReal(660250.000000000))+(((x406)*(x415)*(x416)))+(((IkReal(-1.00000000000000))*(x406)*(x414)))+(((IkReal(-1.00000000000000))*(py)*(x406)*(x409)))+(((x404)*(x417)))+(((IkReal(-1.00000000000000))*(sj7)*(x407)))+(((IkReal(-1.00000000000000))*(x412)*(x418)))+(((x405)*(x411)*(x416)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(r02)*(x406)*(x417)))+(((IkReal(-1.00000000000000))*(px)*(x405)*(x409)))+(((IkReal(-1.00000000000000))*(x405)*(x410)*(x416)))+(((IkReal(-1.00000000000000))*(x405)*(x408)))+(((IkReal(-1.00000000000000))*(x409)*(x413)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x419=IKsin(j8);
IkReal x420=IKcos(j8);
IkReal x421=((IkReal(1.00000000000000))*(cj7));
IkReal x422=((px)*(sj7));
IkReal x423=((py)*(sj6));
IkReal x424=((IkReal(0.184600000000000))*(sj9));
IkReal x425=((r02)*(sj6));
IkReal x426=((IkReal(1.00000000000000))*(sj7));
IkReal x427=((IkReal(0.184600000000000))*(cj9));
IkReal x428=((py)*(r00));
IkReal x429=((IkReal(0.139000000000000))*(x419));
IkReal x430=((IkReal(0.139000000000000))*(x420));
IkReal x431=((cj6)*(pz)*(r01));
IkReal x432=((pz)*(r00)*(sj6));
IkReal x433=((cj6)*(py)*(r02));
IkReal x434=((x420)*(x424));
IkReal x435=((x419)*(x427));
IkReal x436=((x420)*(x427));
IkReal x437=((x419)*(x424));
IkReal x438=((x429)+(x435));
IkReal x439=((x430)+(x436)+(x437));
evalcond[0]=((((IkReal(-1.00000000000000))*(x434)))+(((sj7)*(x423)))+(((cj6)*(x422)))+(x438)+(((IkReal(-1.00000000000000))*(pz)*(x421))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x421)*(x423)))+(x439)+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x421)))+(((IkReal(-1.00000000000000))*(pz)*(x426))));
evalcond[2]=((((IkReal(-1.00000000000000))*(px)*(x421)*(x425)))+(((IkReal(-1.00000000000000))*(x438)))+(((IkReal(-1.00000000000000))*(x421)*(x431)))+(((cj7)*(x433)))+(((cj7)*(x432)))+(((IkReal(-1.00000000000000))*(x426)*(x428)))+(((r01)*(x422)))+(x434));
evalcond[3]=((((IkReal(-1.00000000000000))*(x421)*(x428)))+(((sj7)*(x431)))+(x439)+(((cj7)*(px)*(r01)))+(((IkReal(-1.00000000000000))*(x426)*(x433)))+(((IkReal(-1.00000000000000))*(x426)*(x432)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((x422)*(x425))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x440=((cj7)*(sj9));
IkReal x441=((IkReal(4615000.00000000))*(cj9));
IkReal x442=((IkReal(3475000.00000000))*(cj7));
IkReal x443=((cj6)*(px));
IkReal x444=((IkReal(3475000.00000000))*(sj7));
IkReal x445=((py)*(sj6));
IkReal x446=((IkReal(4615000.00000000))*(sj9));
IkReal x447=((pz)*(sj7));
IkReal x448=((IkReal(4615000.00000000))*(x443));
IkReal x449=((sj7)*(x445));
if( IKabs(((gconst5)*(((((IkReal(-4615000.00000000))*(x440)*(x445)))+(((x441)*(x449)))+(((x444)*(x445)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x441)))+(((sj7)*(x441)*(x443)))+(((IkReal(-1.00000000000000))*(pz)*(x442)))+(((x443)*(x444)))+(((IkReal(-1.00000000000000))*(x440)*(x448)))+(((IkReal(876850.000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(x446)*(x447))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(sj7)*(x443)*(x446)))+(((IkReal(-1.00000000000000))*(cj7)*(x441)*(x445)))+(((IkReal(-1.00000000000000))*(cj7)*(x441)*(x443)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(pz)*(x444)))+(((IkReal(4615000.00000000))*(pz)*(x440)))+(((IkReal(-1.00000000000000))*(x441)*(x447)))+(((IkReal(-1.00000000000000))*(x446)*(x449)))+(((IkReal(-1.00000000000000))*(x442)*(x443)))+(((IkReal(-1.00000000000000))*(x442)*(x445))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst5)*(((((IkReal(-4615000.00000000))*(x440)*(x445)))+(((x441)*(x449)))+(((x444)*(x445)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x441)))+(((sj7)*(x441)*(x443)))+(((IkReal(-1.00000000000000))*(pz)*(x442)))+(((x443)*(x444)))+(((IkReal(-1.00000000000000))*(x440)*(x448)))+(((IkReal(876850.000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(x446)*(x447)))))), ((gconst5)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(sj7)*(x443)*(x446)))+(((IkReal(-1.00000000000000))*(cj7)*(x441)*(x445)))+(((IkReal(-1.00000000000000))*(cj7)*(x441)*(x443)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(pz)*(x444)))+(((IkReal(4615000.00000000))*(pz)*(x440)))+(((IkReal(-1.00000000000000))*(x441)*(x447)))+(((IkReal(-1.00000000000000))*(x446)*(x449)))+(((IkReal(-1.00000000000000))*(x442)*(x443)))+(((IkReal(-1.00000000000000))*(x442)*(x445)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x450=IKsin(j8);
IkReal x451=IKcos(j8);
IkReal x452=((IkReal(1.00000000000000))*(cj7));
IkReal x453=((px)*(sj7));
IkReal x454=((py)*(sj6));
IkReal x455=((IkReal(0.184600000000000))*(sj9));
IkReal x456=((r02)*(sj6));
IkReal x457=((IkReal(1.00000000000000))*(sj7));
IkReal x458=((IkReal(0.184600000000000))*(cj9));
IkReal x459=((py)*(r00));
IkReal x460=((IkReal(0.139000000000000))*(x450));
IkReal x461=((IkReal(0.139000000000000))*(x451));
IkReal x462=((cj6)*(pz)*(r01));
IkReal x463=((pz)*(r00)*(sj6));
IkReal x464=((cj6)*(py)*(r02));
IkReal x465=((x451)*(x455));
IkReal x466=((x450)*(x458));
IkReal x467=((x451)*(x458));
IkReal x468=((x450)*(x455));
IkReal x469=((x460)+(x466));
IkReal x470=((x468)+(x461)+(x467));
evalcond[0]=((((sj7)*(x454)))+(((cj6)*(x453)))+(((IkReal(-1.00000000000000))*(x465)))+(((IkReal(-1.00000000000000))*(pz)*(x452)))+(x469));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x457)))+(x470)+(((IkReal(-1.00000000000000))*(x452)*(x454)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x452))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x469)))+(((IkReal(-1.00000000000000))*(px)*(x452)*(x456)))+(x465)+(((IkReal(-1.00000000000000))*(x452)*(x462)))+(((cj7)*(x463)))+(((cj7)*(x464)))+(((IkReal(-1.00000000000000))*(x457)*(x459)))+(((r01)*(x453))));
evalcond[3]=((((sj7)*(x462)))+(((x453)*(x456)))+(x470)+(((IkReal(-1.00000000000000))*(x452)*(x459)))+(((cj7)*(px)*(r01)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(x457)*(x464)))+(((IkReal(-1.00000000000000))*(x457)*(x463))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x471=((IkReal(923.000000000000))*(cj9));
IkReal x472=((cj7)*(r02));
IkReal x473=((IkReal(5000.00000000000))*(cj10));
IkReal x474=((cj7)*(pz));
IkReal x475=((sj6)*(sj7));
IkReal x476=((IkReal(923.000000000000))*(sj9));
IkReal x477=((cj6)*(r00)*(sj7));
IkReal x478=((cj6)*(px)*(sj7));
if( IKabs(((gconst2)*(((((cj9)*(x473)*(x474)))+(((x472)*(x476)))+(((IkReal(-1.00000000000000))*(cj9)*(py)*(x473)*(x475)))+(((IkReal(-1.00000000000000))*(x476)*(x477)))+(((IkReal(-1.00000000000000))*(r01)*(x475)*(x476)))+(((IkReal(-1.00000000000000))*(cj9)*(x473)*(x478))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x471)*(x472)))+(((IkReal(-1.00000000000000))*(sj9)*(x473)*(x474)))+(((py)*(sj9)*(x473)*(x475)))+(((IkReal(695.000000000000))*(x472)))+(((IkReal(-695.000000000000))*(x477)))+(((IkReal(-1.00000000000000))*(x471)*(x477)))+(((sj9)*(x473)*(x478)))+(((IkReal(-1.00000000000000))*(r01)*(x471)*(x475)))+(((IkReal(-695.000000000000))*(r01)*(x475))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst2)*(((((cj9)*(x473)*(x474)))+(((x472)*(x476)))+(((IkReal(-1.00000000000000))*(cj9)*(py)*(x473)*(x475)))+(((IkReal(-1.00000000000000))*(x476)*(x477)))+(((IkReal(-1.00000000000000))*(r01)*(x475)*(x476)))+(((IkReal(-1.00000000000000))*(cj9)*(x473)*(x478)))))), ((gconst2)*(((((x471)*(x472)))+(((IkReal(-1.00000000000000))*(sj9)*(x473)*(x474)))+(((py)*(sj9)*(x473)*(x475)))+(((IkReal(695.000000000000))*(x472)))+(((IkReal(-695.000000000000))*(x477)))+(((IkReal(-1.00000000000000))*(x471)*(x477)))+(((sj9)*(x473)*(x478)))+(((IkReal(-1.00000000000000))*(r01)*(x471)*(x475)))+(((IkReal(-695.000000000000))*(r01)*(x475)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x479=IKsin(j8);
IkReal x480=IKcos(j8);
IkReal x481=(pz)*(pz);
IkReal x482=(px)*(px);
IkReal x483=(py)*(py);
IkReal x484=((cj6)*(pz));
IkReal x485=((py)*(sj6));
IkReal x486=((IkReal(0.380000000000000))*(r02));
IkReal x487=((pp)*(sj6));
IkReal x488=((px)*(sj7));
IkReal x489=((IkReal(1.00000000000000))*(cj7));
IkReal x490=((cj9)*(sj10));
IkReal x491=((r02)*(sj6));
IkReal x492=((cj6)*(r00));
IkReal x493=((IkReal(0.0361000000000000))*(cj7));
IkReal x494=((IkReal(1.00000000000000))*(sj7));
IkReal x495=((IkReal(0.0513188000000000))*(cj10));
IkReal x496=((pp)*(r02));
IkReal x497=((cj6)*(px));
IkReal x498=((cj7)*(r02));
IkReal x499=((cj6)*(py));
IkReal x500=((cj7)*(r01));
IkReal x501=((IkReal(2.00000000000000))*(py));
IkReal x502=((IkReal(2.00000000000000))*(r02));
IkReal x503=((r01)*(sj7));
IkReal x504=((r02)*(sj7));
IkReal x505=((IkReal(2.00000000000000))*(r00));
IkReal x506=((r01)*(sj6));
IkReal x507=((py)*(r00));
IkReal x508=((IkReal(0.0533981600000000))*(cj9));
IkReal x509=((sj10)*(sj9));
IkReal x510=((IkReal(0.0147561600000000))*(sj9));
IkReal x511=((cj7)*(px));
IkReal x512=((IkReal(0.380000000000000))*(r00));
IkReal x513=((r01)*(x489));
IkReal x514=((IkReal(0.184600000000000))*(x480));
IkReal x515=((IkReal(0.139000000000000))*(x479));
IkReal x516=((IkReal(0.184600000000000))*(x479));
IkReal x517=((IkReal(0.139000000000000))*(x480));
IkReal x518=((pz)*(r00)*(sj6));
IkReal x519=((sj6)*(x503));
IkReal x520=((IkReal(2.00000000000000))*(x483));
IkReal x521=((IkReal(2.00000000000000))*(x481));
IkReal x522=((IkReal(2.00000000000000))*(x482));
IkReal x523=((cj10)*(x480));
IkReal x524=((cj10)*(x479));
evalcond[0]=((((cj9)*(x523)))+(x519)+(((sj9)*(x524)))+(((sj7)*(x492)))+(((IkReal(-1.00000000000000))*(r02)*(x489))));
evalcond[1]=((((IkReal(-1.00000000000000))*(pz)*(x489)))+(((IkReal(-1.00000000000000))*(sj9)*(x514)))+(((sj7)*(x485)))+(x515)+(((cj9)*(x516)))+(((cj6)*(x488))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x489)*(x506)))+(((IkReal(-1.00000000000000))*(r02)*(x494)))+(((IkReal(-1.00000000000000))*(x489)*(x492)))+(((IkReal(-1.00000000000000))*(cj9)*(x524)))+(((sj9)*(x523))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x489)*(x497)))+(((sj9)*(x516)))+(x517)+(((cj9)*(x514)))+(((IkReal(-1.00000000000000))*(pz)*(x494)))+(((IkReal(-1.00000000000000))*(x485)*(x489))));
evalcond[4]=((((sj10)*(x515)))+(((IkReal(-1.00000000000000))*(px)*(x489)*(x491)))+(((cj7)*(x518)))+(((IkReal(-1.00000000000000))*(x494)*(x507)))+(((r01)*(x488)))+(((x498)*(x499)))+(((IkReal(-1.00000000000000))*(x509)*(x514)))+(((IkReal(-1.00000000000000))*(x484)*(x513)))+(((x490)*(x516))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x489)*(x507)))+(((x488)*(x491)))+(((IkReal(-1.00000000000000))*(x490)*(x514)))+(((x484)*(x503)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((px)*(x500)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(sj10)*(x517)))+(((IkReal(-1.00000000000000))*(x494)*(x518)))+(((IkReal(-1.00000000000000))*(x509)*(x516)))+(((IkReal(-1.00000000000000))*(r02)*(x494)*(x499))));
evalcond[6]=((((IkReal(-1.00000000000000))*(pz)*(x486)))+(((cj7)*(x492)*(x522)))+(((pz)*(x488)*(x505)))+(((IkReal(-1.00000000000000))*(x494)*(x496)))+(((IkReal(-1.00000000000000))*(pp)*(x489)*(x492)))+(((IkReal(2.00000000000000))*(px)*(x484)*(x498)))+(((sj7)*(x481)*(x502)))+(((IkReal(2.00000000000000))*(pz)*(x485)*(x498)))+(((pz)*(x501)*(x503)))+(((x485)*(x505)*(x511)))+(((IkReal(-1.00000000000000))*(px)*(x512)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((IkReal(0.0361000000000000))*(x504)))+(((x493)*(x506)))+(((x497)*(x500)*(x501)))+(((IkReal(-1.00000000000000))*(x508)*(x524)))+(((IkReal(-1.00000000000000))*(x479)*(x495)))+(((x510)*(x523)))+(((sj6)*(x500)*(x520)))+(((IkReal(-1.00000000000000))*(x487)*(x513)))+(((x492)*(x493))));
evalcond[7]=((((x485)*(x486)))+(((IkReal(-1.00000000000000))*(sj7)*(x492)*(x522)))+(((IkReal(-1.00000000000000))*(r02)*(x493)))+(((IkReal(-1.00000000000000))*(x489)*(x496)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)*(x485)*(x502)))+(((pz)*(x505)*(x511)))+(((x487)*(x503)))+(((pz)*(x500)*(x501)))+(((x508)*(x523)))+(((x480)*(x495)))+(((IkReal(0.0361000000000000))*(sj7)*(x492)))+(((IkReal(-0.380000000000000))*(pz)*(x506)))+(((pp)*(sj7)*(x492)))+(((IkReal(-1.00000000000000))*(x484)*(x488)*(x502)))+(((IkReal(-2.00000000000000))*(r01)*(x488)*(x499)))+(((x510)*(x524)))+(((x498)*(x521)))+(((x486)*(x497)))+(((IkReal(-1.00000000000000))*(x485)*(x488)*(x505)))+(((IkReal(0.0361000000000000))*(x519)))+(((IkReal(-1.00000000000000))*(x484)*(x512)))+(((IkReal(-1.00000000000000))*(x519)*(x520))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x525=((cj6)*(r00));
IkReal x526=((cj7)*(cj9));
IkReal x527=((r01)*(sj6));
IkReal x528=((cj7)*(sj9));
IkReal x529=((sj7)*(sj9));
IkReal x530=((IkReal(1.00000000000000))*(cj9)*(sj7));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x526)*(x527)))+(((r02)*(x528)))+(((IkReal(-1.00000000000000))*(r02)*(x530)))+(((IkReal(-1.00000000000000))*(x527)*(x529)))+(((IkReal(-1.00000000000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(x525)*(x529))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r02)*(x526)))+(((r02)*(x529)))+(((IkReal(-1.00000000000000))*(x525)*(x530)))+(((IkReal(-1.00000000000000))*(x527)*(x530)))+(((x525)*(x528)))+(((x527)*(x528))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x526)*(x527)))+(((r02)*(x528)))+(((IkReal(-1.00000000000000))*(r02)*(x530)))+(((IkReal(-1.00000000000000))*(x527)*(x529)))+(((IkReal(-1.00000000000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(x525)*(x529)))))), ((gconst1)*(((((r02)*(x526)))+(((r02)*(x529)))+(((IkReal(-1.00000000000000))*(x525)*(x530)))+(((IkReal(-1.00000000000000))*(x527)*(x530)))+(((x525)*(x528)))+(((x527)*(x528)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x531=IKsin(j8);
IkReal x532=IKcos(j8);
IkReal x533=(pz)*(pz);
IkReal x534=(px)*(px);
IkReal x535=(py)*(py);
IkReal x536=((cj6)*(pz));
IkReal x537=((py)*(sj6));
IkReal x538=((IkReal(0.380000000000000))*(r02));
IkReal x539=((pp)*(sj6));
IkReal x540=((px)*(sj7));
IkReal x541=((IkReal(1.00000000000000))*(cj7));
IkReal x542=((cj9)*(sj10));
IkReal x543=((r02)*(sj6));
IkReal x544=((cj6)*(r00));
IkReal x545=((IkReal(0.0361000000000000))*(cj7));
IkReal x546=((IkReal(1.00000000000000))*(sj7));
IkReal x547=((IkReal(0.0513188000000000))*(cj10));
IkReal x548=((pp)*(r02));
IkReal x549=((cj6)*(px));
IkReal x550=((cj7)*(r02));
IkReal x551=((cj6)*(py));
IkReal x552=((cj7)*(r01));
IkReal x553=((IkReal(2.00000000000000))*(py));
IkReal x554=((IkReal(2.00000000000000))*(r02));
IkReal x555=((r01)*(sj7));
IkReal x556=((r02)*(sj7));
IkReal x557=((IkReal(2.00000000000000))*(r00));
IkReal x558=((r01)*(sj6));
IkReal x559=((py)*(r00));
IkReal x560=((IkReal(0.0533981600000000))*(cj9));
IkReal x561=((sj10)*(sj9));
IkReal x562=((IkReal(0.0147561600000000))*(sj9));
IkReal x563=((cj7)*(px));
IkReal x564=((IkReal(0.380000000000000))*(r00));
IkReal x565=((r01)*(x541));
IkReal x566=((IkReal(0.184600000000000))*(x532));
IkReal x567=((IkReal(0.139000000000000))*(x531));
IkReal x568=((IkReal(0.184600000000000))*(x531));
IkReal x569=((IkReal(0.139000000000000))*(x532));
IkReal x570=((pz)*(r00)*(sj6));
IkReal x571=((sj6)*(x555));
IkReal x572=((IkReal(2.00000000000000))*(x535));
IkReal x573=((IkReal(2.00000000000000))*(x533));
IkReal x574=((IkReal(2.00000000000000))*(x534));
IkReal x575=((cj10)*(x532));
IkReal x576=((cj10)*(x531));
evalcond[0]=((((sj9)*(x576)))+(((IkReal(-1.00000000000000))*(r02)*(x541)))+(((sj7)*(x544)))+(x571)+(((cj9)*(x575))));
evalcond[1]=((((IkReal(-1.00000000000000))*(pz)*(x541)))+(x567)+(((IkReal(-1.00000000000000))*(sj9)*(x566)))+(((sj7)*(x537)))+(((cj6)*(x540)))+(((cj9)*(x568))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x541)*(x544)))+(((sj9)*(x575)))+(((IkReal(-1.00000000000000))*(r02)*(x546)))+(((IkReal(-1.00000000000000))*(cj9)*(x576)))+(((IkReal(-1.00000000000000))*(x541)*(x558))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x541)*(x549)))+(((IkReal(-1.00000000000000))*(x537)*(x541)))+(((IkReal(-1.00000000000000))*(pz)*(x546)))+(x569)+(((cj9)*(x566)))+(((sj9)*(x568))));
evalcond[4]=((((IkReal(-1.00000000000000))*(px)*(x541)*(x543)))+(((cj7)*(x570)))+(((sj10)*(x567)))+(((IkReal(-1.00000000000000))*(x536)*(x565)))+(((x542)*(x568)))+(((x550)*(x551)))+(((IkReal(-1.00000000000000))*(x546)*(x559)))+(((IkReal(-1.00000000000000))*(x561)*(x566)))+(((r01)*(x540))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x546)*(x551)))+(((x540)*(x543)))+(((px)*(x552)))+(((x536)*(x555)))+(((IkReal(-1.00000000000000))*(x542)*(x566)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(x546)*(x570)))+(((IkReal(-1.00000000000000))*(x561)*(x568)))+(((IkReal(-1.00000000000000))*(x541)*(x559)))+(((IkReal(-1.00000000000000))*(sj10)*(x569))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x539)*(x565)))+(((x537)*(x557)*(x563)))+(((IkReal(2.00000000000000))*(pz)*(x537)*(x550)))+(((x544)*(x545)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((cj7)*(x544)*(x574)))+(((IkReal(-1.00000000000000))*(x560)*(x576)))+(((IkReal(-1.00000000000000))*(x531)*(x547)))+(((pz)*(x540)*(x557)))+(((x562)*(x575)))+(((x549)*(x552)*(x553)))+(((pz)*(x553)*(x555)))+(((IkReal(-1.00000000000000))*(pp)*(x541)*(x544)))+(((IkReal(2.00000000000000))*(px)*(x536)*(x550)))+(((IkReal(-1.00000000000000))*(pz)*(x538)))+(((sj6)*(x552)*(x572)))+(((IkReal(0.0361000000000000))*(x556)))+(((sj7)*(x533)*(x554)))+(((x545)*(x558)))+(((IkReal(-1.00000000000000))*(x546)*(x548)))+(((IkReal(-1.00000000000000))*(px)*(x564))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x541)*(x548)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)*(x537)*(x554)))+(((IkReal(-2.00000000000000))*(r01)*(x540)*(x551)))+(((x560)*(x575)))+(((pz)*(x552)*(x553)))+(((IkReal(0.0361000000000000))*(x571)))+(((x550)*(x573)))+(((IkReal(-1.00000000000000))*(x536)*(x540)*(x554)))+(((pp)*(sj7)*(x544)))+(((IkReal(-1.00000000000000))*(x571)*(x572)))+(((IkReal(-1.00000000000000))*(sj7)*(x544)*(x574)))+(((IkReal(-1.00000000000000))*(x536)*(x564)))+(((x562)*(x576)))+(((x537)*(x538)))+(((IkReal(-1.00000000000000))*(r02)*(x545)))+(((IkReal(-1.00000000000000))*(x537)*(x540)*(x557)))+(((x539)*(x555)))+(((x538)*(x549)))+(((IkReal(-0.380000000000000))*(pz)*(x558)))+(((x532)*(x547)))+(((pz)*(x557)*(x563)))+(((IkReal(0.0361000000000000))*(sj7)*(x544))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x577=((IkReal(1000.00000000000))*(r02));
IkReal x578=((IkReal(190.000000000000))*(sj7));
IkReal x579=((cj6)*(r00));
IkReal x580=((IkReal(190.000000000000))*(cj7));
IkReal x581=((r01)*(sj6));
IkReal x582=((IkReal(1000.00000000000))*(pz));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x580)*(x581)))+(((pz)*(x577)))+(((IkReal(-1.00000000000000))*(x579)*(x580)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r02)*(x578)))+(((IkReal(1000.00000000000))*(px)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x578)*(x581)))+(((IkReal(-1.00000000000000))*(r02)*(x580)))+(((cj6)*(px)*(x577)))+(((py)*(sj6)*(x577)))+(((x578)*(x579)))+(((IkReal(-1.00000000000000))*(x579)*(x582)))+(((IkReal(-184.600000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x581)*(x582))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(x580)*(x581)))+(((pz)*(x577)))+(((IkReal(-1.00000000000000))*(x579)*(x580)))+(((IkReal(1000.00000000000))*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r02)*(x578)))+(((IkReal(1000.00000000000))*(px)*(r00)))))), ((gconst0)*(((((x578)*(x581)))+(((IkReal(-1.00000000000000))*(r02)*(x580)))+(((cj6)*(px)*(x577)))+(((py)*(sj6)*(x577)))+(((x578)*(x579)))+(((IkReal(-1.00000000000000))*(x579)*(x582)))+(((IkReal(-184.600000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x581)*(x582)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x583=IKcos(j9);
IkReal x584=((cj6)*(r01));
IkReal x585=((IkReal(0.139000000000000))*(cj10));
IkReal x586=((r00)*(sj6));
IkReal x587=((cj6)*(px));
IkReal x588=((r01)*(sj6));
IkReal x589=((IkReal(0.190000000000000))*(sj7));
IkReal x590=((IkReal(1.00000000000000))*(pz));
IkReal x591=((IkReal(1.00000000000000))*(pp));
IkReal x592=((py)*(sj6));
IkReal x593=((cj6)*(r00));
IkReal x594=((IkReal(2.00000000000000))*(py));
IkReal x595=((IkReal(0.380000000000000))*(cj7));
IkReal x596=((IkReal(0.380000000000000))*(sj7));
IkReal x597=((IkReal(0.190000000000000))*(cj7));
IkReal x598=((cj6)*(r02));
IkReal x599=((IkReal(0.0513188000000000))*(x583));
IkReal x600=((px)*(r02)*(sj6));
evalcond[0]=((IkReal(0.0172981600000000))+(((pz)*(x596)))+(((IkReal(-1.00000000000000))*(x591)))+(x599)+(((x587)*(x595)))+(((x592)*(x595))));
evalcond[1]=((((x585)*(IKsin(j9))))+(((IkReal(-1.00000000000000))*(px)*(r00)))+(((r02)*(x589)))+(((IkReal(-1.00000000000000))*(r02)*(x590)))+(((IkReal(-1.00000000000000))*(py)*(r01)))+(((x593)*(x597)))+(((x588)*(x597))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x588)*(x590)))+(((IkReal(-0.184600000000000))*(cj10)))+(((r02)*(x587)))+(((x588)*(x589)))+(((IkReal(-1.00000000000000))*(x583)*(x585)))+(((IkReal(-1.00000000000000))*(x590)*(x593)))+(((r02)*(x592)))+(((IkReal(-1.00000000000000))*(r02)*(x597)))+(((x589)*(x593))));
evalcond[3]=((((pp)*(x584)))+(((IkReal(-1.00000000000000))*(x586)*(x591)))+(((IkReal(2.00000000000000))*(x586)*((px)*(px))))+(((IkReal(-1.00000000000000))*(x596)*(x600)))+(((IkReal(-1.00000000000000))*(py)*(x584)*(x594)))+(((IkReal(-1.00000000000000))*(r00)*(x587)*(x594)))+(((IkReal(0.0361000000000000))*(x584)))+(((IkReal(2.00000000000000))*(pz)*(x600)))+(((IkReal(-1.00000000000000))*(pz)*(x594)*(x598)))+(((pz)*(x586)*(x596)))+(((py)*(r00)*(x595)))+(((py)*(x596)*(x598)))+(((IkReal(-1.00000000000000))*(pz)*(x584)*(x596)))+(((IkReal(-0.0533981600000000))*(sj10)))+(((px)*(x588)*(x594)))+(((IkReal(-1.00000000000000))*(sj10)*(x599)))+(((IkReal(-1.00000000000000))*(px)*(r01)*(x595)))+(((IkReal(-0.0361000000000000))*(x586))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((((cj10)*((sj9)*(sj9))))+(((cj10)*((cj9)*(cj9))))));
dummyeval[0]=((((cj10)*((sj9)*(sj9))))+(((cj10)*((cj9)*(cj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x601=((IkReal(923.000000000000))*(cj10));
gconst2=IKsign(((((IkReal(695.000000000000))*(cj10)*(cj9)))+(((x601)*((cj9)*(cj9))))+(((x601)*((sj9)*(sj9))))));
IkReal x602=((IkReal(1.32805755395683))*(cj10));
dummyeval[0]=((((x602)*((cj9)*(cj9))))+(((cj10)*(cj9)))+(((x602)*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x603=((IkReal(0.0513188000000000))*(cj9));
IkReal x604=(px)*(px);
IkReal x605=(py)*(py);
IkReal x606=(pz)*(pz);
IkReal x607=((IkReal(0.380000000000000))*(r02));
IkReal x608=((cj6)*(px));
IkReal x609=((py)*(sj6));
IkReal x610=((pp)*(r01));
IkReal x611=((IkReal(1.00000000000000))*(sj6));
IkReal x612=((IkReal(2.00000000000000))*(sj7));
IkReal x613=((px)*(r00));
IkReal x614=((IkReal(0.0361000000000000))*(r00));
IkReal x615=((IkReal(1.00000000000000))*(r02));
IkReal x616=((py)*(r01));
IkReal x617=((cj7)*(pp));
IkReal x618=((IkReal(2.00000000000000))*(pz));
IkReal x619=((pp)*(r00));
IkReal x620=((cj6)*(sj7));
IkReal x621=((cj6)*(py));
IkReal x622=((r01)*(sj6));
IkReal x623=((IkReal(0.190000000000000))*(sj7));
IkReal x624=((pz)*(r01));
IkReal x625=((IkReal(2.00000000000000))*(cj7));
IkReal x626=((cj7)*(r01));
IkReal x627=((cj6)*(cj7));
IkReal x628=((IkReal(0.190000000000000))*(r00));
IkReal x629=((IkReal(1.00000000000000))*(r00));
IkReal x630=((IkReal(2.00000000000000))*(r00));
IkReal x631=((IkReal(2.00000000000000))*(r01));
IkReal x632=((cj7)*(r02));
IkReal x633=((px)*(sj6));
IkReal x634=((IkReal(0.0361000000000000))*(sj7));
IkReal x635=((pz)*(r02));
IkReal x636=((cj6)*(r01));
IkReal x637=((IkReal(0.380000000000000))*(cj7));
IkReal x638=((cj6)*(pz));
IkReal x639=((r02)*(x606));
IkReal x640=((IkReal(0.380000000000000))*(pz)*(sj7));
IkReal x641=((cj6)*(r00)*(x604));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x621)+(((IkReal(-1.00000000000000))*(px)*(x611))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x611)))+(x636));
evalcond[3]=((IkReal(0.0172981600000000))+(((x609)*(x637)))+(((IkReal(-1.00000000000000))*(pp)))+(((x608)*(x637)))+(x640)+(x603));
evalcond[4]=((((sj7)*(x622)))+(((r00)*(x620)))+(((IkReal(-1.00000000000000))*(cj7)*(x615))));
evalcond[5]=((((r02)*(x623)))+(((IkReal(-1.00000000000000))*(x616)))+(((IkReal(-1.00000000000000))*(x613)))+(((IkReal(-1.00000000000000))*(pz)*(x615)))+(((IkReal(0.190000000000000))*(cj7)*(x622)))+(((x627)*(x628))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj7)*(x615)))+(((IkReal(-1.00000000000000))*(x611)*(x626)))+(((IkReal(-1.00000000000000))*(x627)*(x629))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x629)*(x638)))+(((IkReal(-1.00000000000000))*(x611)*(x624)))+(((IkReal(-0.190000000000000))*(x632)))+(((r02)*(x609)))+(((r02)*(x608)))+(((x622)*(x623)))+(((x620)*(x628))));
evalcond[8]=((IkReal(-0.0533981600000000))+(((IkReal(-1.00000000000000))*(sj6)*(x614)))+(((IkReal(-1.00000000000000))*(py)*(x608)*(x630)))+(((IkReal(-1.00000000000000))*(cj6)*(x605)*(x631)))+(((IkReal(-1.00000000000000))*(x611)*(x619)))+(((IkReal(0.0361000000000000))*(x636)))+(((cj6)*(x610)))+(((py)*(r00)*(x637)))+(((r00)*(sj6)*(x640)))+(((sj6)*(x604)*(x630)))+(((IkReal(-0.380000000000000))*(x620)*(x624)))+(((IkReal(-0.380000000000000))*(px)*(x626)))+(((py)*(x607)*(x620)))+(((r02)*(x618)*(x633)))+(((IkReal(-1.00000000000000))*(r02)*(x618)*(x621)))+(((IkReal(-1.00000000000000))*(x603)))+(((IkReal(-1.00000000000000))*(sj7)*(x607)*(x633)))+(((px)*(x609)*(x631))));
evalcond[9]=((((x608)*(x616)*(x625)))+(((r02)*(x634)))+(((IkReal(-1.00000000000000))*(pp)*(sj7)*(x615)))+(((x614)*(x627)))+(((IkReal(-1.00000000000000))*(cj7)*(x610)*(x611)))+(((x605)*(x622)*(x625)))+(((pz)*(x612)*(x616)))+(((pz)*(x612)*(x613)))+(((x609)*(x613)*(x625)))+(((x608)*(x618)*(x632)))+(((IkReal(0.0361000000000000))*(cj7)*(x622)))+(((x625)*(x641)))+(((x612)*(x639)))+(((x609)*(x618)*(x632)))+(((IkReal(-1.00000000000000))*(cj6)*(x617)*(x629)))+(((IkReal(-1.00000000000000))*(pz)*(x607)))+(((IkReal(-0.380000000000000))*(x613)))+(((IkReal(-0.380000000000000))*(x616))));
evalcond[10]=((((IkReal(-1.00000000000000))*(x609)*(x612)*(x613)))+(((x614)*(x620)))+(((IkReal(-1.00000000000000))*(x609)*(x612)*(x635)))+(((IkReal(-0.0361000000000000))*(x632)))+(((x625)*(x639)))+(((IkReal(-1.00000000000000))*(x608)*(x612)*(x616)))+(((x619)*(x620)))+(((IkReal(-0.380000000000000))*(r00)*(x638)))+(((IkReal(-1.00000000000000))*(x605)*(x612)*(x622)))+(((cj7)*(x613)*(x618)))+(((IkReal(-1.00000000000000))*(x608)*(x612)*(x635)))+(((IkReal(-1.00000000000000))*(x612)*(x641)))+(((x607)*(x609)))+(((x607)*(x608)))+(((cj7)*(x616)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x617)))+(((IkReal(-0.380000000000000))*(pz)*(x622)))+(((x622)*(x634)))+(((sj6)*(sj7)*(x610))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x642=((r01)*(sj7));
IkReal x643=((cj6)*(cj7));
IkReal x644=((cj7)*(sj6));
IkReal x645=((IkReal(3475000.00000000))*(pz));
IkReal x646=((IkReal(4615000.00000000))*(cj9));
IkReal x647=((pz)*(r01));
IkReal x648=((px)*(r02));
IkReal x649=((py)*(r02));
IkReal x650=((IkReal(3475000.00000000))*(px));
IkReal x651=((pz)*(sj7));
IkReal x652=((r00)*(sj7));
IkReal x653=((IkReal(3475000.00000000))*(py));
IkReal x654=((pz)*(r00));
IkReal x655=((IkReal(4615000.00000000))*(sj9));
IkReal x656=((px)*(x655));
IkReal x657=((py)*(x655));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x651)*(x655)))+(((IkReal(-1.00000000000000))*(x644)*(x646)*(x648)))+(((r00)*(x644)*(x645)))+(((IkReal(-1.00000000000000))*(r01)*(x643)*(x645)))+(((IkReal(-1.00000000000000))*(x643)*(x646)*(x647)))+(((x644)*(x646)*(x654)))+(((IkReal(-1.00000000000000))*(py)*(x646)*(x652)))+(((IkReal(-1.00000000000000))*(x643)*(x656)))+(((IkReal(-3475000.00000000))*(x644)*(x648)))+(((x642)*(x650)))+(((IkReal(-1.00000000000000))*(x644)*(x657)))+(((px)*(x642)*(x646)))+(((IkReal(3475000.00000000))*(x643)*(x649)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))+(((IkReal(876850.000000000))*(sj9)))+(((x643)*(x646)*(x649))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(660250.000000000))+(((x643)*(x647)*(x655)))+(((IkReal(-1.00000000000000))*(py)*(x644)*(x646)))+(((IkReal(-1.00000000000000))*(sj7)*(x645)))+(((IkReal(-1.00000000000000))*(x646)*(x651)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x642)*(x656)))+(((x652)*(x657)))+(((IkReal(-1.00000000000000))*(px)*(x643)*(x646)))+(((IkReal(-1.00000000000000))*(x643)*(x649)*(x655)))+(((x644)*(x648)*(x655)))+(((IkReal(-1.00000000000000))*(x643)*(x650)))+(((IkReal(-1.00000000000000))*(x644)*(x654)*(x655)))+(((IkReal(-1.00000000000000))*(x644)*(x653))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x651)*(x655)))+(((IkReal(-1.00000000000000))*(x644)*(x646)*(x648)))+(((r00)*(x644)*(x645)))+(((IkReal(-1.00000000000000))*(r01)*(x643)*(x645)))+(((IkReal(-1.00000000000000))*(x643)*(x646)*(x647)))+(((x644)*(x646)*(x654)))+(((IkReal(-1.00000000000000))*(py)*(x646)*(x652)))+(((IkReal(-1.00000000000000))*(x643)*(x656)))+(((IkReal(-3475000.00000000))*(x644)*(x648)))+(((x642)*(x650)))+(((IkReal(-1.00000000000000))*(x644)*(x657)))+(((px)*(x642)*(x646)))+(((IkReal(3475000.00000000))*(x643)*(x649)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))+(((IkReal(876850.000000000))*(sj9)))+(((x643)*(x646)*(x649)))))), ((gconst4)*(((IkReal(660250.000000000))+(((x643)*(x647)*(x655)))+(((IkReal(-1.00000000000000))*(py)*(x644)*(x646)))+(((IkReal(-1.00000000000000))*(sj7)*(x645)))+(((IkReal(-1.00000000000000))*(x646)*(x651)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x642)*(x656)))+(((x652)*(x657)))+(((IkReal(-1.00000000000000))*(px)*(x643)*(x646)))+(((IkReal(-1.00000000000000))*(x643)*(x649)*(x655)))+(((x644)*(x648)*(x655)))+(((IkReal(-1.00000000000000))*(x643)*(x650)))+(((IkReal(-1.00000000000000))*(x644)*(x654)*(x655)))+(((IkReal(-1.00000000000000))*(x644)*(x653)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x658=IKsin(j8);
IkReal x659=IKcos(j8);
IkReal x660=((IkReal(1.00000000000000))*(cj7));
IkReal x661=((px)*(sj7));
IkReal x662=((py)*(sj6));
IkReal x663=((IkReal(0.184600000000000))*(sj9));
IkReal x664=((r02)*(sj6));
IkReal x665=((IkReal(1.00000000000000))*(sj7));
IkReal x666=((IkReal(0.184600000000000))*(cj9));
IkReal x667=((py)*(r00));
IkReal x668=((IkReal(0.139000000000000))*(x658));
IkReal x669=((IkReal(0.139000000000000))*(x659));
IkReal x670=((cj6)*(pz)*(r01));
IkReal x671=((pz)*(r00)*(sj6));
IkReal x672=((cj6)*(py)*(r02));
IkReal x673=((x658)*(x666));
IkReal x674=((x659)*(x663));
IkReal x675=((x659)*(x666));
IkReal x676=((x658)*(x663));
IkReal x677=((x668)+(x673));
IkReal x678=((x669)+(x676)+(x675));
evalcond[0]=((((sj7)*(x662)))+(((cj6)*(x661)))+(x677)+(((IkReal(-1.00000000000000))*(pz)*(x660)))+(((IkReal(-1.00000000000000))*(x674))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x660)*(x662)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x660)))+(x678)+(((IkReal(-1.00000000000000))*(pz)*(x665))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x665)*(x667)))+(((r01)*(x661)))+(((IkReal(-1.00000000000000))*(x660)*(x670)))+(((cj7)*(x671)))+(((cj7)*(x672)))+(((IkReal(-1.00000000000000))*(px)*(x660)*(x664)))+(x677)+(((IkReal(-1.00000000000000))*(x674))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x660)*(x667)))+(((IkReal(-1.00000000000000))*(x665)*(x671)))+(((IkReal(-1.00000000000000))*(x665)*(x672)))+(((cj7)*(px)*(r01)))+(((x661)*(x664)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((sj7)*(x670)))+(((IkReal(-1.00000000000000))*(x678))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x679=((cj7)*(sj9));
IkReal x680=((IkReal(4615000.00000000))*(cj9));
IkReal x681=((IkReal(3475000.00000000))*(cj7));
IkReal x682=((cj6)*(px));
IkReal x683=((IkReal(3475000.00000000))*(sj7));
IkReal x684=((py)*(sj6));
IkReal x685=((IkReal(4615000.00000000))*(sj9));
IkReal x686=((pz)*(sj7));
IkReal x687=((IkReal(4615000.00000000))*(x682));
IkReal x688=((sj7)*(x684));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x685)*(x686)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x680)))+(((IkReal(-4615000.00000000))*(x679)*(x684)))+(((x682)*(x683)))+(((x683)*(x684)))+(((sj7)*(x680)*(x682)))+(((IkReal(-1.00000000000000))*(x679)*(x687)))+(((x680)*(x688)))+(((IkReal(-1.00000000000000))*(pz)*(x681)))+(((IkReal(876850.000000000))*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x685)*(x688)))+(((IkReal(4615000.00000000))*(pz)*(x679)))+(((IkReal(-1.00000000000000))*(x681)*(x682)))+(((IkReal(-1.00000000000000))*(x681)*(x684)))+(((IkReal(-1.00000000000000))*(x680)*(x686)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(cj7)*(x680)*(x682)))+(((IkReal(-1.00000000000000))*(cj7)*(x680)*(x684)))+(((IkReal(-1.00000000000000))*(sj7)*(x682)*(x685)))+(((IkReal(-1.00000000000000))*(pz)*(x683))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(x685)*(x686)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x680)))+(((IkReal(-4615000.00000000))*(x679)*(x684)))+(((x682)*(x683)))+(((x683)*(x684)))+(((sj7)*(x680)*(x682)))+(((IkReal(-1.00000000000000))*(x679)*(x687)))+(((x680)*(x688)))+(((IkReal(-1.00000000000000))*(pz)*(x681)))+(((IkReal(876850.000000000))*(sj9)))))), ((gconst3)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(x685)*(x688)))+(((IkReal(4615000.00000000))*(pz)*(x679)))+(((IkReal(-1.00000000000000))*(x681)*(x682)))+(((IkReal(-1.00000000000000))*(x681)*(x684)))+(((IkReal(-1.00000000000000))*(x680)*(x686)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(cj7)*(x680)*(x682)))+(((IkReal(-1.00000000000000))*(cj7)*(x680)*(x684)))+(((IkReal(-1.00000000000000))*(sj7)*(x682)*(x685)))+(((IkReal(-1.00000000000000))*(pz)*(x683)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x689=IKsin(j8);
IkReal x690=IKcos(j8);
IkReal x691=((IkReal(1.00000000000000))*(cj7));
IkReal x692=((px)*(sj7));
IkReal x693=((py)*(sj6));
IkReal x694=((IkReal(0.184600000000000))*(sj9));
IkReal x695=((r02)*(sj6));
IkReal x696=((IkReal(1.00000000000000))*(sj7));
IkReal x697=((IkReal(0.184600000000000))*(cj9));
IkReal x698=((py)*(r00));
IkReal x699=((IkReal(0.139000000000000))*(x689));
IkReal x700=((IkReal(0.139000000000000))*(x690));
IkReal x701=((cj6)*(pz)*(r01));
IkReal x702=((pz)*(r00)*(sj6));
IkReal x703=((cj6)*(py)*(r02));
IkReal x704=((x689)*(x697));
IkReal x705=((x690)*(x694));
IkReal x706=((x690)*(x697));
IkReal x707=((x689)*(x694));
IkReal x708=((x699)+(x704));
IkReal x709=((x700)+(x706)+(x707));
evalcond[0]=((((sj7)*(x693)))+(((cj6)*(x692)))+(((IkReal(-1.00000000000000))*(x705)))+(((IkReal(-1.00000000000000))*(pz)*(x691)))+(x708));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x691)))+(((IkReal(-1.00000000000000))*(pz)*(x696)))+(x709)+(((IkReal(-1.00000000000000))*(x691)*(x693))));
evalcond[2]=((((IkReal(-1.00000000000000))*(px)*(x691)*(x695)))+(((IkReal(-1.00000000000000))*(x696)*(x698)))+(((IkReal(-1.00000000000000))*(x691)*(x701)))+(((cj7)*(x702)))+(((cj7)*(x703)))+(((IkReal(-1.00000000000000))*(x705)))+(x708)+(((r01)*(x692))));
evalcond[3]=((((x692)*(x695)))+(((cj7)*(px)*(r01)))+(((IkReal(-1.00000000000000))*(x709)))+(((IkReal(-1.00000000000000))*(x696)*(x703)))+(((IkReal(-1.00000000000000))*(x696)*(x702)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(x691)*(x698)))+(((sj7)*(x701))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x710=((IkReal(0.0513188000000000))*(cj9));
IkReal x711=(px)*(px);
IkReal x712=(py)*(py);
IkReal x713=(pz)*(pz);
IkReal x714=((IkReal(0.380000000000000))*(r02));
IkReal x715=((cj6)*(px));
IkReal x716=((py)*(sj6));
IkReal x717=((pp)*(r01));
IkReal x718=((IkReal(1.00000000000000))*(sj6));
IkReal x719=((IkReal(2.00000000000000))*(sj7));
IkReal x720=((px)*(r00));
IkReal x721=((IkReal(0.0361000000000000))*(r00));
IkReal x722=((IkReal(1.00000000000000))*(r02));
IkReal x723=((py)*(r01));
IkReal x724=((cj7)*(pp));
IkReal x725=((IkReal(2.00000000000000))*(pz));
IkReal x726=((pp)*(r00));
IkReal x727=((cj6)*(sj7));
IkReal x728=((cj6)*(py));
IkReal x729=((r01)*(sj6));
IkReal x730=((IkReal(0.190000000000000))*(sj7));
IkReal x731=((pz)*(r01));
IkReal x732=((IkReal(2.00000000000000))*(cj7));
IkReal x733=((cj7)*(r01));
IkReal x734=((cj6)*(cj7));
IkReal x735=((IkReal(0.190000000000000))*(r00));
IkReal x736=((IkReal(1.00000000000000))*(r00));
IkReal x737=((IkReal(2.00000000000000))*(r00));
IkReal x738=((IkReal(2.00000000000000))*(r01));
IkReal x739=((cj7)*(r02));
IkReal x740=((px)*(sj6));
IkReal x741=((IkReal(0.0361000000000000))*(sj7));
IkReal x742=((pz)*(r02));
IkReal x743=((cj6)*(r01));
IkReal x744=((IkReal(0.380000000000000))*(cj7));
IkReal x745=((cj6)*(pz));
IkReal x746=((r02)*(x713));
IkReal x747=((IkReal(0.380000000000000))*(pz)*(sj7));
IkReal x748=((cj6)*(r00)*(x711));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(px)*(x718)))+(x728));
evalcond[2]=((IkReal(1.00000000000000))+(x743)+(((IkReal(-1.00000000000000))*(r00)*(x718))));
evalcond[3]=((IkReal(0.0172981600000000))+(((x715)*(x744)))+(((IkReal(-1.00000000000000))*(pp)))+(((x716)*(x744)))+(x710)+(x747));
evalcond[4]=((((r00)*(x727)))+(((sj7)*(x729)))+(((IkReal(-1.00000000000000))*(cj7)*(x722))));
evalcond[5]=((((x734)*(x735)))+(((IkReal(0.190000000000000))*(cj7)*(x729)))+(((IkReal(-1.00000000000000))*(x723)))+(((IkReal(-1.00000000000000))*(x720)))+(((r02)*(x730)))+(((IkReal(-1.00000000000000))*(pz)*(x722))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x734)*(x736)))+(((IkReal(-1.00000000000000))*(sj7)*(x722)))+(((IkReal(-1.00000000000000))*(x718)*(x733))));
evalcond[7]=((((x727)*(x735)))+(((x729)*(x730)))+(((IkReal(-1.00000000000000))*(x718)*(x731)))+(((r02)*(x716)))+(((r02)*(x715)))+(((IkReal(-1.00000000000000))*(x736)*(x745)))+(((IkReal(-0.190000000000000))*(x739))));
evalcond[8]=((IkReal(0.0533981600000000))+(((IkReal(0.0361000000000000))*(x743)))+(((r02)*(x725)*(x740)))+(((r00)*(sj6)*(x747)))+(((px)*(x716)*(x738)))+(((IkReal(-1.00000000000000))*(py)*(x715)*(x737)))+(((IkReal(-0.380000000000000))*(px)*(x733)))+(((py)*(x714)*(x727)))+(((IkReal(-1.00000000000000))*(sj6)*(x721)))+(((IkReal(-1.00000000000000))*(r02)*(x725)*(x728)))+(((cj6)*(x717)))+(x710)+(((py)*(r00)*(x744)))+(((IkReal(-1.00000000000000))*(sj7)*(x714)*(x740)))+(((sj6)*(x711)*(x737)))+(((IkReal(-1.00000000000000))*(x718)*(x726)))+(((IkReal(-1.00000000000000))*(cj6)*(x712)*(x738)))+(((IkReal(-0.380000000000000))*(x727)*(x731))));
evalcond[9]=((((r02)*(x741)))+(((IkReal(-1.00000000000000))*(pz)*(x714)))+(((x716)*(x720)*(x732)))+(((x721)*(x734)))+(((x712)*(x729)*(x732)))+(((IkReal(-1.00000000000000))*(cj6)*(x724)*(x736)))+(((IkReal(0.0361000000000000))*(cj7)*(x729)))+(((x715)*(x723)*(x732)))+(((pz)*(x719)*(x720)))+(((pz)*(x719)*(x723)))+(((IkReal(-1.00000000000000))*(pp)*(sj7)*(x722)))+(((x716)*(x725)*(x739)))+(((x715)*(x725)*(x739)))+(((x719)*(x746)))+(((x732)*(x748)))+(((IkReal(-0.380000000000000))*(x720)))+(((IkReal(-0.380000000000000))*(x723)))+(((IkReal(-1.00000000000000))*(cj7)*(x717)*(x718))));
evalcond[10]=((((x721)*(x727)))+(((x714)*(x716)))+(((x714)*(x715)))+(((IkReal(-0.380000000000000))*(r00)*(x745)))+(((IkReal(-1.00000000000000))*(x716)*(x719)*(x742)))+(((IkReal(-0.0361000000000000))*(x739)))+(((x726)*(x727)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-1.00000000000000))*(x716)*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(x715)*(x719)*(x742)))+(((cj7)*(x720)*(x725)))+(((cj7)*(x723)*(x725)))+(((sj6)*(sj7)*(x717)))+(((IkReal(-1.00000000000000))*(x719)*(x748)))+(((x732)*(x746)))+(((x729)*(x741)))+(((IkReal(-1.00000000000000))*(x712)*(x719)*(x729)))+(((IkReal(-1.00000000000000))*(x715)*(x719)*(x723)))+(((IkReal(-0.380000000000000))*(pz)*(x729))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(-483025.000000000))+(((IkReal(-1282970.00000000))*(cj9)))+(((IkReal(-851929.000000000))*((cj9)*(cj9))))+(((IkReal(-851929.000000000))*((sj9)*(sj9))))));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.65611510791367))*(cj9)))+(((IkReal(-1.76373686662181))*((cj9)*(cj9))))+(((IkReal(-1.76373686662181))*((sj9)*(sj9)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x749=((r01)*(sj7));
IkReal x750=((cj6)*(cj7));
IkReal x751=((cj7)*(sj6));
IkReal x752=((IkReal(3475000.00000000))*(pz));
IkReal x753=((IkReal(3475000.00000000))*(px));
IkReal x754=((IkReal(4615000.00000000))*(cj9));
IkReal x755=((pz)*(r01));
IkReal x756=((py)*(r02));
IkReal x757=((r00)*(sj7));
IkReal x758=((pz)*(sj7));
IkReal x759=((IkReal(3475000.00000000))*(py));
IkReal x760=((pz)*(r00));
IkReal x761=((IkReal(4615000.00000000))*(sj9));
IkReal x762=((px)*(x761));
IkReal x763=((py)*(x761));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(x751)*(x763)))+(((IkReal(-1.00000000000000))*(r00)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(x750)*(x762)))+(((x750)*(x754)*(x755)))+(((px)*(r02)*(x751)*(x754)))+(((r01)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(px)*(x749)*(x754)))+(((py)*(x754)*(x757)))+(((r02)*(x751)*(x753)))+(((IkReal(-1.00000000000000))*(x751)*(x754)*(x760)))+(((IkReal(-1.00000000000000))*(x750)*(x754)*(x756)))+(((IkReal(-1.00000000000000))*(x749)*(x753)))+(((IkReal(-3475000.00000000))*(x750)*(x756)))+(((x757)*(x759)))+(((IkReal(876850.000000000))*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(r02)*(x751)*(x762)))+(((IkReal(-1.00000000000000))*(x750)*(x753)))+(((IkReal(-1.00000000000000))*(x750)*(x755)*(x761)))+(((IkReal(-1.00000000000000))*(sj7)*(x752)))+(((IkReal(-1.00000000000000))*(x754)*(x758)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x757)*(x763)))+(((IkReal(-1.00000000000000))*(x751)*(x759)))+(((IkReal(-1.00000000000000))*(py)*(x751)*(x754)))+(((x750)*(x756)*(x761)))+(((IkReal(-1.00000000000000))*(px)*(x750)*(x754)))+(((x751)*(x760)*(x761)))+(((x749)*(x762))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(x751)*(x763)))+(((IkReal(-1.00000000000000))*(r00)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(x750)*(x762)))+(((x750)*(x754)*(x755)))+(((px)*(r02)*(x751)*(x754)))+(((r01)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(px)*(x749)*(x754)))+(((py)*(x754)*(x757)))+(((r02)*(x751)*(x753)))+(((IkReal(-1.00000000000000))*(x751)*(x754)*(x760)))+(((IkReal(-1.00000000000000))*(x750)*(x754)*(x756)))+(((IkReal(-1.00000000000000))*(x749)*(x753)))+(((IkReal(-3475000.00000000))*(x750)*(x756)))+(((x757)*(x759)))+(((IkReal(876850.000000000))*(sj9)))))), ((gconst6)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(r02)*(x751)*(x762)))+(((IkReal(-1.00000000000000))*(x750)*(x753)))+(((IkReal(-1.00000000000000))*(x750)*(x755)*(x761)))+(((IkReal(-1.00000000000000))*(sj7)*(x752)))+(((IkReal(-1.00000000000000))*(x754)*(x758)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x757)*(x763)))+(((IkReal(-1.00000000000000))*(x751)*(x759)))+(((IkReal(-1.00000000000000))*(py)*(x751)*(x754)))+(((x750)*(x756)*(x761)))+(((IkReal(-1.00000000000000))*(px)*(x750)*(x754)))+(((x751)*(x760)*(x761)))+(((x749)*(x762)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x764=IKsin(j8);
IkReal x765=IKcos(j8);
IkReal x766=((IkReal(1.00000000000000))*(cj7));
IkReal x767=((px)*(sj7));
IkReal x768=((py)*(sj6));
IkReal x769=((IkReal(0.184600000000000))*(sj9));
IkReal x770=((r02)*(sj6));
IkReal x771=((IkReal(1.00000000000000))*(sj7));
IkReal x772=((IkReal(0.184600000000000))*(cj9));
IkReal x773=((py)*(r00));
IkReal x774=((IkReal(0.139000000000000))*(x764));
IkReal x775=((IkReal(0.139000000000000))*(x765));
IkReal x776=((cj6)*(pz)*(r01));
IkReal x777=((pz)*(r00)*(sj6));
IkReal x778=((cj6)*(py)*(r02));
IkReal x779=((x765)*(x769));
IkReal x780=((x764)*(x772));
IkReal x781=((x765)*(x772));
IkReal x782=((x764)*(x769));
IkReal x783=((x774)+(x780));
IkReal x784=((x775)+(x782)+(x781));
evalcond[0]=((((sj7)*(x768)))+(x783)+(((IkReal(-1.00000000000000))*(x779)))+(((cj6)*(x767)))+(((IkReal(-1.00000000000000))*(pz)*(x766))));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x766)))+(((IkReal(-1.00000000000000))*(x766)*(x768)))+(((IkReal(-1.00000000000000))*(pz)*(x771)))+(x784));
evalcond[2]=((((IkReal(-1.00000000000000))*(x783)))+(((IkReal(-1.00000000000000))*(x766)*(x776)))+(((IkReal(-1.00000000000000))*(x771)*(x773)))+(((cj7)*(x777)))+(((cj7)*(x778)))+(x779)+(((IkReal(-1.00000000000000))*(px)*(x766)*(x770)))+(((r01)*(x767))));
evalcond[3]=((((x767)*(x770)))+(((sj7)*(x776)))+(((IkReal(-1.00000000000000))*(x766)*(x773)))+(((IkReal(-1.00000000000000))*(x771)*(x777)))+(((IkReal(-1.00000000000000))*(x771)*(x778)))+(((cj7)*(px)*(r01)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(x784));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x785=((cj7)*(sj9));
IkReal x786=((IkReal(4615000.00000000))*(cj9));
IkReal x787=((IkReal(3475000.00000000))*(cj7));
IkReal x788=((cj6)*(px));
IkReal x789=((IkReal(3475000.00000000))*(sj7));
IkReal x790=((py)*(sj6));
IkReal x791=((IkReal(4615000.00000000))*(sj9));
IkReal x792=((pz)*(sj7));
IkReal x793=((IkReal(4615000.00000000))*(x788));
IkReal x794=((sj7)*(x790));
if( IKabs(((gconst5)*(((((x786)*(x794)))+(((IkReal(-4615000.00000000))*(x785)*(x790)))+(((x788)*(x789)))+(((IkReal(-1.00000000000000))*(x791)*(x792)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x786)))+(((sj7)*(x786)*(x788)))+(((IkReal(-1.00000000000000))*(x785)*(x793)))+(((IkReal(-1.00000000000000))*(pz)*(x787)))+(((IkReal(876850.000000000))*(sj9)))+(((x789)*(x790))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(sj7)*(x788)*(x791)))+(((IkReal(4615000.00000000))*(pz)*(x785)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x791)*(x794)))+(((IkReal(-1.00000000000000))*(x787)*(x790)))+(((IkReal(-1.00000000000000))*(x787)*(x788)))+(((IkReal(-1.00000000000000))*(x786)*(x792)))+(((IkReal(-1.00000000000000))*(pz)*(x789)))+(((IkReal(-1.00000000000000))*(cj7)*(x786)*(x788)))+(((IkReal(-1.00000000000000))*(cj7)*(x786)*(x790))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst5)*(((((x786)*(x794)))+(((IkReal(-4615000.00000000))*(x785)*(x790)))+(((x788)*(x789)))+(((IkReal(-1.00000000000000))*(x791)*(x792)))+(((IkReal(-1.00000000000000))*(cj7)*(pz)*(x786)))+(((sj7)*(x786)*(x788)))+(((IkReal(-1.00000000000000))*(x785)*(x793)))+(((IkReal(-1.00000000000000))*(pz)*(x787)))+(((IkReal(876850.000000000))*(sj9)))+(((x789)*(x790)))))), ((gconst5)*(((IkReal(660250.000000000))+(((IkReal(-1.00000000000000))*(sj7)*(x788)*(x791)))+(((IkReal(4615000.00000000))*(pz)*(x785)))+(((IkReal(876850.000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x791)*(x794)))+(((IkReal(-1.00000000000000))*(x787)*(x790)))+(((IkReal(-1.00000000000000))*(x787)*(x788)))+(((IkReal(-1.00000000000000))*(x786)*(x792)))+(((IkReal(-1.00000000000000))*(pz)*(x789)))+(((IkReal(-1.00000000000000))*(cj7)*(x786)*(x788)))+(((IkReal(-1.00000000000000))*(cj7)*(x786)*(x790)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x795=IKsin(j8);
IkReal x796=IKcos(j8);
IkReal x797=((IkReal(1.00000000000000))*(cj7));
IkReal x798=((px)*(sj7));
IkReal x799=((py)*(sj6));
IkReal x800=((IkReal(0.184600000000000))*(sj9));
IkReal x801=((r02)*(sj6));
IkReal x802=((IkReal(1.00000000000000))*(sj7));
IkReal x803=((IkReal(0.184600000000000))*(cj9));
IkReal x804=((py)*(r00));
IkReal x805=((IkReal(0.139000000000000))*(x795));
IkReal x806=((IkReal(0.139000000000000))*(x796));
IkReal x807=((cj6)*(pz)*(r01));
IkReal x808=((pz)*(r00)*(sj6));
IkReal x809=((cj6)*(py)*(r02));
IkReal x810=((x796)*(x800));
IkReal x811=((x795)*(x803));
IkReal x812=((x796)*(x803));
IkReal x813=((x795)*(x800));
IkReal x814=((x811)+(x805));
IkReal x815=((x812)+(x813)+(x806));
evalcond[0]=((((cj6)*(x798)))+(((sj7)*(x799)))+(((IkReal(-1.00000000000000))*(x810)))+(((IkReal(-1.00000000000000))*(pz)*(x797)))+(x814));
evalcond[1]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x797)*(x799)))+(((IkReal(-1.00000000000000))*(cj6)*(px)*(x797)))+(x815)+(((IkReal(-1.00000000000000))*(pz)*(x802))));
evalcond[2]=((((r01)*(x798)))+(((IkReal(-1.00000000000000))*(x797)*(x807)))+(((IkReal(-1.00000000000000))*(x814)))+(((cj7)*(x808)))+(((cj7)*(x809)))+(((IkReal(-1.00000000000000))*(px)*(x797)*(x801)))+(x810)+(((IkReal(-1.00000000000000))*(x802)*(x804))));
evalcond[3]=((((sj7)*(x807)))+(((IkReal(-1.00000000000000))*(x797)*(x804)))+(((x798)*(x801)))+(((cj7)*(px)*(r01)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(x815)+(((IkReal(-1.00000000000000))*(x802)*(x808)))+(((IkReal(-1.00000000000000))*(x802)*(x809))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x816=((IkReal(923.000000000000))*(cj9));
IkReal x817=((cj7)*(r02));
IkReal x818=((IkReal(5000.00000000000))*(cj10));
IkReal x819=((cj7)*(pz));
IkReal x820=((sj6)*(sj7));
IkReal x821=((IkReal(923.000000000000))*(sj9));
IkReal x822=((cj6)*(r00)*(sj7));
IkReal x823=((cj6)*(px)*(sj7));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(cj9)*(x818)*(x823)))+(((IkReal(-1.00000000000000))*(r01)*(x820)*(x821)))+(((x817)*(x821)))+(((cj9)*(x818)*(x819)))+(((IkReal(-1.00000000000000))*(x821)*(x822)))+(((IkReal(-1.00000000000000))*(cj9)*(py)*(x818)*(x820))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x816)*(x822)))+(((sj9)*(x818)*(x823)))+(((IkReal(-1.00000000000000))*(sj9)*(x818)*(x819)))+(((py)*(sj9)*(x818)*(x820)))+(((x816)*(x817)))+(((IkReal(-695.000000000000))*(x822)))+(((IkReal(-1.00000000000000))*(r01)*(x816)*(x820)))+(((IkReal(-695.000000000000))*(r01)*(x820)))+(((IkReal(695.000000000000))*(x817))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(cj9)*(x818)*(x823)))+(((IkReal(-1.00000000000000))*(r01)*(x820)*(x821)))+(((x817)*(x821)))+(((cj9)*(x818)*(x819)))+(((IkReal(-1.00000000000000))*(x821)*(x822)))+(((IkReal(-1.00000000000000))*(cj9)*(py)*(x818)*(x820)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x816)*(x822)))+(((sj9)*(x818)*(x823)))+(((IkReal(-1.00000000000000))*(sj9)*(x818)*(x819)))+(((py)*(sj9)*(x818)*(x820)))+(((x816)*(x817)))+(((IkReal(-695.000000000000))*(x822)))+(((IkReal(-1.00000000000000))*(r01)*(x816)*(x820)))+(((IkReal(-695.000000000000))*(r01)*(x820)))+(((IkReal(695.000000000000))*(x817)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x824=IKsin(j8);
IkReal x825=IKcos(j8);
IkReal x826=(pz)*(pz);
IkReal x827=(px)*(px);
IkReal x828=(py)*(py);
IkReal x829=((cj6)*(pz));
IkReal x830=((py)*(sj6));
IkReal x831=((IkReal(0.380000000000000))*(r02));
IkReal x832=((pp)*(sj6));
IkReal x833=((px)*(sj7));
IkReal x834=((IkReal(1.00000000000000))*(cj7));
IkReal x835=((cj9)*(sj10));
IkReal x836=((r02)*(sj6));
IkReal x837=((cj6)*(r00));
IkReal x838=((IkReal(0.0361000000000000))*(cj7));
IkReal x839=((IkReal(1.00000000000000))*(sj7));
IkReal x840=((IkReal(0.0513188000000000))*(cj10));
IkReal x841=((pp)*(r02));
IkReal x842=((cj6)*(px));
IkReal x843=((cj7)*(r02));
IkReal x844=((cj6)*(py));
IkReal x845=((cj7)*(r01));
IkReal x846=((IkReal(2.00000000000000))*(py));
IkReal x847=((IkReal(2.00000000000000))*(r02));
IkReal x848=((r01)*(sj7));
IkReal x849=((r02)*(sj7));
IkReal x850=((IkReal(2.00000000000000))*(r00));
IkReal x851=((r01)*(sj6));
IkReal x852=((py)*(r00));
IkReal x853=((IkReal(0.0533981600000000))*(cj9));
IkReal x854=((sj10)*(sj9));
IkReal x855=((IkReal(0.0147561600000000))*(sj9));
IkReal x856=((cj7)*(px));
IkReal x857=((IkReal(0.380000000000000))*(r00));
IkReal x858=((r01)*(x834));
IkReal x859=((IkReal(0.184600000000000))*(x825));
IkReal x860=((IkReal(0.139000000000000))*(x824));
IkReal x861=((IkReal(0.184600000000000))*(x824));
IkReal x862=((IkReal(0.139000000000000))*(x825));
IkReal x863=((pz)*(r00)*(sj6));
IkReal x864=((sj6)*(x848));
IkReal x865=((IkReal(2.00000000000000))*(x828));
IkReal x866=((IkReal(2.00000000000000))*(x826));
IkReal x867=((IkReal(2.00000000000000))*(x827));
IkReal x868=((cj10)*(x825));
IkReal x869=((cj10)*(x824));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x834)))+(((sj9)*(x869)))+(((sj7)*(x837)))+(((cj9)*(x868)))+(x864));
evalcond[1]=((((IkReal(-1.00000000000000))*(pz)*(x834)))+(((sj7)*(x830)))+(((IkReal(-1.00000000000000))*(sj9)*(x859)))+(((cj9)*(x861)))+(((cj6)*(x833)))+(x860));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x839)))+(((sj9)*(x868)))+(((IkReal(-1.00000000000000))*(x834)*(x851)))+(((IkReal(-1.00000000000000))*(x834)*(x837)))+(((IkReal(-1.00000000000000))*(cj9)*(x869))));
evalcond[3]=((IkReal(0.190000000000000))+(((sj9)*(x861)))+(((IkReal(-1.00000000000000))*(pz)*(x839)))+(((cj9)*(x859)))+(((IkReal(-1.00000000000000))*(x830)*(x834)))+(((IkReal(-1.00000000000000))*(x834)*(x842)))+(x862));
evalcond[4]=((((sj10)*(x860)))+(((IkReal(-1.00000000000000))*(x839)*(x852)))+(((IkReal(-1.00000000000000))*(x829)*(x858)))+(((x843)*(x844)))+(((r01)*(x833)))+(((IkReal(-1.00000000000000))*(px)*(x834)*(x836)))+(((x835)*(x861)))+(((IkReal(-1.00000000000000))*(x854)*(x859)))+(((cj7)*(x863))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x854)*(x861)))+(((IkReal(-1.00000000000000))*(r02)*(x839)*(x844)))+(((IkReal(-1.00000000000000))*(x834)*(x852)))+(((x833)*(x836)))+(((IkReal(-1.00000000000000))*(x839)*(x863)))+(((IkReal(-1.00000000000000))*(x835)*(x859)))+(((x829)*(x848)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(sj10)*(x862)))+(((px)*(x845))));
evalcond[6]=((((sj7)*(x826)*(x847)))+(((IkReal(-1.00000000000000))*(pp)*(x834)*(x837)))+(((pz)*(x846)*(x848)))+(((IkReal(-1.00000000000000))*(pz)*(x831)))+(((IkReal(2.00000000000000))*(pz)*(x830)*(x843)))+(((IkReal(-1.00000000000000))*(x853)*(x869)))+(((cj7)*(x837)*(x867)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((x855)*(x868)))+(((IkReal(2.00000000000000))*(px)*(x829)*(x843)))+(((sj6)*(x845)*(x865)))+(((x830)*(x850)*(x856)))+(((IkReal(-1.00000000000000))*(x824)*(x840)))+(((x837)*(x838)))+(((IkReal(-1.00000000000000))*(x832)*(x858)))+(((x838)*(x851)))+(((IkReal(0.0361000000000000))*(x849)))+(((pz)*(x833)*(x850)))+(((IkReal(-1.00000000000000))*(x839)*(x841)))+(((x842)*(x845)*(x846)))+(((IkReal(-1.00000000000000))*(px)*(x857))));
evalcond[7]=((((pp)*(sj7)*(x837)))+(((pz)*(x845)*(x846)))+(((IkReal(0.0361000000000000))*(x864)))+(((IkReal(-1.00000000000000))*(sj7)*(x837)*(x867)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)*(x830)*(x847)))+(((IkReal(-1.00000000000000))*(r02)*(x838)))+(((IkReal(-1.00000000000000))*(x829)*(x857)))+(((x832)*(x848)))+(((IkReal(-2.00000000000000))*(r01)*(x833)*(x844)))+(((x855)*(x869)))+(((IkReal(-1.00000000000000))*(x830)*(x833)*(x850)))+(((IkReal(-1.00000000000000))*(x864)*(x865)))+(((IkReal(0.0361000000000000))*(sj7)*(x837)))+(((IkReal(-0.380000000000000))*(pz)*(x851)))+(((IkReal(-1.00000000000000))*(x834)*(x841)))+(((x830)*(x831)))+(((IkReal(-1.00000000000000))*(x829)*(x833)*(x847)))+(((x853)*(x868)))+(((x843)*(x866)))+(((pz)*(x850)*(x856)))+(((x825)*(x840)))+(((x831)*(x842))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x870=((cj6)*(r00));
IkReal x871=((cj7)*(cj9));
IkReal x872=((r01)*(sj6));
IkReal x873=((cj7)*(sj9));
IkReal x874=((sj7)*(sj9));
IkReal x875=((IkReal(1.00000000000000))*(cj9)*(sj7));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x870)*(x871)))+(((IkReal(-1.00000000000000))*(x870)*(x874)))+(((IkReal(-1.00000000000000))*(x872)*(x874)))+(((IkReal(-1.00000000000000))*(x871)*(x872)))+(((r02)*(x873)))+(((IkReal(-1.00000000000000))*(r02)*(x875))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((x872)*(x873)))+(((IkReal(-1.00000000000000))*(x872)*(x875)))+(((x870)*(x873)))+(((r02)*(x871)))+(((r02)*(x874)))+(((IkReal(-1.00000000000000))*(x870)*(x875))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x870)*(x871)))+(((IkReal(-1.00000000000000))*(x870)*(x874)))+(((IkReal(-1.00000000000000))*(x872)*(x874)))+(((IkReal(-1.00000000000000))*(x871)*(x872)))+(((r02)*(x873)))+(((IkReal(-1.00000000000000))*(r02)*(x875)))))), ((gconst1)*(((((x872)*(x873)))+(((IkReal(-1.00000000000000))*(x872)*(x875)))+(((x870)*(x873)))+(((r02)*(x871)))+(((r02)*(x874)))+(((IkReal(-1.00000000000000))*(x870)*(x875)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x876=IKsin(j8);
IkReal x877=IKcos(j8);
IkReal x878=(pz)*(pz);
IkReal x879=(px)*(px);
IkReal x880=(py)*(py);
IkReal x881=((cj6)*(pz));
IkReal x882=((py)*(sj6));
IkReal x883=((IkReal(0.380000000000000))*(r02));
IkReal x884=((pp)*(sj6));
IkReal x885=((px)*(sj7));
IkReal x886=((IkReal(1.00000000000000))*(cj7));
IkReal x887=((cj9)*(sj10));
IkReal x888=((r02)*(sj6));
IkReal x889=((cj6)*(r00));
IkReal x890=((IkReal(0.0361000000000000))*(cj7));
IkReal x891=((IkReal(1.00000000000000))*(sj7));
IkReal x892=((IkReal(0.0513188000000000))*(cj10));
IkReal x893=((pp)*(r02));
IkReal x894=((cj6)*(px));
IkReal x895=((cj7)*(r02));
IkReal x896=((cj6)*(py));
IkReal x897=((cj7)*(r01));
IkReal x898=((IkReal(2.00000000000000))*(py));
IkReal x899=((IkReal(2.00000000000000))*(r02));
IkReal x900=((r01)*(sj7));
IkReal x901=((r02)*(sj7));
IkReal x902=((IkReal(2.00000000000000))*(r00));
IkReal x903=((r01)*(sj6));
IkReal x904=((py)*(r00));
IkReal x905=((IkReal(0.0533981600000000))*(cj9));
IkReal x906=((sj10)*(sj9));
IkReal x907=((IkReal(0.0147561600000000))*(sj9));
IkReal x908=((cj7)*(px));
IkReal x909=((IkReal(0.380000000000000))*(r00));
IkReal x910=((r01)*(x886));
IkReal x911=((IkReal(0.184600000000000))*(x877));
IkReal x912=((IkReal(0.139000000000000))*(x876));
IkReal x913=((IkReal(0.184600000000000))*(x876));
IkReal x914=((IkReal(0.139000000000000))*(x877));
IkReal x915=((pz)*(r00)*(sj6));
IkReal x916=((sj6)*(x900));
IkReal x917=((IkReal(2.00000000000000))*(x880));
IkReal x918=((IkReal(2.00000000000000))*(x878));
IkReal x919=((IkReal(2.00000000000000))*(x879));
IkReal x920=((cj10)*(x877));
IkReal x921=((cj10)*(x876));
evalcond[0]=((((sj7)*(x889)))+(((cj9)*(x920)))+(((IkReal(-1.00000000000000))*(r02)*(x886)))+(((sj9)*(x921)))+(x916));
evalcond[1]=((((IkReal(-1.00000000000000))*(pz)*(x886)))+(((IkReal(-1.00000000000000))*(sj9)*(x911)))+(((sj7)*(x882)))+(((cj9)*(x913)))+(x912)+(((cj6)*(x885))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x886)*(x889)))+(((IkReal(-1.00000000000000))*(cj9)*(x921)))+(((IkReal(-1.00000000000000))*(x886)*(x903)))+(((IkReal(-1.00000000000000))*(r02)*(x891)))+(((sj9)*(x920))));
evalcond[3]=((IkReal(0.190000000000000))+(((IkReal(-1.00000000000000))*(x882)*(x886)))+(((IkReal(-1.00000000000000))*(pz)*(x891)))+(((sj9)*(x913)))+(((cj9)*(x911)))+(x914)+(((IkReal(-1.00000000000000))*(x886)*(x894))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x891)*(x904)))+(((IkReal(-1.00000000000000))*(x906)*(x911)))+(((x887)*(x913)))+(((IkReal(-1.00000000000000))*(px)*(x886)*(x888)))+(((x895)*(x896)))+(((r01)*(x885)))+(((sj10)*(x912)))+(((cj7)*(x915)))+(((IkReal(-1.00000000000000))*(x881)*(x910))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x906)*(x913)))+(((IkReal(-1.00000000000000))*(r02)*(x891)*(x896)))+(((IkReal(-1.00000000000000))*(x891)*(x915)))+(((px)*(x897)))+(((IkReal(-1.00000000000000))*(x886)*(x904)))+(((IkReal(-1.00000000000000))*(x887)*(x911)))+(((x881)*(x900)))+(((IkReal(-0.190000000000000))*(cj6)*(r01)))+(((IkReal(0.190000000000000))*(r00)*(sj6)))+(((x885)*(x888)))+(((IkReal(-1.00000000000000))*(sj10)*(x914))));
evalcond[6]=((((sj6)*(x897)*(x917)))+(((sj7)*(x878)*(x899)))+(((IkReal(-1.00000000000000))*(x905)*(x921)))+(((IkReal(-1.00000000000000))*(px)*(x909)))+(((pz)*(x898)*(x900)))+(((x882)*(x902)*(x908)))+(((x907)*(x920)))+(((x890)*(x903)))+(((IkReal(-1.00000000000000))*(pz)*(x883)))+(((IkReal(-0.380000000000000))*(py)*(r01)))+(((IkReal(-1.00000000000000))*(x876)*(x892)))+(((IkReal(-1.00000000000000))*(x884)*(x910)))+(((IkReal(2.00000000000000))*(pz)*(x882)*(x895)))+(((pz)*(x885)*(x902)))+(((x894)*(x897)*(x898)))+(((x889)*(x890)))+(((IkReal(2.00000000000000))*(px)*(x881)*(x895)))+(((IkReal(0.0361000000000000))*(x901)))+(((IkReal(-1.00000000000000))*(x891)*(x893)))+(((cj7)*(x889)*(x919)))+(((IkReal(-1.00000000000000))*(pp)*(x886)*(x889))));
evalcond[7]=((((x884)*(x900)))+(((IkReal(-1.00000000000000))*(x882)*(x885)*(x902)))+(((IkReal(0.0361000000000000))*(sj7)*(x889)))+(((x907)*(x921)))+(((pp)*(sj7)*(x889)))+(((x895)*(x918)))+(((IkReal(-1.00000000000000))*(sj7)*(x889)*(x919)))+(((x883)*(x894)))+(((x882)*(x883)))+(((x877)*(x892)))+(((pz)*(x897)*(x898)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)*(x882)*(x899)))+(((pz)*(x902)*(x908)))+(((x905)*(x920)))+(((IkReal(-1.00000000000000))*(r02)*(x890)))+(((IkReal(0.0361000000000000))*(x916)))+(((IkReal(-2.00000000000000))*(r01)*(x885)*(x896)))+(((IkReal(-1.00000000000000))*(x881)*(x909)))+(((IkReal(-0.380000000000000))*(pz)*(x903)))+(((IkReal(-1.00000000000000))*(x916)*(x917)))+(((IkReal(-1.00000000000000))*(x881)*(x885)*(x899)))+(((IkReal(-1.00000000000000))*(x886)*(x893))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(5);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
}
}
return solutions.GetNumSolutions()>0;
}
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int& numroots)
{
    using std::complex;
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[4];
    const int maxsteps = 110;
    for(int i = 0; i < 4; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[4];
    IkReal err[4];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 4; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 4; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 4; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 4; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[4] = {false};
    for(int i = 0; i < 4; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 4; ++j) {
                if( abs(roots[i]-roots[j]) < 8*tolsqrt ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - kurtana (43baf2ca0e1f73aea41e292e0d2973d5)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
